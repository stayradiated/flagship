export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  _int4: { input: any; output: any; }
  _text: { input: any; output: any; }
  bigint: { input: any; output: any; }
  custom_model: { input: any; output: any; }
  date: { input: any; output: any; }
  inet: { input: any; output: any; }
  json: { input: any; output: any; }
  jsonb: { input: unknown; output: unknown; }
  numeric: { input: number; output: number; }
  oid: { input: any; output: any; }
  person_request_statuses: { input: any; output: any; }
  timesheet_lock_status: { input: any; output: any; }
  timestamp: { input: string; output: string; }
  timestamptz: { input: string; output: string; }
  uuid: { input: string; output: string; }
};

export type ActualBulkChangesInput = {
  delete?: InputMaybe<Array<InputMaybe<ActualUpdate>>>;
  update?: InputMaybe<Array<InputMaybe<ActualUpdate>>>;
};

export type ActualBulkChangesOutput = {
  __typename?: 'ActualBulkChangesOutput';
  actual?: Maybe<Actuals>;
  id?: Maybe<Scalars['Int']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  project?: Maybe<Projects>;
  project_id?: Maybe<Scalars['Int']['output']>;
  status?: Maybe<Scalars['String']['output']>;
};

export type ActualUpdate = {
  billable_minutes?: InputMaybe<Scalars['Int']['input']>;
  billable_note?: InputMaybe<Scalars['String']['input']>;
  date?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  nonbillable_minutes?: InputMaybe<Scalars['Int']['input']>;
  nonbillable_note?: InputMaybe<Scalars['String']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  phase_id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
};

export enum ApiTokenPermission {
  Read = 'read',
  Write = 'write'
}

export type AssignmentBulkChangesInput = {
  create?: InputMaybe<Array<InputMaybe<AssignmentUpdate>>>;
  delete?: InputMaybe<Array<InputMaybe<AssignmentUpdate>>>;
  update?: InputMaybe<Array<InputMaybe<AssignmentUpdate>>>;
};

export type AssignmentBulkChangesOutput = {
  __typename?: 'AssignmentBulkChangesOutput';
  assignment?: Maybe<Assignments>;
  id?: Maybe<Scalars['Int']['output']>;
  person?: Maybe<People>;
  person_id?: Maybe<Scalars['Int']['output']>;
  project?: Maybe<Projects>;
  project_id?: Maybe<Scalars['Int']['output']>;
  status?: Maybe<Scalars['String']['output']>;
};

export type AssignmentUpdate = {
  end_date?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_billable?: InputMaybe<Scalars['Boolean']['input']>;
  is_template?: InputMaybe<Scalars['Boolean']['input']>;
  minutes_per_day?: InputMaybe<Scalars['Int']['input']>;
  non_working_day?: InputMaybe<Scalars['Boolean']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  phase_id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
  start_date?: InputMaybe<Scalars['String']['input']>;
  total_minutes?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['String']['input']>;
};

/** Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'. */
export type Boolean_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['Boolean']['input']>;
  _gt?: InputMaybe<Scalars['Boolean']['input']>;
  _gte?: InputMaybe<Scalars['Boolean']['input']>;
  _in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['Boolean']['input']>;
  _lte?: InputMaybe<Scalars['Boolean']['input']>;
  _neq?: InputMaybe<Scalars['Boolean']['input']>;
  _nin?: InputMaybe<Array<Scalars['Boolean']['input']>>;
};

export type CalculatedActual = {
  __typename?: 'CalculatedActual';
  actual_billable_amount?: Maybe<Scalars['Float']['output']>;
  actual_billable_minutes?: Maybe<Scalars['Float']['output']>;
  actual_cost?: Maybe<Scalars['Float']['output']>;
  actual_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
  combined_billable_amount: Scalars['Float']['output'];
  combined_billable_minutes: Scalars['Float']['output'];
  combined_cost: Scalars['Float']['output'];
  combined_nonbillable_minutes: Scalars['Float']['output'];
  date: Scalars['String']['output'];
  has_actual: Scalars['Boolean']['output'];
  is_placeholder: Scalars['Boolean']['output'];
  person_id: Scalars['Int']['output'];
  phase_id?: Maybe<Scalars['Int']['output']>;
  project_id: Scalars['Int']['output'];
  role_id: Scalars['Int']['output'];
  scheduled_billable_amount: Scalars['Float']['output'];
  scheduled_billable_minutes: Scalars['Float']['output'];
  scheduled_cost: Scalars['Float']['output'];
  scheduled_nonbillable_minutes: Scalars['Float']['output'];
};

export type CountriesGetOutput = {
  __typename?: 'CountriesGetOutput';
  countries?: Maybe<Array<Scalars['jsonb']['output']>>;
};

export type CreateApiTokenResult = {
  __typename?: 'CreateApiTokenResult';
  account?: Maybe<Accounts>;
  accountId: Scalars['Int']['output'];
  api_token?: Maybe<Api_Tokens>;
  token: Scalars['String']['output'];
  tokenId: Scalars['Int']['output'];
};

export type CustomFieldSelectUpdateInput = {
  account_id: Scalars['Int']['input'];
  custom_select_options?: InputMaybe<Array<OptionInput>>;
  description?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['Int']['input'];
  model: ModelInput;
  name: Scalars['String']['input'];
  required: Scalars['Boolean']['input'];
  show_in_planner: Scalars['Boolean']['input'];
  single_select: Scalars['Boolean']['input'];
};

export type CustomHoliday = {
  date: Scalars['String']['input'];
  holidays_group_id: Scalars['Int']['input'];
  id?: InputMaybe<Scalars['Int']['input']>;
  name: Scalars['String']['input'];
  type: Scalars['String']['input'];
};

export type DeleteProjectResult = {
  __typename?: 'DeleteProjectResult';
  account?: Maybe<Accounts>;
  accountId: Scalars['Int']['output'];
};

export type ExtPersonLinkUpdateInput = {
  link_ext_person_ids?: InputMaybe<Array<Scalars['Int']['input']>>;
  person_id: Scalars['Int']['input'];
  unlink_ext_person_ids?: InputMaybe<Array<Scalars['Int']['input']>>;
};

export type ExtPersonLinkUpdateOutput = {
  __typename?: 'ExtPersonLinkUpdateOutput';
  account?: Maybe<Accounts>;
  account_id: Scalars['Int']['output'];
  person?: Maybe<People>;
  person_id: Scalars['Int']['output'];
};

export type HolidaysBulkUpdateInput = {
  custom_holidays_to_add: Array<InputMaybe<CustomHoliday>>;
  holidays_group_id: Scalars['Int']['input'];
  holidays_to_delete_ids: Array<InputMaybe<Scalars['Int']['input']>>;
  public_holidays_to_add: Array<InputMaybe<PublicHoliday>>;
};

export type HolidaysBulkUpdateOutput = {
  __typename?: 'HolidaysBulkUpdateOutput';
  account?: Maybe<Accounts>;
  account_id: Scalars['Int']['output'];
};

export type HolidaysGetOutput = {
  __typename?: 'HolidaysGetOutput';
  holidays?: Maybe<Array<Scalars['jsonb']['output']>>;
};

export type HolidaysTimeOffBulkCreateInput = {
  holidays_group_id: Scalars['Int']['input'];
  people_ids: Array<InputMaybe<Scalars['Int']['input']>>;
};

export type HolidaysTimeOffBulkCreateOutput = {
  __typename?: 'HolidaysTimeOffBulkCreateOutput';
  account?: Maybe<Accounts>;
  account_id: Scalars['Int']['output'];
};

export type HolidaysTimeOffBulkDeleteInput = {
  people_ids: Array<InputMaybe<Scalars['Int']['input']>>;
};

export type HolidaysTimeOffBulkDeleteOutput = {
  __typename?: 'HolidaysTimeOffBulkDeleteOutput';
  account?: Maybe<Accounts>;
  account_id: Scalars['Int']['output'];
};

/** Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'. */
export type Int_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['Int']['input']>;
  _gt?: InputMaybe<Scalars['Int']['input']>;
  _gte?: InputMaybe<Scalars['Int']['input']>;
  _in?: InputMaybe<Array<Scalars['Int']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['Int']['input']>;
  _lte?: InputMaybe<Scalars['Int']['input']>;
  _neq?: InputMaybe<Scalars['Int']['input']>;
  _nin?: InputMaybe<Array<Scalars['Int']['input']>>;
};

export type IntegrationCreateInput = {
  category: Scalars['String']['input'];
  config?: InputMaybe<Scalars['json']['input']>;
  external_id?: InputMaybe<Scalars['String']['input']>;
  integration_service_id: Scalars['Int']['input'];
  token?: InputMaybe<Scalars['String']['input']>;
};

export type IntegrationCreateOutput = {
  __typename?: 'IntegrationCreateOutput';
  account?: Maybe<Accounts>;
  account_id: Scalars['Int']['output'];
  integration?: Maybe<Integration>;
  integration_id: Scalars['Int']['output'];
};

export type IntegrationDeleteInput = {
  integration_id: Scalars['Int']['input'];
};

export type IntegrationDeleteOutput = {
  __typename?: 'IntegrationDeleteOutput';
  account?: Maybe<Accounts>;
  account_id: Scalars['Int']['output'];
};

export type IntegrationSyncInput = {
  force_sync_merge?: InputMaybe<Scalars['Boolean']['input']>;
  integration_id: Scalars['Int']['input'];
};

export type IntegrationSyncOutput = {
  __typename?: 'IntegrationSyncOutput';
  account?: Maybe<Accounts>;
  account_id: Scalars['Int']['output'];
  integration?: Maybe<Integration>;
  integration_id: Scalars['Int']['output'];
  integration_sync?: Maybe<Integration_Sync>;
  integratoion_sync_id?: Maybe<Scalars['Int']['output']>;
};

export type IntegrationUpdateInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  integration_id: Scalars['Int']['input'];
  public_token?: InputMaybe<Scalars['String']['input']>;
};

export type IntegrationUpdateOutput = {
  __typename?: 'IntegrationUpdateOutput';
  account?: Maybe<Accounts>;
  account_id: Scalars['Int']['output'];
  integration?: Maybe<Integration>;
  integration_id: Scalars['Int']['output'];
};

export type InvitationRenewInput = {
  invitation_id: Scalars['bigint']['input'];
};

export type InvitationRenewOutput = {
  __typename?: 'InvitationRenewOutput';
  account_id: Scalars['bigint']['output'];
  invitation?: Maybe<Invitations>;
  invitation_id: Scalars['bigint']['output'];
};

export type MergeIntegration = {
  __typename?: 'MergeIntegration';
  link_token: Scalars['String']['output'];
};

export enum ModelInput {
  Person = 'PERSON',
  Project = 'PROJECT'
}

export type NewProjectInput = {
  client_id?: InputMaybe<Scalars['Int']['input']>;
  client_name?: InputMaybe<Scalars['String']['input']>;
  confirmed: Scalars['Boolean']['input'];
  custom_values?: InputMaybe<ProjectInputCustomValues>;
  editor_ids?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  emoji?: InputMaybe<Scalars['String']['input']>;
  is_template: Scalars['Boolean']['input'];
  pricing_model: Scalars['String']['input'];
  rate_card_id: Scalars['Int']['input'];
  references?: InputMaybe<Scalars['jsonb']['input']>;
  tags?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  team_id?: InputMaybe<Scalars['Int']['input']>;
};

export type OptionInput = {
  account_id: Scalars['Int']['input'];
  custom_select_type_id: Scalars['Int']['input'];
  id?: InputMaybe<Scalars['Int']['input']>;
  name: Scalars['String']['input'];
};

export type OtherCostBulkCreateInput = {
  charge: Scalars['Float']['input'];
  cost: Scalars['Float']['input'];
  date: Scalars['String']['input'];
  name: Scalars['String']['input'];
};

export type OtherCostBulkCreateOutput = {
  __typename?: 'OtherCostBulkCreateOutput';
  account?: Maybe<Accounts>;
  account_id: Scalars['Int']['output'];
  project?: Maybe<Projects>;
  project_id: Scalars['Int']['output'];
};

export type OtherCostBulkUpdateInput = {
  charge: Scalars['Float']['input'];
  cost: Scalars['Float']['input'];
  date: Scalars['String']['input'];
  id: Scalars['Int']['input'];
  name: Scalars['String']['input'];
};

export type OtherCostBulkUpdateOutput = {
  __typename?: 'OtherCostBulkUpdateOutput';
  account?: Maybe<Accounts>;
  account_id: Scalars['Int']['output'];
  project?: Maybe<Projects>;
  project_id: Scalars['Int']['output'];
};

export type PersonBulkCreate = {
  email?: InputMaybe<Scalars['String']['input']>;
  first_name: Scalars['String']['input'];
  last_name: Scalars['String']['input'];
  role_name: Scalars['String']['input'];
};

export type PersonBulkCreateInput = {
  people: Array<PersonBulkCreate>;
};

export type PersonBulkCreateOutput = {
  __typename?: 'PersonBulkCreateOutput';
  account?: Maybe<Accounts>;
  account_id: Scalars['Int']['output'];
  person?: Maybe<People>;
  person_id: Scalars['Int']['output'];
};

export type PersonBulkUpdateInput = {
  client_date: Scalars['date']['input'];
  people: Array<PersonBulkUpdateInputPeople>;
};

export type PersonBulkUpdateInputPeople = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  contract?: InputMaybe<PersonBulkUpdateInputPeopleContract>;
  email?: InputMaybe<Scalars['String']['input']>;
  first_name?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['Int']['input'];
  last_name?: InputMaybe<Scalars['String']['input']>;
  tags?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  team_id?: InputMaybe<Scalars['Int']['input']>;
};

export type PersonBulkUpdateInputPeopleContract = {
  cost?: InputMaybe<Scalars['Float']['input']>;
  create_new?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  minutes_per_day?: InputMaybe<Scalars['Int']['input']>;
  role?: InputMaybe<PersonBulkUpdateInputPeopleContractRole>;
  rostered_days?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
};

export type PersonBulkUpdateInputPeopleContractRole = {
  create_new?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type PersonBulkUpdateOutput = {
  __typename?: 'PersonBulkUpdateOutput';
  account?: Maybe<Accounts>;
  account_id: Scalars['Int']['output'];
};

export type PersonCompetencies = {
  level?: InputMaybe<Scalars['Int']['input']>;
  skill: PersonSkill;
};

export type PersonCreateInput = {
  competencies?: InputMaybe<Array<PersonCompetencies>>;
  cost?: InputMaybe<Scalars['Float']['input']>;
  custom_values?: InputMaybe<PersonInputCustomValues>;
  email?: InputMaybe<Scalars['String']['input']>;
  employment_type?: InputMaybe<Scalars['String']['input']>;
  end_date?: InputMaybe<Scalars['String']['input']>;
  first_name: Scalars['String']['input'];
  holidays_group_id?: InputMaybe<Scalars['Int']['input']>;
  last_name: Scalars['String']['input'];
  minutes_per_day?: InputMaybe<Scalars['Int']['input']>;
  references?: InputMaybe<Scalars['jsonb']['input']>;
  role_id: Scalars['Int']['input'];
  rostered_days?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  start_date?: InputMaybe<Scalars['String']['input']>;
  tags?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  team_id?: InputMaybe<Scalars['Int']['input']>;
  team_name?: InputMaybe<Scalars['String']['input']>;
};

export type PersonCreateOutput = {
  __typename?: 'PersonCreateOutput';
  account?: Maybe<Accounts>;
  account_id?: Maybe<Scalars['Int']['output']>;
  created_person_id?: Maybe<Scalars['Int']['output']>;
  person?: Maybe<People>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

export type PersonDeleteInput = {
  person_id: Scalars['Int']['input'];
};

export type PersonDeleteOutput = {
  __typename?: 'PersonDeleteOutput';
  account?: Maybe<Accounts>;
  account_id: Scalars['Int']['output'];
  affected_projects: Array<PersonDeleteOutputAffectedProject>;
};

export type PersonDeleteOutputAffectedProject = {
  __typename?: 'PersonDeleteOutputAffectedProject';
  id: Scalars['Int']['output'];
  project?: Maybe<Projects>;
};

export type PersonInputCustomValues = {
  select?: InputMaybe<Array<InputMaybe<PersonInputCustomValuesSelect>>>;
  text?: InputMaybe<Array<InputMaybe<PersonInputCustomValuesText>>>;
};

export type PersonInputCustomValuesSelect = {
  optionId: Scalars['Int']['input'];
  typeId: Scalars['Int']['input'];
};

export type PersonInputCustomValuesText = {
  typeId: Scalars['Int']['input'];
  value: Scalars['String']['input'];
};

export type PersonNoteCreateInput = {
  note: Scalars['String']['input'];
  person_id: Scalars['Int']['input'];
};

export type PersonNoteCreateOutput = {
  __typename?: 'PersonNoteCreateOutput';
  id: Scalars['Int']['output'];
  note?: Maybe<People_Notes>;
  person?: Maybe<People>;
  person_id: Scalars['Int']['output'];
  user?: Maybe<Users>;
  user_id: Scalars['Int']['output'];
};

export type PersonNoteUpdateInput = {
  id: Scalars['Int']['input'];
  note: Scalars['String']['input'];
};

export type PersonNoteUpdateOutput = {
  __typename?: 'PersonNoteUpdateOutput';
  id: Scalars['Int']['output'];
  note?: Maybe<People_Notes>;
  user?: Maybe<Users>;
  user_id: Scalars['Int']['output'];
};

export type PersonSkill = {
  name: Scalars['String']['input'];
};

export type PersonUpdateInput = {
  contract?: InputMaybe<PersonUpdateInputContract>;
  person?: InputMaybe<PersonUpdateInputPerson>;
};

export type PersonUpdateInputContract = {
  contract_type?: InputMaybe<Scalars['String']['input']>;
  cost?: InputMaybe<Scalars['Float']['input']>;
  employment_type: Scalars['String']['input'];
  end_date?: InputMaybe<Scalars['String']['input']>;
  minutes_per_day: Scalars['Float']['input'];
  role_id: Scalars['Int']['input'];
  rostered_days: Array<InputMaybe<Scalars['Int']['input']>>;
  start_date?: InputMaybe<Scalars['String']['input']>;
};

export type PersonUpdateInputPerson = {
  competencies?: InputMaybe<Array<PersonCompetencies>>;
  custom_values?: InputMaybe<PersonInputCustomValues>;
  email?: InputMaybe<Scalars['String']['input']>;
  first_name: Scalars['String']['input'];
  holidays_group_id?: InputMaybe<Scalars['Int']['input']>;
  last_name: Scalars['String']['input'];
  person_id: Scalars['Int']['input'];
  references: Scalars['jsonb']['input'];
  tags: Array<InputMaybe<Scalars['String']['input']>>;
  team_id?: InputMaybe<Scalars['Int']['input']>;
  team_name?: InputMaybe<Scalars['String']['input']>;
};

export type PersonUpdateOutput = {
  __typename?: 'PersonUpdateOutput';
  account?: Maybe<Accounts>;
  account_id?: Maybe<Scalars['Int']['output']>;
  person?: Maybe<People>;
  person_id?: Maybe<Scalars['Int']['output']>;
};

export type PlaceholderBulkCreate = {
  competencies?: InputMaybe<Array<PersonCompetencies>>;
  cost?: InputMaybe<Scalars['Float']['input']>;
  custom_values?: InputMaybe<PersonInputCustomValues>;
  first_name?: InputMaybe<Scalars['String']['input']>;
  last_name?: InputMaybe<Scalars['String']['input']>;
  role_id: Scalars['Int']['input'];
  tags?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  team_id?: InputMaybe<Scalars['Int']['input']>;
};

export type PlaceholderBulkCreateInput = {
  placeholders: Array<PlaceholderBulkCreate>;
};

export type PlaceholderBulkCreateOutput = {
  __typename?: 'PlaceholderBulkCreateOutput';
  account?: Maybe<Accounts>;
  account_id: Scalars['Int']['output'];
  person?: Maybe<People>;
  person_id: Scalars['Int']['output'];
};

export type PlaceholderDeleteInput = {
  person_id: Scalars['Int']['input'];
};

export type PlaceholderDeleteOutput = {
  __typename?: 'PlaceholderDeleteOutput';
  account?: Maybe<Accounts>;
  account_id: Scalars['Int']['output'];
};

export type PlaceholderUpdateInput = {
  competencies?: InputMaybe<Array<PersonCompetencies>>;
  cost?: InputMaybe<Scalars['Float']['input']>;
  custom_values?: InputMaybe<PersonInputCustomValues>;
  first_name: Scalars['String']['input'];
  last_name: Scalars['String']['input'];
  person_id: Scalars['Int']['input'];
  role_id: Scalars['Int']['input'];
  tags?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  team_id?: InputMaybe<Scalars['Int']['input']>;
};

export type PlaceholderUpdateOutput = {
  __typename?: 'PlaceholderUpdateOutput';
  account?: Maybe<Accounts>;
  account_id?: Maybe<Scalars['Int']['output']>;
  person?: Maybe<People>;
  person_id?: Maybe<Scalars['Int']['output']>;
};

export type PlannerChangeDateOutput = {
  __typename?: 'PlannerChangeDateOutput';
  account?: Maybe<Accounts>;
  account_id?: Maybe<Scalars['Int']['output']>;
};

export type ProjectBudgetUpdateInput = {
  expenses_budget?: InputMaybe<Scalars['Float']['input']>;
  pricing_model?: InputMaybe<Scalars['String']['input']>;
  project_id: Scalars['Int']['input'];
  rate_card_id?: InputMaybe<Scalars['Int']['input']>;
  rate_type?: InputMaybe<Scalars['String']['input']>;
  rates?: InputMaybe<Array<InputMaybe<ProjectBudgetUpdateInputRate>>>;
  roles?: InputMaybe<Array<InputMaybe<ProjectBudgetUpdateInputRole>>>;
  total_budget?: InputMaybe<Scalars['Float']['input']>;
  unallocated_project_role_ids?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
};

export type ProjectBudgetUpdateInputRate = {
  id?: InputMaybe<Scalars['Int']['input']>;
  project_id: Scalars['Int']['input'];
  rate: Scalars['Float']['input'];
  role_id: Scalars['Int']['input'];
};

export type ProjectBudgetUpdateInputRole = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  estimated_minutes?: InputMaybe<Scalars['Int']['input']>;
  id: Scalars['Int']['input'];
  name: Scalars['String']['input'];
  project_role_id?: InputMaybe<Scalars['Int']['input']>;
};

export type ProjectBudgetUpdateOutput = {
  __typename?: 'ProjectBudgetUpdateOutput';
  account?: Maybe<Accounts>;
  account_id?: Maybe<Scalars['Int']['output']>;
  project?: Maybe<Projects>;
  project_id?: Maybe<Scalars['Int']['output']>;
};

export type ProjectBulkCreateInput = {
  projects: Array<ProjectBulkCreateInputProject>;
};

export type ProjectBulkCreateInputProject = {
  client_name?: InputMaybe<Scalars['String']['input']>;
  editor_ids?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  name: Scalars['String']['input'];
  pricing_model: Scalars['String']['input'];
};

export type ProjectBulkCreateOutput = {
  __typename?: 'ProjectBulkCreateOutput';
  project?: Maybe<Projects>;
  project_id: Scalars['Int']['output'];
};

export type ProjectBulkUpdateInput = {
  projects: Array<ProjectBulkUpdateInputProject>;
};

export type ProjectBulkUpdateInputProject = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  client_id?: InputMaybe<Scalars['Int']['input']>;
  confirmed?: InputMaybe<Scalars['Boolean']['input']>;
  editor_ids?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  id: Scalars['Int']['input'];
  name?: InputMaybe<Scalars['String']['input']>;
  priority?: InputMaybe<Scalars['String']['input']>;
  tags?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  team_id?: InputMaybe<Scalars['Int']['input']>;
};

export type ProjectBulkUpdateOutput = {
  __typename?: 'ProjectBulkUpdateOutput';
  project?: Maybe<Projects>;
  project_id: Scalars['Int']['output'];
};

export type ProjectCalculation = {
  __typename?: 'ProjectCalculation';
  budget_difference: Scalars['Float']['output'];
  budget_minutes: Scalars['Float']['output'];
  budget_spent: Scalars['Float']['output'];
  by_day: Array<CalculatedActual>;
  has_rates: Scalars['Boolean']['output'];
  is_billable: Scalars['Boolean']['output'];
  margin: Scalars['Float']['output'];
  people_costs: Scalars['Float']['output'];
  profit: Scalars['Float']['output'];
  project_costs: Scalars['Float']['output'];
  project_minutes: Scalars['Float']['output'];
  revenue: Scalars['Float']['output'];
  rounded_budget_difference: Scalars['Float']['output'];
};

export type ProjectCreateInput = {
  client_id?: InputMaybe<Scalars['Int']['input']>;
  client_name?: InputMaybe<Scalars['String']['input']>;
  confirmed: Scalars['Boolean']['input'];
  custom_values?: InputMaybe<ProjectInputCustomValues>;
  editor_ids?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  emoji?: InputMaybe<Scalars['String']['input']>;
  is_template: Scalars['Boolean']['input'];
  name: Scalars['String']['input'];
  pricing_model: Scalars['String']['input'];
  rate_card_id: Scalars['Int']['input'];
  references?: InputMaybe<Scalars['jsonb']['input']>;
  tags?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  team_id?: InputMaybe<Scalars['Int']['input']>;
};

export type ProjectCreateOutput = {
  __typename?: 'ProjectCreateOutput';
  account?: Maybe<Accounts>;
  account_id?: Maybe<Scalars['Int']['output']>;
  project?: Maybe<Projects>;
  project_id?: Maybe<Scalars['Int']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

export type ProjectDuplicateInput = {
  date: Scalars['String']['input'];
  name: Scalars['String']['input'];
  new_project_input?: InputMaybe<NewProjectInput>;
  original_project_id: Scalars['Int']['input'];
};

export type ProjectDuplicateOutput = {
  __typename?: 'ProjectDuplicateOutput';
  account?: Maybe<Accounts>;
  account_id: Scalars['Int']['output'];
  project?: Maybe<Projects>;
  project_id: Scalars['Int']['output'];
};

export type ProjectInputCustomValues = {
  select?: InputMaybe<Array<InputMaybe<ProjectInputCustomValuesSelect>>>;
  text?: InputMaybe<Array<InputMaybe<ProjectInputCustomValuesText>>>;
};

export type ProjectInputCustomValuesSelect = {
  optionId: Scalars['Int']['input'];
  typeId: Scalars['Int']['input'];
};

export type ProjectInputCustomValuesText = {
  typeId: Scalars['Int']['input'];
  value: Scalars['String']['input'];
};

export type ProjectMember = {
  is_placeholder: Scalars['Boolean']['input'];
  person_id: Scalars['Int']['input'];
  project_id: Scalars['Int']['input'];
  role_id: Scalars['Int']['input'];
};

export type ProjectMemberBulkCreateInput = {
  project_members: Array<ProjectMember>;
};

export type ProjectMemberBulkCreateOutput = {
  __typename?: 'ProjectMemberBulkCreateOutput';
  id: Scalars['Int']['output'];
  person?: Maybe<People>;
  person_id: Scalars['Int']['output'];
  project?: Maybe<Projects>;
  project_id: Scalars['Int']['output'];
  project_member?: Maybe<Project_Members>;
  role?: Maybe<Roles>;
  role_id: Scalars['Int']['output'];
};

export type ProjectMemberDeleteOutput = {
  __typename?: 'ProjectMemberDeleteOutput';
  person?: Maybe<People>;
  person_id: Scalars['Int']['output'];
  project?: Maybe<Projects>;
  project_id: Scalars['Int']['output'];
  role?: Maybe<Roles>;
  role_id: Scalars['Int']['output'];
};

export type ProjectNoteCreateInput = {
  note: Scalars['String']['input'];
  project_id: Scalars['Int']['input'];
};

export type ProjectNoteCreateOutput = {
  __typename?: 'ProjectNoteCreateOutput';
  id: Scalars['Int']['output'];
  note?: Maybe<Notes>;
  project?: Maybe<Projects>;
  project_id: Scalars['Int']['output'];
  user?: Maybe<Users>;
  user_id: Scalars['Int']['output'];
};

export type ProjectNoteUpdateInput = {
  id: Scalars['Int']['input'];
  note: Scalars['String']['input'];
};

export type ProjectNoteUpdateOutput = {
  __typename?: 'ProjectNoteUpdateOutput';
  id: Scalars['Int']['output'];
  note?: Maybe<Notes>;
  user?: Maybe<Users>;
  user_id: Scalars['Int']['output'];
};

export type ProjectRescheduleInput = {
  date: Scalars['String']['input'];
  project_id: Scalars['Int']['input'];
};

export type ProjectRescheduleOutput = {
  __typename?: 'ProjectRescheduleOutput';
  project?: Maybe<Projects>;
  project_id: Scalars['Int']['output'];
};

export type ProjectUpdateInput = {
  client_id?: InputMaybe<Scalars['Int']['input']>;
  client_name?: InputMaybe<Scalars['String']['input']>;
  confirmed: Scalars['Boolean']['input'];
  custom_values?: InputMaybe<ProjectInputCustomValues>;
  editor_ids?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  emoji?: InputMaybe<Scalars['String']['input']>;
  is_template: Scalars['Boolean']['input'];
  name: Scalars['String']['input'];
  pricing_model: Scalars['String']['input'];
  project_id: Scalars['Int']['input'];
  rate_card_id: Scalars['Int']['input'];
  references?: InputMaybe<Scalars['jsonb']['input']>;
  tags?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  team_id?: InputMaybe<Scalars['Int']['input']>;
};

export type ProjectUpdateOutput = {
  __typename?: 'ProjectUpdateOutput';
  account?: Maybe<Accounts>;
  account_id?: Maybe<Scalars['Int']['output']>;
  project?: Maybe<Projects>;
  project_id?: Maybe<Scalars['Int']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

export type PublicHoliday = {
  date: Scalars['String']['input'];
  holiday_api_uuid: Scalars['String']['input'];
  holidays_group_id: Scalars['Int']['input'];
  name: Scalars['String']['input'];
  observed: Scalars['String']['input'];
  type: Scalars['String']['input'];
};

export type RateCardCreateInput = {
  blended_rate: Scalars['Float']['input'];
  blended_rate_card: Scalars['Boolean']['input'];
  description?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  rate_type: Scalars['String']['input'];
  references?: InputMaybe<Scalars['jsonb']['input']>;
  roles: Array<InputMaybe<RateCardCreateRoleInput>>;
};

export type RateCardCreateOutput = {
  __typename?: 'RateCardCreateOutput';
  account?: Maybe<Accounts>;
  account_id: Scalars['Int']['output'];
  created_rate_card_id: Scalars['Int']['output'];
  rate_card?: Maybe<Rate_Cards>;
};

export type RateCardCreateRoleInput = {
  charge_out_rate: Scalars['Float']['input'];
  role_id: Scalars['Int']['input'];
};

export type RateCardUpdateInput = {
  blended_rate?: InputMaybe<Scalars['Float']['input']>;
  blended_rate_card?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  rate_card_id: Scalars['Int']['input'];
  rate_type?: InputMaybe<Scalars['String']['input']>;
  references?: InputMaybe<Scalars['jsonb']['input']>;
  roles?: InputMaybe<Array<InputMaybe<RateCardUpdateInputRole>>>;
};

export type RateCardUpdateInputRole = {
  charge_out_rate?: InputMaybe<Scalars['Float']['input']>;
  role_id: Scalars['Int']['input'];
};

export type RateCardUpdateOutput = {
  __typename?: 'RateCardUpdateOutput';
  account?: Maybe<Accounts>;
  account_id: Scalars['Int']['output'];
  rate_card?: Maybe<Rate_Cards>;
  updated_rate_card_id: Scalars['Int']['output'];
};

export type RevokeApiTokenResult = {
  __typename?: 'RevokeApiTokenResult';
  accountId: Scalars['Int']['output'];
  api_token?: Maybe<Api_Tokens>;
  tokenId: Scalars['Int']['output'];
};

export type RoleBulkUpdateInput = {
  roles: Array<RoleInput>;
};

export type RoleBulkUpdateResult = {
  __typename?: 'RoleBulkUpdateResult';
  account?: Maybe<Accounts>;
  account_id: Scalars['Int']['output'];
};

export type RoleCreateInput = {
  charge_out_rate: Scalars['Float']['input'];
  default_hour_cost: Scalars['Float']['input'];
  name: Scalars['String']['input'];
  references?: InputMaybe<Scalars['jsonb']['input']>;
};

export type RoleCreateOutput = {
  __typename?: 'RoleCreateOutput';
  account?: Maybe<Accounts>;
  account_id: Scalars['bigint']['output'];
  created_role_id: Scalars['bigint']['output'];
  role?: Maybe<Roles>;
};

export type RoleInput = {
  charge_out_rate: Scalars['Float']['input'];
  default_hour_cost: Scalars['Float']['input'];
  id: Scalars['Int']['input'];
  name: Scalars['String']['input'];
};

export type RoleUpdateInput = {
  charge_out_rate: Scalars['Float']['input'];
  default_hour_cost: Scalars['Float']['input'];
  name: Scalars['String']['input'];
  references?: InputMaybe<Scalars['jsonb']['input']>;
  role_id: Scalars['bigint']['input'];
};

export type RoleUpdateOutput = {
  __typename?: 'RoleUpdateOutput';
  account?: Maybe<Accounts>;
  account_id: Scalars['bigint']['output'];
  role?: Maybe<Roles>;
  updated_role_id: Scalars['bigint']['output'];
};

/** Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'. */
export type String_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['String']['input']>;
  _gt?: InputMaybe<Scalars['String']['input']>;
  _gte?: InputMaybe<Scalars['String']['input']>;
  /** does the column match the given case-insensitive pattern */
  _ilike?: InputMaybe<Scalars['String']['input']>;
  _in?: InputMaybe<Array<Scalars['String']['input']>>;
  /** does the column match the given POSIX regular expression, case insensitive */
  _iregex?: InputMaybe<Scalars['String']['input']>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  /** does the column match the given pattern */
  _like?: InputMaybe<Scalars['String']['input']>;
  _lt?: InputMaybe<Scalars['String']['input']>;
  _lte?: InputMaybe<Scalars['String']['input']>;
  _neq?: InputMaybe<Scalars['String']['input']>;
  /** does the column NOT match the given case-insensitive pattern */
  _nilike?: InputMaybe<Scalars['String']['input']>;
  _nin?: InputMaybe<Array<Scalars['String']['input']>>;
  /** does the column NOT match the given POSIX regular expression, case insensitive */
  _niregex?: InputMaybe<Scalars['String']['input']>;
  /** does the column NOT match the given pattern */
  _nlike?: InputMaybe<Scalars['String']['input']>;
  /** does the column NOT match the given POSIX regular expression, case sensitive */
  _nregex?: InputMaybe<Scalars['String']['input']>;
  /** does the column NOT match the given SQL regular expression */
  _nsimilar?: InputMaybe<Scalars['String']['input']>;
  /** does the column match the given POSIX regular expression, case sensitive */
  _regex?: InputMaybe<Scalars['String']['input']>;
  /** does the column match the given SQL regular expression */
  _similar?: InputMaybe<Scalars['String']['input']>;
};

export type SubscriptionUpdateInput = {
  plan_name: Scalars['String']['input'];
};

export type SubscriptionUpdateOutput = {
  __typename?: 'SubscriptionUpdateOutput';
  account?: Maybe<Accounts>;
  account_id?: Maybe<Scalars['Int']['output']>;
};

export type TagBulkCreateInput = {
  model: Scalars['String']['input'];
  object_id?: InputMaybe<Scalars['Int']['input']>;
  tags: Array<Scalars['String']['input']>;
};

export type TagBulkCreateOutput = {
  __typename?: 'TagBulkCreateOutput';
  account?: Maybe<Accounts>;
  account_id?: Maybe<Scalars['Int']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
};

/** Boolean expression to compare columns of type "_int4". All fields are combined with logical 'AND'. */
export type _Int4_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['_int4']['input']>;
  _gt?: InputMaybe<Scalars['_int4']['input']>;
  _gte?: InputMaybe<Scalars['_int4']['input']>;
  _in?: InputMaybe<Array<Scalars['_int4']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['_int4']['input']>;
  _lte?: InputMaybe<Scalars['_int4']['input']>;
  _neq?: InputMaybe<Scalars['_int4']['input']>;
  _nin?: InputMaybe<Array<Scalars['_int4']['input']>>;
};

/** Boolean expression to compare columns of type "_text". All fields are combined with logical 'AND'. */
export type _Text_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['_text']['input']>;
  _gt?: InputMaybe<Scalars['_text']['input']>;
  _gte?: InputMaybe<Scalars['_text']['input']>;
  _in?: InputMaybe<Array<Scalars['_text']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['_text']['input']>;
  _lte?: InputMaybe<Scalars['_text']['input']>;
  _neq?: InputMaybe<Scalars['_text']['input']>;
  _nin?: InputMaybe<Array<Scalars['_text']['input']>>;
};

/** columns and relationships of "accounts" */
export type Accounts = {
  __typename?: 'accounts';
  account_type: Scalars['String']['output'];
  /** An array relationship */
  accounts: Array<Accounts>;
  /** An aggregate relationship */
  accounts_aggregate: Accounts_Aggregate;
  alias?: Maybe<Scalars['String']['output']>;
  /** An object relationship */
  alternative_account?: Maybe<Accounts>;
  alternative_account_id?: Maybe<Scalars['Int']['output']>;
  auth_token?: Maybe<Scalars['String']['output']>;
  autofill_timesheets?: Maybe<Scalars['Boolean']['output']>;
  billing_method: Scalars['String']['output'];
  business_days: Scalars['_text']['output'];
  /** An array relationship */
  cancel_reasons: Array<Cancel_Reasons>;
  /** An aggregate relationship */
  cancel_reasons_aggregate: Cancel_Reasons_Aggregate;
  /** An array relationship */
  clients: Array<Clients>;
  /** An aggregate relationship */
  clients_aggregate: Clients_Aggregate;
  /** An array relationship */
  competencies: Array<Competencies>;
  /** An aggregate relationship */
  competencies_aggregate: Competencies_Aggregate;
  created_at: Scalars['timestamp']['output'];
  currency?: Maybe<Scalars['String']['output']>;
  /** An array relationship */
  custom_select_types: Array<Custom_Select_Types>;
  /** An aggregate relationship */
  custom_select_types_aggregate: Custom_Select_Types_Aggregate;
  /** An array relationship */
  custom_text_types: Array<Custom_Text_Types>;
  /** An aggregate relationship */
  custom_text_types_aggregate: Custom_Text_Types_Aggregate;
  default_full_time_minutes: Scalars['Int']['output'];
  /** An array relationship */
  features_accounts: Array<Features_Accounts>;
  /** An aggregate relationship */
  features_accounts_aggregate: Features_Accounts_Aggregate;
  fullstory_enabled?: Maybe<Scalars['Boolean']['output']>;
  /** An array relationship */
  holidays: Array<Holidays>;
  /** An aggregate relationship */
  holidays_aggregate: Holidays_Aggregate;
  /** An array relationship */
  holidays_groups: Array<Holidays_Groups>;
  /** An aggregate relationship */
  holidays_groups_aggregate: Holidays_Groups_Aggregate;
  id: Scalars['Int']['output'];
  integrations?: Maybe<Scalars['jsonb']['output']>;
  /** An array relationship */
  integrationsV2: Array<Integration>;
  /** An aggregate relationship */
  integrationsV2_aggregate: Integration_Aggregate;
  /** An array relationship */
  invitations: Array<Invitations>;
  /** An aggregate relationship */
  invitations_aggregate: Invitations_Aggregate;
  last_analytics_sent?: Maybe<Scalars['timestamp']['output']>;
  last_copied?: Maybe<Scalars['timestamp']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  /** An array relationship */
  people: Array<People>;
  /** An aggregate relationship */
  people_aggregate: People_Aggregate;
  /** An array relationship */
  person_requests: Array<Person_Requests>;
  /** An aggregate relationship */
  person_requests_aggregate: Person_Requests_Aggregate;
  planner_limit?: Maybe<Scalars['Int']['output']>;
  /** An array relationship */
  project_members: Array<Project_Members>;
  /** An aggregate relationship */
  project_members_aggregate: Project_Members_Aggregate;
  /** An array relationship */
  projects: Array<Projects>;
  /** An aggregate relationship */
  projects_aggregate: Projects_Aggregate;
  /** An array relationship */
  rate_cards: Array<Rate_Cards>;
  /** An aggregate relationship */
  rate_cards_aggregate: Rate_Cards_Aggregate;
  rate_type: Scalars['String']['output'];
  references: Scalars['jsonb']['output'];
  /** An array relationship */
  roles: Array<Roles>;
  /** An aggregate relationship */
  roles_aggregate: Roles_Aggregate;
  security?: Maybe<Scalars['jsonb']['output']>;
  size?: Maybe<Scalars['String']['output']>;
  /** An array relationship */
  skills: Array<Skills>;
  /** An aggregate relationship */
  skills_aggregate: Skills_Aggregate;
  subdomain?: Maybe<Scalars['String']['output']>;
  subscription?: Maybe<Scalars['jsonb']['output']>;
  subscription_customer?: Maybe<Scalars['jsonb']['output']>;
  subscription_type?: Maybe<Scalars['String']['output']>;
  /** An array relationship */
  tags: Array<Tags>;
  /** An aggregate relationship */
  tags_aggregate: Tags_Aggregate;
  /** An array relationship */
  teams: Array<Teams>;
  /** An aggregate relationship */
  teams_aggregate: Teams_Aggregate;
  timesheet_lock?: Maybe<Scalars['Int']['output']>;
  timesheet_lock_method?: Maybe<Scalars['String']['output']>;
  timesheets_enabled?: Maybe<Scalars['Boolean']['output']>;
  updated_at: Scalars['timestamp']['output'];
  /** An array relationship */
  users: Array<Users>;
  /** An aggregate relationship */
  users_aggregate: Users_Aggregate;
  utm?: Maybe<Scalars['jsonb']['output']>;
  /** An array relationship */
  views: Array<Views>;
  /** An aggregate relationship */
  views_aggregate: Views_Aggregate;
  website?: Maybe<Scalars['String']['output']>;
};


/** columns and relationships of "accounts" */
export type AccountsAccountsArgs = {
  distinct_on?: InputMaybe<Array<Accounts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Accounts_Order_By>>;
  where?: InputMaybe<Accounts_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsAccounts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Accounts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Accounts_Order_By>>;
  where?: InputMaybe<Accounts_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsCancel_ReasonsArgs = {
  distinct_on?: InputMaybe<Array<Cancel_Reasons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Cancel_Reasons_Order_By>>;
  where?: InputMaybe<Cancel_Reasons_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsCancel_Reasons_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Cancel_Reasons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Cancel_Reasons_Order_By>>;
  where?: InputMaybe<Cancel_Reasons_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsClientsArgs = {
  distinct_on?: InputMaybe<Array<Clients_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Clients_Order_By>>;
  where?: InputMaybe<Clients_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsClients_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Clients_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Clients_Order_By>>;
  where?: InputMaybe<Clients_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsCompetenciesArgs = {
  distinct_on?: InputMaybe<Array<Competencies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Competencies_Order_By>>;
  where?: InputMaybe<Competencies_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsCompetencies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Competencies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Competencies_Order_By>>;
  where?: InputMaybe<Competencies_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsCustom_Select_TypesArgs = {
  distinct_on?: InputMaybe<Array<Custom_Select_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Custom_Select_Types_Order_By>>;
  where?: InputMaybe<Custom_Select_Types_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsCustom_Select_Types_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Custom_Select_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Custom_Select_Types_Order_By>>;
  where?: InputMaybe<Custom_Select_Types_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsCustom_Text_TypesArgs = {
  distinct_on?: InputMaybe<Array<Custom_Text_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Custom_Text_Types_Order_By>>;
  where?: InputMaybe<Custom_Text_Types_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsCustom_Text_Types_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Custom_Text_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Custom_Text_Types_Order_By>>;
  where?: InputMaybe<Custom_Text_Types_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsFeatures_AccountsArgs = {
  distinct_on?: InputMaybe<Array<Features_Accounts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Features_Accounts_Order_By>>;
  where?: InputMaybe<Features_Accounts_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsFeatures_Accounts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Features_Accounts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Features_Accounts_Order_By>>;
  where?: InputMaybe<Features_Accounts_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsHolidaysArgs = {
  distinct_on?: InputMaybe<Array<Holidays_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Holidays_Order_By>>;
  where?: InputMaybe<Holidays_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsHolidays_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Holidays_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Holidays_Order_By>>;
  where?: InputMaybe<Holidays_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsHolidays_GroupsArgs = {
  distinct_on?: InputMaybe<Array<Holidays_Groups_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Holidays_Groups_Order_By>>;
  where?: InputMaybe<Holidays_Groups_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsHolidays_Groups_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Holidays_Groups_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Holidays_Groups_Order_By>>;
  where?: InputMaybe<Holidays_Groups_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsIntegrationsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** columns and relationships of "accounts" */
export type AccountsIntegrationsV2Args = {
  distinct_on?: InputMaybe<Array<Integration_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Integration_Order_By>>;
  where?: InputMaybe<Integration_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsIntegrationsV2_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Integration_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Integration_Order_By>>;
  where?: InputMaybe<Integration_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsInvitationsArgs = {
  distinct_on?: InputMaybe<Array<Invitations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Invitations_Order_By>>;
  where?: InputMaybe<Invitations_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsInvitations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Invitations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Invitations_Order_By>>;
  where?: InputMaybe<Invitations_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsPeopleArgs = {
  distinct_on?: InputMaybe<Array<People_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<People_Order_By>>;
  where?: InputMaybe<People_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsPeople_AggregateArgs = {
  distinct_on?: InputMaybe<Array<People_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<People_Order_By>>;
  where?: InputMaybe<People_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsPerson_RequestsArgs = {
  distinct_on?: InputMaybe<Array<Person_Requests_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Person_Requests_Order_By>>;
  where?: InputMaybe<Person_Requests_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsPerson_Requests_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Person_Requests_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Person_Requests_Order_By>>;
  where?: InputMaybe<Person_Requests_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsProject_MembersArgs = {
  distinct_on?: InputMaybe<Array<Project_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Members_Order_By>>;
  where?: InputMaybe<Project_Members_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsProject_Members_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Project_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Members_Order_By>>;
  where?: InputMaybe<Project_Members_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsProjectsArgs = {
  distinct_on?: InputMaybe<Array<Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Projects_Order_By>>;
  where?: InputMaybe<Projects_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsProjects_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Projects_Order_By>>;
  where?: InputMaybe<Projects_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsRate_CardsArgs = {
  distinct_on?: InputMaybe<Array<Rate_Cards_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Rate_Cards_Order_By>>;
  where?: InputMaybe<Rate_Cards_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsRate_Cards_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Rate_Cards_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Rate_Cards_Order_By>>;
  where?: InputMaybe<Rate_Cards_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsReferencesArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** columns and relationships of "accounts" */
export type AccountsRolesArgs = {
  distinct_on?: InputMaybe<Array<Roles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Roles_Order_By>>;
  where?: InputMaybe<Roles_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsRoles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Roles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Roles_Order_By>>;
  where?: InputMaybe<Roles_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsSecurityArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** columns and relationships of "accounts" */
export type AccountsSkillsArgs = {
  distinct_on?: InputMaybe<Array<Skills_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Skills_Order_By>>;
  where?: InputMaybe<Skills_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsSkills_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Skills_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Skills_Order_By>>;
  where?: InputMaybe<Skills_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsSubscriptionArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** columns and relationships of "accounts" */
export type AccountsSubscription_CustomerArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** columns and relationships of "accounts" */
export type AccountsTagsArgs = {
  distinct_on?: InputMaybe<Array<Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Tags_Order_By>>;
  where?: InputMaybe<Tags_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsTags_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Tags_Order_By>>;
  where?: InputMaybe<Tags_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsTeamsArgs = {
  distinct_on?: InputMaybe<Array<Teams_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Teams_Order_By>>;
  where?: InputMaybe<Teams_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsTeams_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Teams_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Teams_Order_By>>;
  where?: InputMaybe<Teams_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsUsersArgs = {
  distinct_on?: InputMaybe<Array<Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Users_Order_By>>;
  where?: InputMaybe<Users_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsUsers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Users_Order_By>>;
  where?: InputMaybe<Users_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsUtmArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** columns and relationships of "accounts" */
export type AccountsViewsArgs = {
  distinct_on?: InputMaybe<Array<Views_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Views_Order_By>>;
  where?: InputMaybe<Views_Bool_Exp>;
};


/** columns and relationships of "accounts" */
export type AccountsViews_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Views_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Views_Order_By>>;
  where?: InputMaybe<Views_Bool_Exp>;
};

/** aggregated selection of "accounts" */
export type Accounts_Aggregate = {
  __typename?: 'accounts_aggregate';
  aggregate?: Maybe<Accounts_Aggregate_Fields>;
  nodes: Array<Accounts>;
};

export type Accounts_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Accounts_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Accounts_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Accounts_Aggregate_Bool_Exp_Count>;
};

export type Accounts_Aggregate_Bool_Exp_Bool_And = {
  arguments: Accounts_Select_Column_Accounts_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Accounts_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Accounts_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Accounts_Select_Column_Accounts_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Accounts_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Accounts_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Accounts_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Accounts_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "accounts" */
export type Accounts_Aggregate_Fields = {
  __typename?: 'accounts_aggregate_fields';
  avg?: Maybe<Accounts_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Accounts_Max_Fields>;
  min?: Maybe<Accounts_Min_Fields>;
  stddev?: Maybe<Accounts_Stddev_Fields>;
  stddev_pop?: Maybe<Accounts_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Accounts_Stddev_Samp_Fields>;
  sum?: Maybe<Accounts_Sum_Fields>;
  var_pop?: Maybe<Accounts_Var_Pop_Fields>;
  var_samp?: Maybe<Accounts_Var_Samp_Fields>;
  variance?: Maybe<Accounts_Variance_Fields>;
};


/** aggregate fields of "accounts" */
export type Accounts_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Accounts_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "accounts" */
export type Accounts_Aggregate_Order_By = {
  avg?: InputMaybe<Accounts_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Accounts_Max_Order_By>;
  min?: InputMaybe<Accounts_Min_Order_By>;
  stddev?: InputMaybe<Accounts_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Accounts_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Accounts_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Accounts_Sum_Order_By>;
  var_pop?: InputMaybe<Accounts_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Accounts_Var_Samp_Order_By>;
  variance?: InputMaybe<Accounts_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Accounts_Append_Input = {
  integrations?: InputMaybe<Scalars['jsonb']['input']>;
  references?: InputMaybe<Scalars['jsonb']['input']>;
  security?: InputMaybe<Scalars['jsonb']['input']>;
  subscription?: InputMaybe<Scalars['jsonb']['input']>;
  subscription_customer?: InputMaybe<Scalars['jsonb']['input']>;
  utm?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "accounts" */
export type Accounts_Arr_Rel_Insert_Input = {
  data: Array<Accounts_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Accounts_On_Conflict>;
};

/** aggregate avg on columns */
export type Accounts_Avg_Fields = {
  __typename?: 'accounts_avg_fields';
  alternative_account_id?: Maybe<Scalars['Float']['output']>;
  default_full_time_minutes?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  planner_limit?: Maybe<Scalars['Float']['output']>;
  timesheet_lock?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "accounts" */
export type Accounts_Avg_Order_By = {
  alternative_account_id?: InputMaybe<Order_By>;
  default_full_time_minutes?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  planner_limit?: InputMaybe<Order_By>;
  timesheet_lock?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "accounts". All fields are combined with a logical 'AND'. */
export type Accounts_Bool_Exp = {
  _and?: InputMaybe<Array<Accounts_Bool_Exp>>;
  _not?: InputMaybe<Accounts_Bool_Exp>;
  _or?: InputMaybe<Array<Accounts_Bool_Exp>>;
  account_type?: InputMaybe<String_Comparison_Exp>;
  accounts?: InputMaybe<Accounts_Bool_Exp>;
  accounts_aggregate?: InputMaybe<Accounts_Aggregate_Bool_Exp>;
  alias?: InputMaybe<String_Comparison_Exp>;
  alternative_account?: InputMaybe<Accounts_Bool_Exp>;
  alternative_account_id?: InputMaybe<Int_Comparison_Exp>;
  auth_token?: InputMaybe<String_Comparison_Exp>;
  autofill_timesheets?: InputMaybe<Boolean_Comparison_Exp>;
  billing_method?: InputMaybe<String_Comparison_Exp>;
  business_days?: InputMaybe<_Text_Comparison_Exp>;
  cancel_reasons?: InputMaybe<Cancel_Reasons_Bool_Exp>;
  cancel_reasons_aggregate?: InputMaybe<Cancel_Reasons_Aggregate_Bool_Exp>;
  clients?: InputMaybe<Clients_Bool_Exp>;
  clients_aggregate?: InputMaybe<Clients_Aggregate_Bool_Exp>;
  competencies?: InputMaybe<Competencies_Bool_Exp>;
  competencies_aggregate?: InputMaybe<Competencies_Aggregate_Bool_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  currency?: InputMaybe<String_Comparison_Exp>;
  custom_select_types?: InputMaybe<Custom_Select_Types_Bool_Exp>;
  custom_select_types_aggregate?: InputMaybe<Custom_Select_Types_Aggregate_Bool_Exp>;
  custom_text_types?: InputMaybe<Custom_Text_Types_Bool_Exp>;
  custom_text_types_aggregate?: InputMaybe<Custom_Text_Types_Aggregate_Bool_Exp>;
  default_full_time_minutes?: InputMaybe<Int_Comparison_Exp>;
  features_accounts?: InputMaybe<Features_Accounts_Bool_Exp>;
  features_accounts_aggregate?: InputMaybe<Features_Accounts_Aggregate_Bool_Exp>;
  fullstory_enabled?: InputMaybe<Boolean_Comparison_Exp>;
  holidays?: InputMaybe<Holidays_Bool_Exp>;
  holidays_aggregate?: InputMaybe<Holidays_Aggregate_Bool_Exp>;
  holidays_groups?: InputMaybe<Holidays_Groups_Bool_Exp>;
  holidays_groups_aggregate?: InputMaybe<Holidays_Groups_Aggregate_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  integrations?: InputMaybe<Jsonb_Comparison_Exp>;
  integrationsV2?: InputMaybe<Integration_Bool_Exp>;
  integrationsV2_aggregate?: InputMaybe<Integration_Aggregate_Bool_Exp>;
  invitations?: InputMaybe<Invitations_Bool_Exp>;
  invitations_aggregate?: InputMaybe<Invitations_Aggregate_Bool_Exp>;
  last_analytics_sent?: InputMaybe<Timestamp_Comparison_Exp>;
  last_copied?: InputMaybe<Timestamp_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  people?: InputMaybe<People_Bool_Exp>;
  people_aggregate?: InputMaybe<People_Aggregate_Bool_Exp>;
  person_requests?: InputMaybe<Person_Requests_Bool_Exp>;
  person_requests_aggregate?: InputMaybe<Person_Requests_Aggregate_Bool_Exp>;
  planner_limit?: InputMaybe<Int_Comparison_Exp>;
  project_members?: InputMaybe<Project_Members_Bool_Exp>;
  project_members_aggregate?: InputMaybe<Project_Members_Aggregate_Bool_Exp>;
  projects?: InputMaybe<Projects_Bool_Exp>;
  projects_aggregate?: InputMaybe<Projects_Aggregate_Bool_Exp>;
  rate_cards?: InputMaybe<Rate_Cards_Bool_Exp>;
  rate_cards_aggregate?: InputMaybe<Rate_Cards_Aggregate_Bool_Exp>;
  rate_type?: InputMaybe<String_Comparison_Exp>;
  references?: InputMaybe<Jsonb_Comparison_Exp>;
  roles?: InputMaybe<Roles_Bool_Exp>;
  roles_aggregate?: InputMaybe<Roles_Aggregate_Bool_Exp>;
  security?: InputMaybe<Jsonb_Comparison_Exp>;
  size?: InputMaybe<String_Comparison_Exp>;
  skills?: InputMaybe<Skills_Bool_Exp>;
  skills_aggregate?: InputMaybe<Skills_Aggregate_Bool_Exp>;
  subdomain?: InputMaybe<String_Comparison_Exp>;
  subscription?: InputMaybe<Jsonb_Comparison_Exp>;
  subscription_customer?: InputMaybe<Jsonb_Comparison_Exp>;
  subscription_type?: InputMaybe<String_Comparison_Exp>;
  tags?: InputMaybe<Tags_Bool_Exp>;
  tags_aggregate?: InputMaybe<Tags_Aggregate_Bool_Exp>;
  teams?: InputMaybe<Teams_Bool_Exp>;
  teams_aggregate?: InputMaybe<Teams_Aggregate_Bool_Exp>;
  timesheet_lock?: InputMaybe<Int_Comparison_Exp>;
  timesheet_lock_method?: InputMaybe<String_Comparison_Exp>;
  timesheets_enabled?: InputMaybe<Boolean_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
  users?: InputMaybe<Users_Bool_Exp>;
  users_aggregate?: InputMaybe<Users_Aggregate_Bool_Exp>;
  utm?: InputMaybe<Jsonb_Comparison_Exp>;
  views?: InputMaybe<Views_Bool_Exp>;
  views_aggregate?: InputMaybe<Views_Aggregate_Bool_Exp>;
  website?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "accounts" */
export enum Accounts_Constraint {
  /** unique or primary key constraint on columns "id" */
  AccountsPkey = 'accounts_pkey',
  /** unique or primary key constraint on columns "alias" */
  UniqAliasKey = 'uniq_alias_key',
  /** unique or primary key constraint on columns "subdomain" */
  UniqSubdomainKey = 'uniq_subdomain_key'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Accounts_Delete_At_Path_Input = {
  integrations?: InputMaybe<Array<Scalars['String']['input']>>;
  references?: InputMaybe<Array<Scalars['String']['input']>>;
  security?: InputMaybe<Array<Scalars['String']['input']>>;
  subscription?: InputMaybe<Array<Scalars['String']['input']>>;
  subscription_customer?: InputMaybe<Array<Scalars['String']['input']>>;
  utm?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Accounts_Delete_Elem_Input = {
  integrations?: InputMaybe<Scalars['Int']['input']>;
  references?: InputMaybe<Scalars['Int']['input']>;
  security?: InputMaybe<Scalars['Int']['input']>;
  subscription?: InputMaybe<Scalars['Int']['input']>;
  subscription_customer?: InputMaybe<Scalars['Int']['input']>;
  utm?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Accounts_Delete_Key_Input = {
  integrations?: InputMaybe<Scalars['String']['input']>;
  references?: InputMaybe<Scalars['String']['input']>;
  security?: InputMaybe<Scalars['String']['input']>;
  subscription?: InputMaybe<Scalars['String']['input']>;
  subscription_customer?: InputMaybe<Scalars['String']['input']>;
  utm?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "accounts" */
export type Accounts_Inc_Input = {
  alternative_account_id?: InputMaybe<Scalars['Int']['input']>;
  default_full_time_minutes?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  planner_limit?: InputMaybe<Scalars['Int']['input']>;
  timesheet_lock?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "accounts" */
export type Accounts_Insert_Input = {
  account_type?: InputMaybe<Scalars['String']['input']>;
  accounts?: InputMaybe<Accounts_Arr_Rel_Insert_Input>;
  alias?: InputMaybe<Scalars['String']['input']>;
  alternative_account?: InputMaybe<Accounts_Obj_Rel_Insert_Input>;
  alternative_account_id?: InputMaybe<Scalars['Int']['input']>;
  auth_token?: InputMaybe<Scalars['String']['input']>;
  autofill_timesheets?: InputMaybe<Scalars['Boolean']['input']>;
  billing_method?: InputMaybe<Scalars['String']['input']>;
  business_days?: InputMaybe<Scalars['_text']['input']>;
  cancel_reasons?: InputMaybe<Cancel_Reasons_Arr_Rel_Insert_Input>;
  clients?: InputMaybe<Clients_Arr_Rel_Insert_Input>;
  competencies?: InputMaybe<Competencies_Arr_Rel_Insert_Input>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  currency?: InputMaybe<Scalars['String']['input']>;
  custom_select_types?: InputMaybe<Custom_Select_Types_Arr_Rel_Insert_Input>;
  custom_text_types?: InputMaybe<Custom_Text_Types_Arr_Rel_Insert_Input>;
  default_full_time_minutes?: InputMaybe<Scalars['Int']['input']>;
  features_accounts?: InputMaybe<Features_Accounts_Arr_Rel_Insert_Input>;
  fullstory_enabled?: InputMaybe<Scalars['Boolean']['input']>;
  holidays?: InputMaybe<Holidays_Arr_Rel_Insert_Input>;
  holidays_groups?: InputMaybe<Holidays_Groups_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['Int']['input']>;
  integrations?: InputMaybe<Scalars['jsonb']['input']>;
  integrationsV2?: InputMaybe<Integration_Arr_Rel_Insert_Input>;
  invitations?: InputMaybe<Invitations_Arr_Rel_Insert_Input>;
  last_analytics_sent?: InputMaybe<Scalars['timestamp']['input']>;
  last_copied?: InputMaybe<Scalars['timestamp']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  people?: InputMaybe<People_Arr_Rel_Insert_Input>;
  person_requests?: InputMaybe<Person_Requests_Arr_Rel_Insert_Input>;
  planner_limit?: InputMaybe<Scalars['Int']['input']>;
  project_members?: InputMaybe<Project_Members_Arr_Rel_Insert_Input>;
  projects?: InputMaybe<Projects_Arr_Rel_Insert_Input>;
  rate_cards?: InputMaybe<Rate_Cards_Arr_Rel_Insert_Input>;
  rate_type?: InputMaybe<Scalars['String']['input']>;
  references?: InputMaybe<Scalars['jsonb']['input']>;
  roles?: InputMaybe<Roles_Arr_Rel_Insert_Input>;
  security?: InputMaybe<Scalars['jsonb']['input']>;
  size?: InputMaybe<Scalars['String']['input']>;
  skills?: InputMaybe<Skills_Arr_Rel_Insert_Input>;
  subdomain?: InputMaybe<Scalars['String']['input']>;
  subscription?: InputMaybe<Scalars['jsonb']['input']>;
  subscription_customer?: InputMaybe<Scalars['jsonb']['input']>;
  subscription_type?: InputMaybe<Scalars['String']['input']>;
  tags?: InputMaybe<Tags_Arr_Rel_Insert_Input>;
  teams?: InputMaybe<Teams_Arr_Rel_Insert_Input>;
  timesheet_lock?: InputMaybe<Scalars['Int']['input']>;
  timesheet_lock_method?: InputMaybe<Scalars['String']['input']>;
  timesheets_enabled?: InputMaybe<Scalars['Boolean']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  users?: InputMaybe<Users_Arr_Rel_Insert_Input>;
  utm?: InputMaybe<Scalars['jsonb']['input']>;
  views?: InputMaybe<Views_Arr_Rel_Insert_Input>;
  website?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Accounts_Max_Fields = {
  __typename?: 'accounts_max_fields';
  account_type?: Maybe<Scalars['String']['output']>;
  alias?: Maybe<Scalars['String']['output']>;
  alternative_account_id?: Maybe<Scalars['Int']['output']>;
  auth_token?: Maybe<Scalars['String']['output']>;
  billing_method?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  currency?: Maybe<Scalars['String']['output']>;
  default_full_time_minutes?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  last_analytics_sent?: Maybe<Scalars['timestamp']['output']>;
  last_copied?: Maybe<Scalars['timestamp']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  planner_limit?: Maybe<Scalars['Int']['output']>;
  rate_type?: Maybe<Scalars['String']['output']>;
  size?: Maybe<Scalars['String']['output']>;
  subdomain?: Maybe<Scalars['String']['output']>;
  subscription_type?: Maybe<Scalars['String']['output']>;
  timesheet_lock?: Maybe<Scalars['Int']['output']>;
  timesheet_lock_method?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
  website?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "accounts" */
export type Accounts_Max_Order_By = {
  account_type?: InputMaybe<Order_By>;
  alias?: InputMaybe<Order_By>;
  alternative_account_id?: InputMaybe<Order_By>;
  auth_token?: InputMaybe<Order_By>;
  billing_method?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  default_full_time_minutes?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  last_analytics_sent?: InputMaybe<Order_By>;
  last_copied?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  planner_limit?: InputMaybe<Order_By>;
  rate_type?: InputMaybe<Order_By>;
  size?: InputMaybe<Order_By>;
  subdomain?: InputMaybe<Order_By>;
  subscription_type?: InputMaybe<Order_By>;
  timesheet_lock?: InputMaybe<Order_By>;
  timesheet_lock_method?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  website?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Accounts_Min_Fields = {
  __typename?: 'accounts_min_fields';
  account_type?: Maybe<Scalars['String']['output']>;
  alias?: Maybe<Scalars['String']['output']>;
  alternative_account_id?: Maybe<Scalars['Int']['output']>;
  auth_token?: Maybe<Scalars['String']['output']>;
  billing_method?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  currency?: Maybe<Scalars['String']['output']>;
  default_full_time_minutes?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  last_analytics_sent?: Maybe<Scalars['timestamp']['output']>;
  last_copied?: Maybe<Scalars['timestamp']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  planner_limit?: Maybe<Scalars['Int']['output']>;
  rate_type?: Maybe<Scalars['String']['output']>;
  size?: Maybe<Scalars['String']['output']>;
  subdomain?: Maybe<Scalars['String']['output']>;
  subscription_type?: Maybe<Scalars['String']['output']>;
  timesheet_lock?: Maybe<Scalars['Int']['output']>;
  timesheet_lock_method?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
  website?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "accounts" */
export type Accounts_Min_Order_By = {
  account_type?: InputMaybe<Order_By>;
  alias?: InputMaybe<Order_By>;
  alternative_account_id?: InputMaybe<Order_By>;
  auth_token?: InputMaybe<Order_By>;
  billing_method?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  default_full_time_minutes?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  last_analytics_sent?: InputMaybe<Order_By>;
  last_copied?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  planner_limit?: InputMaybe<Order_By>;
  rate_type?: InputMaybe<Order_By>;
  size?: InputMaybe<Order_By>;
  subdomain?: InputMaybe<Order_By>;
  subscription_type?: InputMaybe<Order_By>;
  timesheet_lock?: InputMaybe<Order_By>;
  timesheet_lock_method?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  website?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "accounts" */
export type Accounts_Mutation_Response = {
  __typename?: 'accounts_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Accounts>;
};

/** input type for inserting object relation for remote table "accounts" */
export type Accounts_Obj_Rel_Insert_Input = {
  data: Accounts_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Accounts_On_Conflict>;
};

/** on_conflict condition type for table "accounts" */
export type Accounts_On_Conflict = {
  constraint: Accounts_Constraint;
  update_columns?: Array<Accounts_Update_Column>;
  where?: InputMaybe<Accounts_Bool_Exp>;
};

/** Ordering options when selecting data from "accounts". */
export type Accounts_Order_By = {
  account_type?: InputMaybe<Order_By>;
  accounts_aggregate?: InputMaybe<Accounts_Aggregate_Order_By>;
  alias?: InputMaybe<Order_By>;
  alternative_account?: InputMaybe<Accounts_Order_By>;
  alternative_account_id?: InputMaybe<Order_By>;
  auth_token?: InputMaybe<Order_By>;
  autofill_timesheets?: InputMaybe<Order_By>;
  billing_method?: InputMaybe<Order_By>;
  business_days?: InputMaybe<Order_By>;
  cancel_reasons_aggregate?: InputMaybe<Cancel_Reasons_Aggregate_Order_By>;
  clients_aggregate?: InputMaybe<Clients_Aggregate_Order_By>;
  competencies_aggregate?: InputMaybe<Competencies_Aggregate_Order_By>;
  created_at?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  custom_select_types_aggregate?: InputMaybe<Custom_Select_Types_Aggregate_Order_By>;
  custom_text_types_aggregate?: InputMaybe<Custom_Text_Types_Aggregate_Order_By>;
  default_full_time_minutes?: InputMaybe<Order_By>;
  features_accounts_aggregate?: InputMaybe<Features_Accounts_Aggregate_Order_By>;
  fullstory_enabled?: InputMaybe<Order_By>;
  holidays_aggregate?: InputMaybe<Holidays_Aggregate_Order_By>;
  holidays_groups_aggregate?: InputMaybe<Holidays_Groups_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  integrations?: InputMaybe<Order_By>;
  integrationsV2_aggregate?: InputMaybe<Integration_Aggregate_Order_By>;
  invitations_aggregate?: InputMaybe<Invitations_Aggregate_Order_By>;
  last_analytics_sent?: InputMaybe<Order_By>;
  last_copied?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  people_aggregate?: InputMaybe<People_Aggregate_Order_By>;
  person_requests_aggregate?: InputMaybe<Person_Requests_Aggregate_Order_By>;
  planner_limit?: InputMaybe<Order_By>;
  project_members_aggregate?: InputMaybe<Project_Members_Aggregate_Order_By>;
  projects_aggregate?: InputMaybe<Projects_Aggregate_Order_By>;
  rate_cards_aggregate?: InputMaybe<Rate_Cards_Aggregate_Order_By>;
  rate_type?: InputMaybe<Order_By>;
  references?: InputMaybe<Order_By>;
  roles_aggregate?: InputMaybe<Roles_Aggregate_Order_By>;
  security?: InputMaybe<Order_By>;
  size?: InputMaybe<Order_By>;
  skills_aggregate?: InputMaybe<Skills_Aggregate_Order_By>;
  subdomain?: InputMaybe<Order_By>;
  subscription?: InputMaybe<Order_By>;
  subscription_customer?: InputMaybe<Order_By>;
  subscription_type?: InputMaybe<Order_By>;
  tags_aggregate?: InputMaybe<Tags_Aggregate_Order_By>;
  teams_aggregate?: InputMaybe<Teams_Aggregate_Order_By>;
  timesheet_lock?: InputMaybe<Order_By>;
  timesheet_lock_method?: InputMaybe<Order_By>;
  timesheets_enabled?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  users_aggregate?: InputMaybe<Users_Aggregate_Order_By>;
  utm?: InputMaybe<Order_By>;
  views_aggregate?: InputMaybe<Views_Aggregate_Order_By>;
  website?: InputMaybe<Order_By>;
};

/** primary key columns input for table: accounts */
export type Accounts_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Accounts_Prepend_Input = {
  integrations?: InputMaybe<Scalars['jsonb']['input']>;
  references?: InputMaybe<Scalars['jsonb']['input']>;
  security?: InputMaybe<Scalars['jsonb']['input']>;
  subscription?: InputMaybe<Scalars['jsonb']['input']>;
  subscription_customer?: InputMaybe<Scalars['jsonb']['input']>;
  utm?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "accounts" */
export enum Accounts_Select_Column {
  /** column name */
  AccountType = 'account_type',
  /** column name */
  Alias = 'alias',
  /** column name */
  AlternativeAccountId = 'alternative_account_id',
  /** column name */
  AuthToken = 'auth_token',
  /** column name */
  AutofillTimesheets = 'autofill_timesheets',
  /** column name */
  BillingMethod = 'billing_method',
  /** column name */
  BusinessDays = 'business_days',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Currency = 'currency',
  /** column name */
  DefaultFullTimeMinutes = 'default_full_time_minutes',
  /** column name */
  FullstoryEnabled = 'fullstory_enabled',
  /** column name */
  Id = 'id',
  /** column name */
  Integrations = 'integrations',
  /** column name */
  LastAnalyticsSent = 'last_analytics_sent',
  /** column name */
  LastCopied = 'last_copied',
  /** column name */
  Name = 'name',
  /** column name */
  PlannerLimit = 'planner_limit',
  /** column name */
  RateType = 'rate_type',
  /** column name */
  References = 'references',
  /** column name */
  Security = 'security',
  /** column name */
  Size = 'size',
  /** column name */
  Subdomain = 'subdomain',
  /** column name */
  Subscription = 'subscription',
  /** column name */
  SubscriptionCustomer = 'subscription_customer',
  /** column name */
  SubscriptionType = 'subscription_type',
  /** column name */
  TimesheetLock = 'timesheet_lock',
  /** column name */
  TimesheetLockMethod = 'timesheet_lock_method',
  /** column name */
  TimesheetsEnabled = 'timesheets_enabled',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Utm = 'utm',
  /** column name */
  Website = 'website'
}

/** select "accounts_aggregate_bool_exp_bool_and_arguments_columns" columns of table "accounts" */
export enum Accounts_Select_Column_Accounts_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  AutofillTimesheets = 'autofill_timesheets',
  /** column name */
  FullstoryEnabled = 'fullstory_enabled',
  /** column name */
  TimesheetsEnabled = 'timesheets_enabled'
}

/** select "accounts_aggregate_bool_exp_bool_or_arguments_columns" columns of table "accounts" */
export enum Accounts_Select_Column_Accounts_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  AutofillTimesheets = 'autofill_timesheets',
  /** column name */
  FullstoryEnabled = 'fullstory_enabled',
  /** column name */
  TimesheetsEnabled = 'timesheets_enabled'
}

/** input type for updating data in table "accounts" */
export type Accounts_Set_Input = {
  account_type?: InputMaybe<Scalars['String']['input']>;
  alias?: InputMaybe<Scalars['String']['input']>;
  alternative_account_id?: InputMaybe<Scalars['Int']['input']>;
  auth_token?: InputMaybe<Scalars['String']['input']>;
  autofill_timesheets?: InputMaybe<Scalars['Boolean']['input']>;
  billing_method?: InputMaybe<Scalars['String']['input']>;
  business_days?: InputMaybe<Scalars['_text']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  currency?: InputMaybe<Scalars['String']['input']>;
  default_full_time_minutes?: InputMaybe<Scalars['Int']['input']>;
  fullstory_enabled?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  integrations?: InputMaybe<Scalars['jsonb']['input']>;
  last_analytics_sent?: InputMaybe<Scalars['timestamp']['input']>;
  last_copied?: InputMaybe<Scalars['timestamp']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  planner_limit?: InputMaybe<Scalars['Int']['input']>;
  rate_type?: InputMaybe<Scalars['String']['input']>;
  references?: InputMaybe<Scalars['jsonb']['input']>;
  security?: InputMaybe<Scalars['jsonb']['input']>;
  size?: InputMaybe<Scalars['String']['input']>;
  subdomain?: InputMaybe<Scalars['String']['input']>;
  subscription?: InputMaybe<Scalars['jsonb']['input']>;
  subscription_customer?: InputMaybe<Scalars['jsonb']['input']>;
  subscription_type?: InputMaybe<Scalars['String']['input']>;
  timesheet_lock?: InputMaybe<Scalars['Int']['input']>;
  timesheet_lock_method?: InputMaybe<Scalars['String']['input']>;
  timesheets_enabled?: InputMaybe<Scalars['Boolean']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  utm?: InputMaybe<Scalars['jsonb']['input']>;
  website?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Accounts_Stddev_Fields = {
  __typename?: 'accounts_stddev_fields';
  alternative_account_id?: Maybe<Scalars['Float']['output']>;
  default_full_time_minutes?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  planner_limit?: Maybe<Scalars['Float']['output']>;
  timesheet_lock?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "accounts" */
export type Accounts_Stddev_Order_By = {
  alternative_account_id?: InputMaybe<Order_By>;
  default_full_time_minutes?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  planner_limit?: InputMaybe<Order_By>;
  timesheet_lock?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Accounts_Stddev_Pop_Fields = {
  __typename?: 'accounts_stddev_pop_fields';
  alternative_account_id?: Maybe<Scalars['Float']['output']>;
  default_full_time_minutes?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  planner_limit?: Maybe<Scalars['Float']['output']>;
  timesheet_lock?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "accounts" */
export type Accounts_Stddev_Pop_Order_By = {
  alternative_account_id?: InputMaybe<Order_By>;
  default_full_time_minutes?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  planner_limit?: InputMaybe<Order_By>;
  timesheet_lock?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Accounts_Stddev_Samp_Fields = {
  __typename?: 'accounts_stddev_samp_fields';
  alternative_account_id?: Maybe<Scalars['Float']['output']>;
  default_full_time_minutes?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  planner_limit?: Maybe<Scalars['Float']['output']>;
  timesheet_lock?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "accounts" */
export type Accounts_Stddev_Samp_Order_By = {
  alternative_account_id?: InputMaybe<Order_By>;
  default_full_time_minutes?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  planner_limit?: InputMaybe<Order_By>;
  timesheet_lock?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "accounts" */
export type Accounts_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Accounts_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Accounts_Stream_Cursor_Value_Input = {
  account_type?: InputMaybe<Scalars['String']['input']>;
  alias?: InputMaybe<Scalars['String']['input']>;
  alternative_account_id?: InputMaybe<Scalars['Int']['input']>;
  auth_token?: InputMaybe<Scalars['String']['input']>;
  autofill_timesheets?: InputMaybe<Scalars['Boolean']['input']>;
  billing_method?: InputMaybe<Scalars['String']['input']>;
  business_days?: InputMaybe<Scalars['_text']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  currency?: InputMaybe<Scalars['String']['input']>;
  default_full_time_minutes?: InputMaybe<Scalars['Int']['input']>;
  fullstory_enabled?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  integrations?: InputMaybe<Scalars['jsonb']['input']>;
  last_analytics_sent?: InputMaybe<Scalars['timestamp']['input']>;
  last_copied?: InputMaybe<Scalars['timestamp']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  planner_limit?: InputMaybe<Scalars['Int']['input']>;
  rate_type?: InputMaybe<Scalars['String']['input']>;
  references?: InputMaybe<Scalars['jsonb']['input']>;
  security?: InputMaybe<Scalars['jsonb']['input']>;
  size?: InputMaybe<Scalars['String']['input']>;
  subdomain?: InputMaybe<Scalars['String']['input']>;
  subscription?: InputMaybe<Scalars['jsonb']['input']>;
  subscription_customer?: InputMaybe<Scalars['jsonb']['input']>;
  subscription_type?: InputMaybe<Scalars['String']['input']>;
  timesheet_lock?: InputMaybe<Scalars['Int']['input']>;
  timesheet_lock_method?: InputMaybe<Scalars['String']['input']>;
  timesheets_enabled?: InputMaybe<Scalars['Boolean']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  utm?: InputMaybe<Scalars['jsonb']['input']>;
  website?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Accounts_Sum_Fields = {
  __typename?: 'accounts_sum_fields';
  alternative_account_id?: Maybe<Scalars['Int']['output']>;
  default_full_time_minutes?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  planner_limit?: Maybe<Scalars['Int']['output']>;
  timesheet_lock?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "accounts" */
export type Accounts_Sum_Order_By = {
  alternative_account_id?: InputMaybe<Order_By>;
  default_full_time_minutes?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  planner_limit?: InputMaybe<Order_By>;
  timesheet_lock?: InputMaybe<Order_By>;
};

/** update columns of table "accounts" */
export enum Accounts_Update_Column {
  /** column name */
  AccountType = 'account_type',
  /** column name */
  Alias = 'alias',
  /** column name */
  AlternativeAccountId = 'alternative_account_id',
  /** column name */
  AuthToken = 'auth_token',
  /** column name */
  AutofillTimesheets = 'autofill_timesheets',
  /** column name */
  BillingMethod = 'billing_method',
  /** column name */
  BusinessDays = 'business_days',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Currency = 'currency',
  /** column name */
  DefaultFullTimeMinutes = 'default_full_time_minutes',
  /** column name */
  FullstoryEnabled = 'fullstory_enabled',
  /** column name */
  Id = 'id',
  /** column name */
  Integrations = 'integrations',
  /** column name */
  LastAnalyticsSent = 'last_analytics_sent',
  /** column name */
  LastCopied = 'last_copied',
  /** column name */
  Name = 'name',
  /** column name */
  PlannerLimit = 'planner_limit',
  /** column name */
  RateType = 'rate_type',
  /** column name */
  References = 'references',
  /** column name */
  Security = 'security',
  /** column name */
  Size = 'size',
  /** column name */
  Subdomain = 'subdomain',
  /** column name */
  Subscription = 'subscription',
  /** column name */
  SubscriptionCustomer = 'subscription_customer',
  /** column name */
  SubscriptionType = 'subscription_type',
  /** column name */
  TimesheetLock = 'timesheet_lock',
  /** column name */
  TimesheetLockMethod = 'timesheet_lock_method',
  /** column name */
  TimesheetsEnabled = 'timesheets_enabled',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Utm = 'utm',
  /** column name */
  Website = 'website'
}

export type Accounts_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Accounts_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Accounts_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Accounts_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Accounts_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Accounts_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Accounts_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Accounts_Set_Input>;
  /** filter the rows which have to be updated */
  where: Accounts_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Accounts_Var_Pop_Fields = {
  __typename?: 'accounts_var_pop_fields';
  alternative_account_id?: Maybe<Scalars['Float']['output']>;
  default_full_time_minutes?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  planner_limit?: Maybe<Scalars['Float']['output']>;
  timesheet_lock?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "accounts" */
export type Accounts_Var_Pop_Order_By = {
  alternative_account_id?: InputMaybe<Order_By>;
  default_full_time_minutes?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  planner_limit?: InputMaybe<Order_By>;
  timesheet_lock?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Accounts_Var_Samp_Fields = {
  __typename?: 'accounts_var_samp_fields';
  alternative_account_id?: Maybe<Scalars['Float']['output']>;
  default_full_time_minutes?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  planner_limit?: Maybe<Scalars['Float']['output']>;
  timesheet_lock?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "accounts" */
export type Accounts_Var_Samp_Order_By = {
  alternative_account_id?: InputMaybe<Order_By>;
  default_full_time_minutes?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  planner_limit?: InputMaybe<Order_By>;
  timesheet_lock?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Accounts_Variance_Fields = {
  __typename?: 'accounts_variance_fields';
  alternative_account_id?: Maybe<Scalars['Float']['output']>;
  default_full_time_minutes?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  planner_limit?: Maybe<Scalars['Float']['output']>;
  timesheet_lock?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "accounts" */
export type Accounts_Variance_Order_By = {
  alternative_account_id?: InputMaybe<Order_By>;
  default_full_time_minutes?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  planner_limit?: InputMaybe<Order_By>;
  timesheet_lock?: InputMaybe<Order_By>;
};

/** columns and relationships of "actuals" */
export type Actuals = {
  __typename?: 'actuals';
  account_id: Scalars['Int']['output'];
  billable_minutes?: Maybe<Scalars['Int']['output']>;
  billable_note?: Maybe<Scalars['String']['output']>;
  created_at: Scalars['timestamp']['output'];
  date_iso: Scalars['date']['output'];
  date_runn?: Maybe<Scalars['String']['output']>;
  entry_type?: Maybe<Scalars['String']['output']>;
  id: Scalars['Int']['output'];
  nonbillable_minutes?: Maybe<Scalars['Int']['output']>;
  nonbillable_note?: Maybe<Scalars['String']['output']>;
  origin_data?: Maybe<Scalars['jsonb']['output']>;
  /** An object relationship */
  person: People;
  person_id: Scalars['Int']['output'];
  /** An object relationship */
  phase?: Maybe<Phases>;
  phase_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  project: Projects;
  project_id: Scalars['Int']['output'];
  /** An object relationship */
  role: Roles;
  role_id: Scalars['Int']['output'];
  updated_at: Scalars['timestamp']['output'];
};


/** columns and relationships of "actuals" */
export type ActualsOrigin_DataArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "actuals" */
export type Actuals_Aggregate = {
  __typename?: 'actuals_aggregate';
  aggregate?: Maybe<Actuals_Aggregate_Fields>;
  nodes: Array<Actuals>;
};

export type Actuals_Aggregate_Bool_Exp = {
  count?: InputMaybe<Actuals_Aggregate_Bool_Exp_Count>;
};

export type Actuals_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Actuals_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Actuals_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "actuals" */
export type Actuals_Aggregate_Fields = {
  __typename?: 'actuals_aggregate_fields';
  avg?: Maybe<Actuals_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Actuals_Max_Fields>;
  min?: Maybe<Actuals_Min_Fields>;
  stddev?: Maybe<Actuals_Stddev_Fields>;
  stddev_pop?: Maybe<Actuals_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Actuals_Stddev_Samp_Fields>;
  sum?: Maybe<Actuals_Sum_Fields>;
  var_pop?: Maybe<Actuals_Var_Pop_Fields>;
  var_samp?: Maybe<Actuals_Var_Samp_Fields>;
  variance?: Maybe<Actuals_Variance_Fields>;
};


/** aggregate fields of "actuals" */
export type Actuals_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Actuals_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "actuals" */
export type Actuals_Aggregate_Order_By = {
  avg?: InputMaybe<Actuals_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Actuals_Max_Order_By>;
  min?: InputMaybe<Actuals_Min_Order_By>;
  stddev?: InputMaybe<Actuals_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Actuals_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Actuals_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Actuals_Sum_Order_By>;
  var_pop?: InputMaybe<Actuals_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Actuals_Var_Samp_Order_By>;
  variance?: InputMaybe<Actuals_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Actuals_Append_Input = {
  origin_data?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "actuals" */
export type Actuals_Arr_Rel_Insert_Input = {
  data: Array<Actuals_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Actuals_On_Conflict>;
};

/** aggregate avg on columns */
export type Actuals_Avg_Fields = {
  __typename?: 'actuals_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  billable_minutes?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  phase_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "actuals" */
export type Actuals_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  billable_minutes?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  nonbillable_minutes?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "actuals". All fields are combined with a logical 'AND'. */
export type Actuals_Bool_Exp = {
  _and?: InputMaybe<Array<Actuals_Bool_Exp>>;
  _not?: InputMaybe<Actuals_Bool_Exp>;
  _or?: InputMaybe<Array<Actuals_Bool_Exp>>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  billable_minutes?: InputMaybe<Int_Comparison_Exp>;
  billable_note?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  date_iso?: InputMaybe<Date_Comparison_Exp>;
  date_runn?: InputMaybe<String_Comparison_Exp>;
  entry_type?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  nonbillable_minutes?: InputMaybe<Int_Comparison_Exp>;
  nonbillable_note?: InputMaybe<String_Comparison_Exp>;
  origin_data?: InputMaybe<Jsonb_Comparison_Exp>;
  person?: InputMaybe<People_Bool_Exp>;
  person_id?: InputMaybe<Int_Comparison_Exp>;
  phase?: InputMaybe<Phases_Bool_Exp>;
  phase_id?: InputMaybe<Int_Comparison_Exp>;
  project?: InputMaybe<Projects_Bool_Exp>;
  project_id?: InputMaybe<Int_Comparison_Exp>;
  role?: InputMaybe<Roles_Bool_Exp>;
  role_id?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "actuals" */
export enum Actuals_Constraint {
  /** unique or primary key constraint on columns "id" */
  ActualsPkey = 'actuals_pkey',
  /** unique or primary key constraint on columns "role_id", "project_id", "date", "person_id" */
  IndexActualsDatePersonRoleProject = 'index_actuals_date_person_role_project',
  /** unique or primary key constraint on columns "account_id", "id" */
  IndexUniqueActualsIdAccountId = 'index_unique_actuals_id_account_id'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Actuals_Delete_At_Path_Input = {
  origin_data?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Actuals_Delete_Elem_Input = {
  origin_data?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Actuals_Delete_Key_Input = {
  origin_data?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "actuals" */
export type Actuals_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  billable_minutes?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  nonbillable_minutes?: InputMaybe<Scalars['Int']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  phase_id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "actuals" */
export type Actuals_Insert_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  billable_minutes?: InputMaybe<Scalars['Int']['input']>;
  billable_note?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  date_iso?: InputMaybe<Scalars['date']['input']>;
  entry_type?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  nonbillable_minutes?: InputMaybe<Scalars['Int']['input']>;
  nonbillable_note?: InputMaybe<Scalars['String']['input']>;
  origin_data?: InputMaybe<Scalars['jsonb']['input']>;
  person?: InputMaybe<People_Obj_Rel_Insert_Input>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  phase?: InputMaybe<Phases_Obj_Rel_Insert_Input>;
  phase_id?: InputMaybe<Scalars['Int']['input']>;
  project?: InputMaybe<Projects_Obj_Rel_Insert_Input>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  role?: InputMaybe<Roles_Obj_Rel_Insert_Input>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Actuals_Max_Fields = {
  __typename?: 'actuals_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  billable_minutes?: Maybe<Scalars['Int']['output']>;
  billable_note?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  date_iso?: Maybe<Scalars['date']['output']>;
  date_runn?: Maybe<Scalars['String']['output']>;
  entry_type?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  nonbillable_minutes?: Maybe<Scalars['Int']['output']>;
  nonbillable_note?: Maybe<Scalars['String']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  phase_id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  role_id?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "actuals" */
export type Actuals_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  billable_minutes?: InputMaybe<Order_By>;
  billable_note?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  date_iso?: InputMaybe<Order_By>;
  entry_type?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  nonbillable_minutes?: InputMaybe<Order_By>;
  nonbillable_note?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Actuals_Min_Fields = {
  __typename?: 'actuals_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  billable_minutes?: Maybe<Scalars['Int']['output']>;
  billable_note?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  date_iso?: Maybe<Scalars['date']['output']>;
  date_runn?: Maybe<Scalars['String']['output']>;
  entry_type?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  nonbillable_minutes?: Maybe<Scalars['Int']['output']>;
  nonbillable_note?: Maybe<Scalars['String']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  phase_id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  role_id?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "actuals" */
export type Actuals_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  billable_minutes?: InputMaybe<Order_By>;
  billable_note?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  date_iso?: InputMaybe<Order_By>;
  entry_type?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  nonbillable_minutes?: InputMaybe<Order_By>;
  nonbillable_note?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "actuals" */
export type Actuals_Mutation_Response = {
  __typename?: 'actuals_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Actuals>;
};

/** on_conflict condition type for table "actuals" */
export type Actuals_On_Conflict = {
  constraint: Actuals_Constraint;
  update_columns?: Array<Actuals_Update_Column>;
  where?: InputMaybe<Actuals_Bool_Exp>;
};

/** Ordering options when selecting data from "actuals". */
export type Actuals_Order_By = {
  account_id?: InputMaybe<Order_By>;
  billable_minutes?: InputMaybe<Order_By>;
  billable_note?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  date_iso?: InputMaybe<Order_By>;
  date_runn?: InputMaybe<Order_By>;
  entry_type?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  nonbillable_minutes?: InputMaybe<Order_By>;
  nonbillable_note?: InputMaybe<Order_By>;
  origin_data?: InputMaybe<Order_By>;
  person?: InputMaybe<People_Order_By>;
  person_id?: InputMaybe<Order_By>;
  phase?: InputMaybe<Phases_Order_By>;
  phase_id?: InputMaybe<Order_By>;
  project?: InputMaybe<Projects_Order_By>;
  project_id?: InputMaybe<Order_By>;
  role?: InputMaybe<Roles_Order_By>;
  role_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: actuals */
export type Actuals_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Actuals_Prepend_Input = {
  origin_data?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "actuals" */
export enum Actuals_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  BillableMinutes = 'billable_minutes',
  /** column name */
  BillableNote = 'billable_note',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DateIso = 'date_iso',
  /** column name */
  EntryType = 'entry_type',
  /** column name */
  Id = 'id',
  /** column name */
  NonbillableMinutes = 'nonbillable_minutes',
  /** column name */
  NonbillableNote = 'nonbillable_note',
  /** column name */
  OriginData = 'origin_data',
  /** column name */
  PersonId = 'person_id',
  /** column name */
  PhaseId = 'phase_id',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  RoleId = 'role_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "actuals" */
export type Actuals_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  billable_minutes?: InputMaybe<Scalars['Int']['input']>;
  billable_note?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  date_iso?: InputMaybe<Scalars['date']['input']>;
  entry_type?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  nonbillable_minutes?: InputMaybe<Scalars['Int']['input']>;
  nonbillable_note?: InputMaybe<Scalars['String']['input']>;
  origin_data?: InputMaybe<Scalars['jsonb']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  phase_id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Actuals_Stddev_Fields = {
  __typename?: 'actuals_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  billable_minutes?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  phase_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "actuals" */
export type Actuals_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  billable_minutes?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  nonbillable_minutes?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Actuals_Stddev_Pop_Fields = {
  __typename?: 'actuals_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  billable_minutes?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  phase_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "actuals" */
export type Actuals_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  billable_minutes?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  nonbillable_minutes?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Actuals_Stddev_Samp_Fields = {
  __typename?: 'actuals_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  billable_minutes?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  phase_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "actuals" */
export type Actuals_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  billable_minutes?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  nonbillable_minutes?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "actuals" */
export type Actuals_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Actuals_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Actuals_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  billable_minutes?: InputMaybe<Scalars['Int']['input']>;
  billable_note?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  date_iso?: InputMaybe<Scalars['date']['input']>;
  entry_type?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  nonbillable_minutes?: InputMaybe<Scalars['Int']['input']>;
  nonbillable_note?: InputMaybe<Scalars['String']['input']>;
  origin_data?: InputMaybe<Scalars['jsonb']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  phase_id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Actuals_Sum_Fields = {
  __typename?: 'actuals_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  billable_minutes?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  nonbillable_minutes?: Maybe<Scalars['Int']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  phase_id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  role_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "actuals" */
export type Actuals_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  billable_minutes?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  nonbillable_minutes?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** update columns of table "actuals" */
export enum Actuals_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  BillableMinutes = 'billable_minutes',
  /** column name */
  BillableNote = 'billable_note',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DateIso = 'date_iso',
  /** column name */
  EntryType = 'entry_type',
  /** column name */
  Id = 'id',
  /** column name */
  NonbillableMinutes = 'nonbillable_minutes',
  /** column name */
  NonbillableNote = 'nonbillable_note',
  /** column name */
  OriginData = 'origin_data',
  /** column name */
  PersonId = 'person_id',
  /** column name */
  PhaseId = 'phase_id',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  RoleId = 'role_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Actuals_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Actuals_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Actuals_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Actuals_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Actuals_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Actuals_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Actuals_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Actuals_Set_Input>;
  /** filter the rows which have to be updated */
  where: Actuals_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Actuals_Var_Pop_Fields = {
  __typename?: 'actuals_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  billable_minutes?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  phase_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "actuals" */
export type Actuals_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  billable_minutes?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  nonbillable_minutes?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Actuals_Var_Samp_Fields = {
  __typename?: 'actuals_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  billable_minutes?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  phase_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "actuals" */
export type Actuals_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  billable_minutes?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  nonbillable_minutes?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Actuals_Variance_Fields = {
  __typename?: 'actuals_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  billable_minutes?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  phase_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "actuals" */
export type Actuals_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  billable_minutes?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  nonbillable_minutes?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "api_tokens" */
export type Api_Tokens = {
  __typename?: 'api_tokens';
  /** An object relationship */
  account: Accounts;
  account_id: Scalars['Int']['output'];
  created_at: Scalars['timestamp']['output'];
  created_by?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  created_by_user?: Maybe<Users>;
  expiration_timestamp: Scalars['timestamp']['output'];
  id: Scalars['Int']['output'];
  is_revoked: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  permissions: Scalars['_text']['output'];
  revoked_at?: Maybe<Scalars['timestamp']['output']>;
  revoked_by?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  revoked_by_user?: Maybe<Users>;
  token: Scalars['String']['output'];
};

/** aggregated selection of "api_tokens" */
export type Api_Tokens_Aggregate = {
  __typename?: 'api_tokens_aggregate';
  aggregate?: Maybe<Api_Tokens_Aggregate_Fields>;
  nodes: Array<Api_Tokens>;
};

/** aggregate fields of "api_tokens" */
export type Api_Tokens_Aggregate_Fields = {
  __typename?: 'api_tokens_aggregate_fields';
  avg?: Maybe<Api_Tokens_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Api_Tokens_Max_Fields>;
  min?: Maybe<Api_Tokens_Min_Fields>;
  stddev?: Maybe<Api_Tokens_Stddev_Fields>;
  stddev_pop?: Maybe<Api_Tokens_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Api_Tokens_Stddev_Samp_Fields>;
  sum?: Maybe<Api_Tokens_Sum_Fields>;
  var_pop?: Maybe<Api_Tokens_Var_Pop_Fields>;
  var_samp?: Maybe<Api_Tokens_Var_Samp_Fields>;
  variance?: Maybe<Api_Tokens_Variance_Fields>;
};


/** aggregate fields of "api_tokens" */
export type Api_Tokens_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Api_Tokens_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Api_Tokens_Avg_Fields = {
  __typename?: 'api_tokens_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  created_by?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  revoked_by?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "api_tokens". All fields are combined with a logical 'AND'. */
export type Api_Tokens_Bool_Exp = {
  _and?: InputMaybe<Array<Api_Tokens_Bool_Exp>>;
  _not?: InputMaybe<Api_Tokens_Bool_Exp>;
  _or?: InputMaybe<Array<Api_Tokens_Bool_Exp>>;
  account?: InputMaybe<Accounts_Bool_Exp>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  created_by?: InputMaybe<Int_Comparison_Exp>;
  created_by_user?: InputMaybe<Users_Bool_Exp>;
  expiration_timestamp?: InputMaybe<Timestamp_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  is_revoked?: InputMaybe<Boolean_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  permissions?: InputMaybe<_Text_Comparison_Exp>;
  revoked_at?: InputMaybe<Timestamp_Comparison_Exp>;
  revoked_by?: InputMaybe<Int_Comparison_Exp>;
  revoked_by_user?: InputMaybe<Users_Bool_Exp>;
  token?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "api_tokens" */
export enum Api_Tokens_Constraint {
  /** unique or primary key constraint on columns "id" */
  ApiTokensPkey = 'api_tokens_pkey',
  /** unique or primary key constraint on columns "token" */
  ApiTokensTokenKey = 'api_tokens_token_key',
  /** unique or primary key constraint on columns "account_id", "name" */
  UniqueNamePerAccount = 'unique_name_per_account'
}

/** input type for incrementing numeric columns in table "api_tokens" */
export type Api_Tokens_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_by?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  revoked_by?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "api_tokens" */
export type Api_Tokens_Insert_Input = {
  account?: InputMaybe<Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  created_by?: InputMaybe<Scalars['Int']['input']>;
  created_by_user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  expiration_timestamp?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_revoked?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  permissions?: InputMaybe<Scalars['_text']['input']>;
  revoked_at?: InputMaybe<Scalars['timestamp']['input']>;
  revoked_by?: InputMaybe<Scalars['Int']['input']>;
  revoked_by_user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  token?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Api_Tokens_Max_Fields = {
  __typename?: 'api_tokens_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  created_by?: Maybe<Scalars['Int']['output']>;
  expiration_timestamp?: Maybe<Scalars['timestamp']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  revoked_at?: Maybe<Scalars['timestamp']['output']>;
  revoked_by?: Maybe<Scalars['Int']['output']>;
  token?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Api_Tokens_Min_Fields = {
  __typename?: 'api_tokens_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  created_by?: Maybe<Scalars['Int']['output']>;
  expiration_timestamp?: Maybe<Scalars['timestamp']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  revoked_at?: Maybe<Scalars['timestamp']['output']>;
  revoked_by?: Maybe<Scalars['Int']['output']>;
  token?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "api_tokens" */
export type Api_Tokens_Mutation_Response = {
  __typename?: 'api_tokens_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Api_Tokens>;
};

/** on_conflict condition type for table "api_tokens" */
export type Api_Tokens_On_Conflict = {
  constraint: Api_Tokens_Constraint;
  update_columns?: Array<Api_Tokens_Update_Column>;
  where?: InputMaybe<Api_Tokens_Bool_Exp>;
};

/** Ordering options when selecting data from "api_tokens". */
export type Api_Tokens_Order_By = {
  account?: InputMaybe<Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  created_by?: InputMaybe<Order_By>;
  created_by_user?: InputMaybe<Users_Order_By>;
  expiration_timestamp?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  is_revoked?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  permissions?: InputMaybe<Order_By>;
  revoked_at?: InputMaybe<Order_By>;
  revoked_by?: InputMaybe<Order_By>;
  revoked_by_user?: InputMaybe<Users_Order_By>;
  token?: InputMaybe<Order_By>;
};

/** primary key columns input for table: api_tokens */
export type Api_Tokens_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "api_tokens" */
export enum Api_Tokens_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CreatedBy = 'created_by',
  /** column name */
  ExpirationTimestamp = 'expiration_timestamp',
  /** column name */
  Id = 'id',
  /** column name */
  IsRevoked = 'is_revoked',
  /** column name */
  Name = 'name',
  /** column name */
  Permissions = 'permissions',
  /** column name */
  RevokedAt = 'revoked_at',
  /** column name */
  RevokedBy = 'revoked_by',
  /** column name */
  Token = 'token'
}

/** input type for updating data in table "api_tokens" */
export type Api_Tokens_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  created_by?: InputMaybe<Scalars['Int']['input']>;
  expiration_timestamp?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_revoked?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  permissions?: InputMaybe<Scalars['_text']['input']>;
  revoked_at?: InputMaybe<Scalars['timestamp']['input']>;
  revoked_by?: InputMaybe<Scalars['Int']['input']>;
  token?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Api_Tokens_Stddev_Fields = {
  __typename?: 'api_tokens_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  created_by?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  revoked_by?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Api_Tokens_Stddev_Pop_Fields = {
  __typename?: 'api_tokens_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  created_by?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  revoked_by?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Api_Tokens_Stddev_Samp_Fields = {
  __typename?: 'api_tokens_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  created_by?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  revoked_by?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "api_tokens" */
export type Api_Tokens_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Api_Tokens_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Api_Tokens_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  created_by?: InputMaybe<Scalars['Int']['input']>;
  expiration_timestamp?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_revoked?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  permissions?: InputMaybe<Scalars['_text']['input']>;
  revoked_at?: InputMaybe<Scalars['timestamp']['input']>;
  revoked_by?: InputMaybe<Scalars['Int']['input']>;
  token?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Api_Tokens_Sum_Fields = {
  __typename?: 'api_tokens_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_by?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  revoked_by?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "api_tokens" */
export enum Api_Tokens_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CreatedBy = 'created_by',
  /** column name */
  ExpirationTimestamp = 'expiration_timestamp',
  /** column name */
  Id = 'id',
  /** column name */
  IsRevoked = 'is_revoked',
  /** column name */
  Name = 'name',
  /** column name */
  Permissions = 'permissions',
  /** column name */
  RevokedAt = 'revoked_at',
  /** column name */
  RevokedBy = 'revoked_by',
  /** column name */
  Token = 'token'
}

export type Api_Tokens_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Api_Tokens_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Api_Tokens_Set_Input>;
  /** filter the rows which have to be updated */
  where: Api_Tokens_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Api_Tokens_Var_Pop_Fields = {
  __typename?: 'api_tokens_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  created_by?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  revoked_by?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Api_Tokens_Var_Samp_Fields = {
  __typename?: 'api_tokens_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  created_by?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  revoked_by?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Api_Tokens_Variance_Fields = {
  __typename?: 'api_tokens_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  created_by?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  revoked_by?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "assignments" */
export type Assignments = {
  __typename?: 'assignments';
  account_id: Scalars['Int']['output'];
  active: Scalars['Boolean']['output'];
  created_at: Scalars['timestamp']['output'];
  end_date_iso: Scalars['date']['output'];
  end_date_runn?: Maybe<Scalars['String']['output']>;
  id: Scalars['Int']['output'];
  is_billable?: Maybe<Scalars['Boolean']['output']>;
  is_template: Scalars['Boolean']['output'];
  minutes_per_day: Scalars['Int']['output'];
  non_working_day: Scalars['Boolean']['output'];
  note?: Maybe<Scalars['String']['output']>;
  /** An object relationship */
  person: People;
  person_id: Scalars['Int']['output'];
  /** An object relationship */
  phase?: Maybe<Phases>;
  phase_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  project: Projects;
  project_id: Scalars['Int']['output'];
  /** An object relationship */
  role?: Maybe<Roles>;
  role_id: Scalars['Int']['output'];
  start_date_iso: Scalars['date']['output'];
  start_date_runn?: Maybe<Scalars['String']['output']>;
  total_minutes?: Maybe<Scalars['Int']['output']>;
  updated_at: Scalars['timestamp']['output'];
};

/** aggregated selection of "assignments" */
export type Assignments_Aggregate = {
  __typename?: 'assignments_aggregate';
  aggregate?: Maybe<Assignments_Aggregate_Fields>;
  nodes: Array<Assignments>;
};

export type Assignments_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Assignments_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Assignments_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Assignments_Aggregate_Bool_Exp_Count>;
};

export type Assignments_Aggregate_Bool_Exp_Bool_And = {
  arguments: Assignments_Select_Column_Assignments_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Assignments_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Assignments_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Assignments_Select_Column_Assignments_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Assignments_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Assignments_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Assignments_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Assignments_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "assignments" */
export type Assignments_Aggregate_Fields = {
  __typename?: 'assignments_aggregate_fields';
  avg?: Maybe<Assignments_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Assignments_Max_Fields>;
  min?: Maybe<Assignments_Min_Fields>;
  stddev?: Maybe<Assignments_Stddev_Fields>;
  stddev_pop?: Maybe<Assignments_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Assignments_Stddev_Samp_Fields>;
  sum?: Maybe<Assignments_Sum_Fields>;
  var_pop?: Maybe<Assignments_Var_Pop_Fields>;
  var_samp?: Maybe<Assignments_Var_Samp_Fields>;
  variance?: Maybe<Assignments_Variance_Fields>;
};


/** aggregate fields of "assignments" */
export type Assignments_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Assignments_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "assignments" */
export type Assignments_Aggregate_Order_By = {
  avg?: InputMaybe<Assignments_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Assignments_Max_Order_By>;
  min?: InputMaybe<Assignments_Min_Order_By>;
  stddev?: InputMaybe<Assignments_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Assignments_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Assignments_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Assignments_Sum_Order_By>;
  var_pop?: InputMaybe<Assignments_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Assignments_Var_Samp_Order_By>;
  variance?: InputMaybe<Assignments_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "assignments" */
export type Assignments_Arr_Rel_Insert_Input = {
  data: Array<Assignments_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Assignments_On_Conflict>;
};

/** aggregate avg on columns */
export type Assignments_Avg_Fields = {
  __typename?: 'assignments_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  minutes_per_day?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  phase_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
  total_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "assignments" */
export type Assignments_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minutes_per_day?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  total_minutes?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "assignments". All fields are combined with a logical 'AND'. */
export type Assignments_Bool_Exp = {
  _and?: InputMaybe<Array<Assignments_Bool_Exp>>;
  _not?: InputMaybe<Assignments_Bool_Exp>;
  _or?: InputMaybe<Array<Assignments_Bool_Exp>>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  active?: InputMaybe<Boolean_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  end_date_iso?: InputMaybe<Date_Comparison_Exp>;
  end_date_runn?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  is_billable?: InputMaybe<Boolean_Comparison_Exp>;
  is_template?: InputMaybe<Boolean_Comparison_Exp>;
  minutes_per_day?: InputMaybe<Int_Comparison_Exp>;
  non_working_day?: InputMaybe<Boolean_Comparison_Exp>;
  note?: InputMaybe<String_Comparison_Exp>;
  person?: InputMaybe<People_Bool_Exp>;
  person_id?: InputMaybe<Int_Comparison_Exp>;
  phase?: InputMaybe<Phases_Bool_Exp>;
  phase_id?: InputMaybe<Int_Comparison_Exp>;
  project?: InputMaybe<Projects_Bool_Exp>;
  project_id?: InputMaybe<Int_Comparison_Exp>;
  role?: InputMaybe<Roles_Bool_Exp>;
  role_id?: InputMaybe<Int_Comparison_Exp>;
  start_date_iso?: InputMaybe<Date_Comparison_Exp>;
  start_date_runn?: InputMaybe<String_Comparison_Exp>;
  total_minutes?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "assignments" */
export enum Assignments_Constraint {
  /** unique or primary key constraint on columns "id" */
  AssignmentsPkey = 'assignments_pkey',
  /** unique or primary key constraint on columns "role_id", "project_id", "end_date", "start_date", "person_id" */
  IndexUniqueAssignments = 'index_unique_assignments',
  /** unique or primary key constraint on columns "account_id", "id" */
  IndexUniqueAssignmentsIdAccountId = 'index_unique_assignments_id_account_id'
}

/** input type for incrementing numeric columns in table "assignments" */
export type Assignments_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  minutes_per_day?: InputMaybe<Scalars['Int']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  phase_id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
  total_minutes?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "assignments" */
export type Assignments_Insert_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  end_date_iso?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_billable?: InputMaybe<Scalars['Boolean']['input']>;
  is_template?: InputMaybe<Scalars['Boolean']['input']>;
  minutes_per_day?: InputMaybe<Scalars['Int']['input']>;
  non_working_day?: InputMaybe<Scalars['Boolean']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  person?: InputMaybe<People_Obj_Rel_Insert_Input>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  phase?: InputMaybe<Phases_Obj_Rel_Insert_Input>;
  phase_id?: InputMaybe<Scalars['Int']['input']>;
  project?: InputMaybe<Projects_Obj_Rel_Insert_Input>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  role?: InputMaybe<Roles_Obj_Rel_Insert_Input>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
  start_date_iso?: InputMaybe<Scalars['date']['input']>;
  total_minutes?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Assignments_Max_Fields = {
  __typename?: 'assignments_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  end_date_iso?: Maybe<Scalars['date']['output']>;
  end_date_runn?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  minutes_per_day?: Maybe<Scalars['Int']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  phase_id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  role_id?: Maybe<Scalars['Int']['output']>;
  start_date_iso?: Maybe<Scalars['date']['output']>;
  start_date_runn?: Maybe<Scalars['String']['output']>;
  total_minutes?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "assignments" */
export type Assignments_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  end_date_iso?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minutes_per_day?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  start_date_iso?: InputMaybe<Order_By>;
  total_minutes?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Assignments_Min_Fields = {
  __typename?: 'assignments_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  end_date_iso?: Maybe<Scalars['date']['output']>;
  end_date_runn?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  minutes_per_day?: Maybe<Scalars['Int']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  phase_id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  role_id?: Maybe<Scalars['Int']['output']>;
  start_date_iso?: Maybe<Scalars['date']['output']>;
  start_date_runn?: Maybe<Scalars['String']['output']>;
  total_minutes?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "assignments" */
export type Assignments_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  end_date_iso?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minutes_per_day?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  start_date_iso?: InputMaybe<Order_By>;
  total_minutes?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "assignments" */
export type Assignments_Mutation_Response = {
  __typename?: 'assignments_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Assignments>;
};

/** on_conflict condition type for table "assignments" */
export type Assignments_On_Conflict = {
  constraint: Assignments_Constraint;
  update_columns?: Array<Assignments_Update_Column>;
  where?: InputMaybe<Assignments_Bool_Exp>;
};

/** Ordering options when selecting data from "assignments". */
export type Assignments_Order_By = {
  account_id?: InputMaybe<Order_By>;
  active?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  end_date_iso?: InputMaybe<Order_By>;
  end_date_runn?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  is_billable?: InputMaybe<Order_By>;
  is_template?: InputMaybe<Order_By>;
  minutes_per_day?: InputMaybe<Order_By>;
  non_working_day?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  person?: InputMaybe<People_Order_By>;
  person_id?: InputMaybe<Order_By>;
  phase?: InputMaybe<Phases_Order_By>;
  phase_id?: InputMaybe<Order_By>;
  project?: InputMaybe<Projects_Order_By>;
  project_id?: InputMaybe<Order_By>;
  role?: InputMaybe<Roles_Order_By>;
  role_id?: InputMaybe<Order_By>;
  start_date_iso?: InputMaybe<Order_By>;
  start_date_runn?: InputMaybe<Order_By>;
  total_minutes?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: assignments */
export type Assignments_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "assignments" */
export enum Assignments_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Active = 'active',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  EndDateIso = 'end_date_iso',
  /** column name */
  Id = 'id',
  /** column name */
  IsBillable = 'is_billable',
  /** column name */
  IsTemplate = 'is_template',
  /** column name */
  MinutesPerDay = 'minutes_per_day',
  /** column name */
  NonWorkingDay = 'non_working_day',
  /** column name */
  Note = 'note',
  /** column name */
  PersonId = 'person_id',
  /** column name */
  PhaseId = 'phase_id',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  RoleId = 'role_id',
  /** column name */
  StartDateIso = 'start_date_iso',
  /** column name */
  TotalMinutes = 'total_minutes',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** select "assignments_aggregate_bool_exp_bool_and_arguments_columns" columns of table "assignments" */
export enum Assignments_Select_Column_Assignments_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  Active = 'active',
  /** column name */
  IsBillable = 'is_billable',
  /** column name */
  IsTemplate = 'is_template',
  /** column name */
  NonWorkingDay = 'non_working_day'
}

/** select "assignments_aggregate_bool_exp_bool_or_arguments_columns" columns of table "assignments" */
export enum Assignments_Select_Column_Assignments_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  Active = 'active',
  /** column name */
  IsBillable = 'is_billable',
  /** column name */
  IsTemplate = 'is_template',
  /** column name */
  NonWorkingDay = 'non_working_day'
}

/** input type for updating data in table "assignments" */
export type Assignments_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  end_date_iso?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_billable?: InputMaybe<Scalars['Boolean']['input']>;
  is_template?: InputMaybe<Scalars['Boolean']['input']>;
  minutes_per_day?: InputMaybe<Scalars['Int']['input']>;
  non_working_day?: InputMaybe<Scalars['Boolean']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  phase_id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
  start_date_iso?: InputMaybe<Scalars['date']['input']>;
  total_minutes?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Assignments_Stddev_Fields = {
  __typename?: 'assignments_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  minutes_per_day?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  phase_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
  total_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "assignments" */
export type Assignments_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minutes_per_day?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  total_minutes?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Assignments_Stddev_Pop_Fields = {
  __typename?: 'assignments_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  minutes_per_day?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  phase_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
  total_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "assignments" */
export type Assignments_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minutes_per_day?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  total_minutes?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Assignments_Stddev_Samp_Fields = {
  __typename?: 'assignments_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  minutes_per_day?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  phase_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
  total_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "assignments" */
export type Assignments_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minutes_per_day?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  total_minutes?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "assignments" */
export type Assignments_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Assignments_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Assignments_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  end_date_iso?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_billable?: InputMaybe<Scalars['Boolean']['input']>;
  is_template?: InputMaybe<Scalars['Boolean']['input']>;
  minutes_per_day?: InputMaybe<Scalars['Int']['input']>;
  non_working_day?: InputMaybe<Scalars['Boolean']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  phase_id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
  start_date_iso?: InputMaybe<Scalars['date']['input']>;
  total_minutes?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Assignments_Sum_Fields = {
  __typename?: 'assignments_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  minutes_per_day?: Maybe<Scalars['Int']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  phase_id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  role_id?: Maybe<Scalars['Int']['output']>;
  total_minutes?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "assignments" */
export type Assignments_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minutes_per_day?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  total_minutes?: InputMaybe<Order_By>;
};

/** update columns of table "assignments" */
export enum Assignments_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Active = 'active',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  EndDateIso = 'end_date_iso',
  /** column name */
  Id = 'id',
  /** column name */
  IsBillable = 'is_billable',
  /** column name */
  IsTemplate = 'is_template',
  /** column name */
  MinutesPerDay = 'minutes_per_day',
  /** column name */
  NonWorkingDay = 'non_working_day',
  /** column name */
  Note = 'note',
  /** column name */
  PersonId = 'person_id',
  /** column name */
  PhaseId = 'phase_id',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  RoleId = 'role_id',
  /** column name */
  StartDateIso = 'start_date_iso',
  /** column name */
  TotalMinutes = 'total_minutes',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Assignments_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Assignments_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Assignments_Set_Input>;
  /** filter the rows which have to be updated */
  where: Assignments_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Assignments_Var_Pop_Fields = {
  __typename?: 'assignments_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  minutes_per_day?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  phase_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
  total_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "assignments" */
export type Assignments_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minutes_per_day?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  total_minutes?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Assignments_Var_Samp_Fields = {
  __typename?: 'assignments_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  minutes_per_day?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  phase_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
  total_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "assignments" */
export type Assignments_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minutes_per_day?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  total_minutes?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Assignments_Variance_Fields = {
  __typename?: 'assignments_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  minutes_per_day?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  phase_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
  total_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "assignments" */
export type Assignments_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minutes_per_day?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  phase_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  total_minutes?: InputMaybe<Order_By>;
};

/** History of auditable actions on audited tables, from audit.if_modified_func() */
export type Audit_Logged_Actions = {
  __typename?: 'audit_logged_actions';
  /** An object relationship */
  account?: Maybe<Accounts>;
  account_id: Scalars['Int']['output'];
  /** Action type; I = insert, D = delete, U = update, T = truncate */
  action: Scalars['String']['output'];
  /** Wall clock time at which audited event's trigger call occurred */
  action_tstamp_clk: Scalars['timestamptz']['output'];
  /** Statement start timestamp for tx in which audited event occurred */
  action_tstamp_stm: Scalars['timestamptz']['output'];
  /** Transaction start timestamp for tx in which audited event occurred */
  action_tstamp_tx: Scalars['timestamptz']['output'];
  /** New values of fields changed by UPDATE. Null except for row-level UPDATE events. */
  changed_fields?: Maybe<Scalars['jsonb']['output']>;
  /** Unique identifier for each auditable event */
  event_id: Scalars['bigint']['output'];
  /** Table OID. Changes with drop/create. Get with 'tablename'::regclass */
  relid: Scalars['oid']['output'];
  /** Record value. Null for statement-level trigger. For INSERT this is the new tuple. For DELETE and UPDATE it is the old tuple. */
  row_data?: Maybe<Scalars['jsonb']['output']>;
  /** Database schema audited table for this event is in */
  schema_name: Scalars['String']['output'];
  session_id?: Maybe<Scalars['String']['output']>;
  /** 't' if audit event is from an FOR EACH STATEMENT trigger, 'f' for FOR EACH ROW */
  statement_only: Scalars['Boolean']['output'];
  /** Non-schema-qualified table name of table event occured in */
  table_name: Scalars['String']['output'];
  /** Identifier of transaction that made the change. May wrap, but unique paired with action_tstamp_tx. */
  transaction_id?: Maybe<Scalars['bigint']['output']>;
  /** An object relationship */
  user?: Maybe<Users>;
  user_id?: Maybe<Scalars['Int']['output']>;
};


/** History of auditable actions on audited tables, from audit.if_modified_func() */
export type Audit_Logged_ActionsChanged_FieldsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** History of auditable actions on audited tables, from audit.if_modified_func() */
export type Audit_Logged_ActionsRow_DataArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "audit.logged_actions" */
export type Audit_Logged_Actions_Aggregate = {
  __typename?: 'audit_logged_actions_aggregate';
  aggregate?: Maybe<Audit_Logged_Actions_Aggregate_Fields>;
  nodes: Array<Audit_Logged_Actions>;
};

/** aggregate fields of "audit.logged_actions" */
export type Audit_Logged_Actions_Aggregate_Fields = {
  __typename?: 'audit_logged_actions_aggregate_fields';
  avg?: Maybe<Audit_Logged_Actions_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Audit_Logged_Actions_Max_Fields>;
  min?: Maybe<Audit_Logged_Actions_Min_Fields>;
  stddev?: Maybe<Audit_Logged_Actions_Stddev_Fields>;
  stddev_pop?: Maybe<Audit_Logged_Actions_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Audit_Logged_Actions_Stddev_Samp_Fields>;
  sum?: Maybe<Audit_Logged_Actions_Sum_Fields>;
  var_pop?: Maybe<Audit_Logged_Actions_Var_Pop_Fields>;
  var_samp?: Maybe<Audit_Logged_Actions_Var_Samp_Fields>;
  variance?: Maybe<Audit_Logged_Actions_Variance_Fields>;
};


/** aggregate fields of "audit.logged_actions" */
export type Audit_Logged_Actions_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Audit_Logged_Actions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Audit_Logged_Actions_Append_Input = {
  /** New values of fields changed by UPDATE. Null except for row-level UPDATE events. */
  changed_fields?: InputMaybe<Scalars['jsonb']['input']>;
  /** Record value. Null for statement-level trigger. For INSERT this is the new tuple. For DELETE and UPDATE it is the old tuple. */
  row_data?: InputMaybe<Scalars['jsonb']['input']>;
};

/** aggregate avg on columns */
export type Audit_Logged_Actions_Avg_Fields = {
  __typename?: 'audit_logged_actions_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  /** Unique identifier for each auditable event */
  event_id?: Maybe<Scalars['Float']['output']>;
  /** Identifier of transaction that made the change. May wrap, but unique paired with action_tstamp_tx. */
  transaction_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "audit.logged_actions". All fields are combined with a logical 'AND'. */
export type Audit_Logged_Actions_Bool_Exp = {
  _and?: InputMaybe<Array<Audit_Logged_Actions_Bool_Exp>>;
  _not?: InputMaybe<Audit_Logged_Actions_Bool_Exp>;
  _or?: InputMaybe<Array<Audit_Logged_Actions_Bool_Exp>>;
  account?: InputMaybe<Accounts_Bool_Exp>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  action?: InputMaybe<String_Comparison_Exp>;
  action_tstamp_clk?: InputMaybe<Timestamptz_Comparison_Exp>;
  action_tstamp_stm?: InputMaybe<Timestamptz_Comparison_Exp>;
  action_tstamp_tx?: InputMaybe<Timestamptz_Comparison_Exp>;
  changed_fields?: InputMaybe<Jsonb_Comparison_Exp>;
  event_id?: InputMaybe<Bigint_Comparison_Exp>;
  relid?: InputMaybe<Oid_Comparison_Exp>;
  row_data?: InputMaybe<Jsonb_Comparison_Exp>;
  schema_name?: InputMaybe<String_Comparison_Exp>;
  session_id?: InputMaybe<String_Comparison_Exp>;
  statement_only?: InputMaybe<Boolean_Comparison_Exp>;
  table_name?: InputMaybe<String_Comparison_Exp>;
  transaction_id?: InputMaybe<Bigint_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "audit.logged_actions" */
export enum Audit_Logged_Actions_Constraint {
  /** unique or primary key constraint on columns "event_id" */
  LoggedActionsPkey = 'logged_actions_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Audit_Logged_Actions_Delete_At_Path_Input = {
  /** New values of fields changed by UPDATE. Null except for row-level UPDATE events. */
  changed_fields?: InputMaybe<Array<Scalars['String']['input']>>;
  /** Record value. Null for statement-level trigger. For INSERT this is the new tuple. For DELETE and UPDATE it is the old tuple. */
  row_data?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Audit_Logged_Actions_Delete_Elem_Input = {
  /** New values of fields changed by UPDATE. Null except for row-level UPDATE events. */
  changed_fields?: InputMaybe<Scalars['Int']['input']>;
  /** Record value. Null for statement-level trigger. For INSERT this is the new tuple. For DELETE and UPDATE it is the old tuple. */
  row_data?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Audit_Logged_Actions_Delete_Key_Input = {
  /** New values of fields changed by UPDATE. Null except for row-level UPDATE events. */
  changed_fields?: InputMaybe<Scalars['String']['input']>;
  /** Record value. Null for statement-level trigger. For INSERT this is the new tuple. For DELETE and UPDATE it is the old tuple. */
  row_data?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "audit.logged_actions" */
export type Audit_Logged_Actions_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  /** Unique identifier for each auditable event */
  event_id?: InputMaybe<Scalars['bigint']['input']>;
  /** Identifier of transaction that made the change. May wrap, but unique paired with action_tstamp_tx. */
  transaction_id?: InputMaybe<Scalars['bigint']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "audit.logged_actions" */
export type Audit_Logged_Actions_Insert_Input = {
  account?: InputMaybe<Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['Int']['input']>;
  /** Action type; I = insert, D = delete, U = update, T = truncate */
  action?: InputMaybe<Scalars['String']['input']>;
  /** Wall clock time at which audited event's trigger call occurred */
  action_tstamp_clk?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Statement start timestamp for tx in which audited event occurred */
  action_tstamp_stm?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Transaction start timestamp for tx in which audited event occurred */
  action_tstamp_tx?: InputMaybe<Scalars['timestamptz']['input']>;
  /** New values of fields changed by UPDATE. Null except for row-level UPDATE events. */
  changed_fields?: InputMaybe<Scalars['jsonb']['input']>;
  /** Unique identifier for each auditable event */
  event_id?: InputMaybe<Scalars['bigint']['input']>;
  /** Table OID. Changes with drop/create. Get with 'tablename'::regclass */
  relid?: InputMaybe<Scalars['oid']['input']>;
  /** Record value. Null for statement-level trigger. For INSERT this is the new tuple. For DELETE and UPDATE it is the old tuple. */
  row_data?: InputMaybe<Scalars['jsonb']['input']>;
  /** Database schema audited table for this event is in */
  schema_name?: InputMaybe<Scalars['String']['input']>;
  session_id?: InputMaybe<Scalars['String']['input']>;
  /** 't' if audit event is from an FOR EACH STATEMENT trigger, 'f' for FOR EACH ROW */
  statement_only?: InputMaybe<Scalars['Boolean']['input']>;
  /** Non-schema-qualified table name of table event occured in */
  table_name?: InputMaybe<Scalars['String']['input']>;
  /** Identifier of transaction that made the change. May wrap, but unique paired with action_tstamp_tx. */
  transaction_id?: InputMaybe<Scalars['bigint']['input']>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Audit_Logged_Actions_Max_Fields = {
  __typename?: 'audit_logged_actions_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  /** Action type; I = insert, D = delete, U = update, T = truncate */
  action?: Maybe<Scalars['String']['output']>;
  /** Wall clock time at which audited event's trigger call occurred */
  action_tstamp_clk?: Maybe<Scalars['timestamptz']['output']>;
  /** Statement start timestamp for tx in which audited event occurred */
  action_tstamp_stm?: Maybe<Scalars['timestamptz']['output']>;
  /** Transaction start timestamp for tx in which audited event occurred */
  action_tstamp_tx?: Maybe<Scalars['timestamptz']['output']>;
  /** Unique identifier for each auditable event */
  event_id?: Maybe<Scalars['bigint']['output']>;
  /** Database schema audited table for this event is in */
  schema_name?: Maybe<Scalars['String']['output']>;
  session_id?: Maybe<Scalars['String']['output']>;
  /** Non-schema-qualified table name of table event occured in */
  table_name?: Maybe<Scalars['String']['output']>;
  /** Identifier of transaction that made the change. May wrap, but unique paired with action_tstamp_tx. */
  transaction_id?: Maybe<Scalars['bigint']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Audit_Logged_Actions_Min_Fields = {
  __typename?: 'audit_logged_actions_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  /** Action type; I = insert, D = delete, U = update, T = truncate */
  action?: Maybe<Scalars['String']['output']>;
  /** Wall clock time at which audited event's trigger call occurred */
  action_tstamp_clk?: Maybe<Scalars['timestamptz']['output']>;
  /** Statement start timestamp for tx in which audited event occurred */
  action_tstamp_stm?: Maybe<Scalars['timestamptz']['output']>;
  /** Transaction start timestamp for tx in which audited event occurred */
  action_tstamp_tx?: Maybe<Scalars['timestamptz']['output']>;
  /** Unique identifier for each auditable event */
  event_id?: Maybe<Scalars['bigint']['output']>;
  /** Database schema audited table for this event is in */
  schema_name?: Maybe<Scalars['String']['output']>;
  session_id?: Maybe<Scalars['String']['output']>;
  /** Non-schema-qualified table name of table event occured in */
  table_name?: Maybe<Scalars['String']['output']>;
  /** Identifier of transaction that made the change. May wrap, but unique paired with action_tstamp_tx. */
  transaction_id?: Maybe<Scalars['bigint']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "audit.logged_actions" */
export type Audit_Logged_Actions_Mutation_Response = {
  __typename?: 'audit_logged_actions_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Audit_Logged_Actions>;
};

/** on_conflict condition type for table "audit.logged_actions" */
export type Audit_Logged_Actions_On_Conflict = {
  constraint: Audit_Logged_Actions_Constraint;
  update_columns?: Array<Audit_Logged_Actions_Update_Column>;
  where?: InputMaybe<Audit_Logged_Actions_Bool_Exp>;
};

/** Ordering options when selecting data from "audit.logged_actions". */
export type Audit_Logged_Actions_Order_By = {
  account?: InputMaybe<Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  action?: InputMaybe<Order_By>;
  action_tstamp_clk?: InputMaybe<Order_By>;
  action_tstamp_stm?: InputMaybe<Order_By>;
  action_tstamp_tx?: InputMaybe<Order_By>;
  changed_fields?: InputMaybe<Order_By>;
  event_id?: InputMaybe<Order_By>;
  relid?: InputMaybe<Order_By>;
  row_data?: InputMaybe<Order_By>;
  schema_name?: InputMaybe<Order_By>;
  session_id?: InputMaybe<Order_By>;
  statement_only?: InputMaybe<Order_By>;
  table_name?: InputMaybe<Order_By>;
  transaction_id?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: audit.logged_actions */
export type Audit_Logged_Actions_Pk_Columns_Input = {
  /** Unique identifier for each auditable event */
  event_id: Scalars['bigint']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Audit_Logged_Actions_Prepend_Input = {
  /** New values of fields changed by UPDATE. Null except for row-level UPDATE events. */
  changed_fields?: InputMaybe<Scalars['jsonb']['input']>;
  /** Record value. Null for statement-level trigger. For INSERT this is the new tuple. For DELETE and UPDATE it is the old tuple. */
  row_data?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "audit.logged_actions" */
export enum Audit_Logged_Actions_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Action = 'action',
  /** column name */
  ActionTstampClk = 'action_tstamp_clk',
  /** column name */
  ActionTstampStm = 'action_tstamp_stm',
  /** column name */
  ActionTstampTx = 'action_tstamp_tx',
  /** column name */
  ChangedFields = 'changed_fields',
  /** column name */
  EventId = 'event_id',
  /** column name */
  Relid = 'relid',
  /** column name */
  RowData = 'row_data',
  /** column name */
  SchemaName = 'schema_name',
  /** column name */
  SessionId = 'session_id',
  /** column name */
  StatementOnly = 'statement_only',
  /** column name */
  TableName = 'table_name',
  /** column name */
  TransactionId = 'transaction_id',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "audit.logged_actions" */
export type Audit_Logged_Actions_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  /** Action type; I = insert, D = delete, U = update, T = truncate */
  action?: InputMaybe<Scalars['String']['input']>;
  /** Wall clock time at which audited event's trigger call occurred */
  action_tstamp_clk?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Statement start timestamp for tx in which audited event occurred */
  action_tstamp_stm?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Transaction start timestamp for tx in which audited event occurred */
  action_tstamp_tx?: InputMaybe<Scalars['timestamptz']['input']>;
  /** New values of fields changed by UPDATE. Null except for row-level UPDATE events. */
  changed_fields?: InputMaybe<Scalars['jsonb']['input']>;
  /** Unique identifier for each auditable event */
  event_id?: InputMaybe<Scalars['bigint']['input']>;
  /** Table OID. Changes with drop/create. Get with 'tablename'::regclass */
  relid?: InputMaybe<Scalars['oid']['input']>;
  /** Record value. Null for statement-level trigger. For INSERT this is the new tuple. For DELETE and UPDATE it is the old tuple. */
  row_data?: InputMaybe<Scalars['jsonb']['input']>;
  /** Database schema audited table for this event is in */
  schema_name?: InputMaybe<Scalars['String']['input']>;
  session_id?: InputMaybe<Scalars['String']['input']>;
  /** 't' if audit event is from an FOR EACH STATEMENT trigger, 'f' for FOR EACH ROW */
  statement_only?: InputMaybe<Scalars['Boolean']['input']>;
  /** Non-schema-qualified table name of table event occured in */
  table_name?: InputMaybe<Scalars['String']['input']>;
  /** Identifier of transaction that made the change. May wrap, but unique paired with action_tstamp_tx. */
  transaction_id?: InputMaybe<Scalars['bigint']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Audit_Logged_Actions_Stddev_Fields = {
  __typename?: 'audit_logged_actions_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  /** Unique identifier for each auditable event */
  event_id?: Maybe<Scalars['Float']['output']>;
  /** Identifier of transaction that made the change. May wrap, but unique paired with action_tstamp_tx. */
  transaction_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Audit_Logged_Actions_Stddev_Pop_Fields = {
  __typename?: 'audit_logged_actions_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  /** Unique identifier for each auditable event */
  event_id?: Maybe<Scalars['Float']['output']>;
  /** Identifier of transaction that made the change. May wrap, but unique paired with action_tstamp_tx. */
  transaction_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Audit_Logged_Actions_Stddev_Samp_Fields = {
  __typename?: 'audit_logged_actions_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  /** Unique identifier for each auditable event */
  event_id?: Maybe<Scalars['Float']['output']>;
  /** Identifier of transaction that made the change. May wrap, but unique paired with action_tstamp_tx. */
  transaction_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "audit_logged_actions" */
export type Audit_Logged_Actions_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Audit_Logged_Actions_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Audit_Logged_Actions_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  /** Action type; I = insert, D = delete, U = update, T = truncate */
  action?: InputMaybe<Scalars['String']['input']>;
  /** Wall clock time at which audited event's trigger call occurred */
  action_tstamp_clk?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Statement start timestamp for tx in which audited event occurred */
  action_tstamp_stm?: InputMaybe<Scalars['timestamptz']['input']>;
  /** Transaction start timestamp for tx in which audited event occurred */
  action_tstamp_tx?: InputMaybe<Scalars['timestamptz']['input']>;
  /** New values of fields changed by UPDATE. Null except for row-level UPDATE events. */
  changed_fields?: InputMaybe<Scalars['jsonb']['input']>;
  /** Unique identifier for each auditable event */
  event_id?: InputMaybe<Scalars['bigint']['input']>;
  /** Table OID. Changes with drop/create. Get with 'tablename'::regclass */
  relid?: InputMaybe<Scalars['oid']['input']>;
  /** Record value. Null for statement-level trigger. For INSERT this is the new tuple. For DELETE and UPDATE it is the old tuple. */
  row_data?: InputMaybe<Scalars['jsonb']['input']>;
  /** Database schema audited table for this event is in */
  schema_name?: InputMaybe<Scalars['String']['input']>;
  session_id?: InputMaybe<Scalars['String']['input']>;
  /** 't' if audit event is from an FOR EACH STATEMENT trigger, 'f' for FOR EACH ROW */
  statement_only?: InputMaybe<Scalars['Boolean']['input']>;
  /** Non-schema-qualified table name of table event occured in */
  table_name?: InputMaybe<Scalars['String']['input']>;
  /** Identifier of transaction that made the change. May wrap, but unique paired with action_tstamp_tx. */
  transaction_id?: InputMaybe<Scalars['bigint']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Audit_Logged_Actions_Sum_Fields = {
  __typename?: 'audit_logged_actions_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  /** Unique identifier for each auditable event */
  event_id?: Maybe<Scalars['bigint']['output']>;
  /** Identifier of transaction that made the change. May wrap, but unique paired with action_tstamp_tx. */
  transaction_id?: Maybe<Scalars['bigint']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "audit.logged_actions" */
export enum Audit_Logged_Actions_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Action = 'action',
  /** column name */
  ActionTstampClk = 'action_tstamp_clk',
  /** column name */
  ActionTstampStm = 'action_tstamp_stm',
  /** column name */
  ActionTstampTx = 'action_tstamp_tx',
  /** column name */
  ChangedFields = 'changed_fields',
  /** column name */
  EventId = 'event_id',
  /** column name */
  Relid = 'relid',
  /** column name */
  RowData = 'row_data',
  /** column name */
  SchemaName = 'schema_name',
  /** column name */
  SessionId = 'session_id',
  /** column name */
  StatementOnly = 'statement_only',
  /** column name */
  TableName = 'table_name',
  /** column name */
  TransactionId = 'transaction_id',
  /** column name */
  UserId = 'user_id'
}

export type Audit_Logged_Actions_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Audit_Logged_Actions_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Audit_Logged_Actions_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Audit_Logged_Actions_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Audit_Logged_Actions_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Audit_Logged_Actions_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Audit_Logged_Actions_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Audit_Logged_Actions_Set_Input>;
  /** filter the rows which have to be updated */
  where: Audit_Logged_Actions_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Audit_Logged_Actions_Var_Pop_Fields = {
  __typename?: 'audit_logged_actions_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  /** Unique identifier for each auditable event */
  event_id?: Maybe<Scalars['Float']['output']>;
  /** Identifier of transaction that made the change. May wrap, but unique paired with action_tstamp_tx. */
  transaction_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Audit_Logged_Actions_Var_Samp_Fields = {
  __typename?: 'audit_logged_actions_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  /** Unique identifier for each auditable event */
  event_id?: Maybe<Scalars['Float']['output']>;
  /** Identifier of transaction that made the change. May wrap, but unique paired with action_tstamp_tx. */
  transaction_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Audit_Logged_Actions_Variance_Fields = {
  __typename?: 'audit_logged_actions_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  /** Unique identifier for each auditable event */
  event_id?: Maybe<Scalars['Float']['output']>;
  /** Identifier of transaction that made the change. May wrap, but unique paired with action_tstamp_tx. */
  transaction_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** View of all logged actions from the last 5 seconds */
export type Audit_Recently_Logged_Actions = {
  __typename?: 'audit_recently_logged_actions';
  /** An object relationship */
  account?: Maybe<Accounts>;
  account_id?: Maybe<Scalars['Int']['output']>;
  action?: Maybe<Scalars['String']['output']>;
  action_tstamp_clk?: Maybe<Scalars['timestamptz']['output']>;
  action_tstamp_stm?: Maybe<Scalars['timestamptz']['output']>;
  action_tstamp_tx?: Maybe<Scalars['timestamptz']['output']>;
  changed_fields?: Maybe<Scalars['jsonb']['output']>;
  event_id?: Maybe<Scalars['bigint']['output']>;
  relid?: Maybe<Scalars['oid']['output']>;
  row_data?: Maybe<Scalars['jsonb']['output']>;
  schema_name?: Maybe<Scalars['String']['output']>;
  session_id?: Maybe<Scalars['String']['output']>;
  statement_only?: Maybe<Scalars['Boolean']['output']>;
  table_name?: Maybe<Scalars['String']['output']>;
  transaction_id?: Maybe<Scalars['bigint']['output']>;
  /** An object relationship */
  user?: Maybe<Users>;
  user_id?: Maybe<Scalars['Int']['output']>;
};


/** View of all logged actions from the last 5 seconds */
export type Audit_Recently_Logged_ActionsChanged_FieldsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** View of all logged actions from the last 5 seconds */
export type Audit_Recently_Logged_ActionsRow_DataArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "audit.recently_logged_actions" */
export type Audit_Recently_Logged_Actions_Aggregate = {
  __typename?: 'audit_recently_logged_actions_aggregate';
  aggregate?: Maybe<Audit_Recently_Logged_Actions_Aggregate_Fields>;
  nodes: Array<Audit_Recently_Logged_Actions>;
};

/** aggregate fields of "audit.recently_logged_actions" */
export type Audit_Recently_Logged_Actions_Aggregate_Fields = {
  __typename?: 'audit_recently_logged_actions_aggregate_fields';
  avg?: Maybe<Audit_Recently_Logged_Actions_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Audit_Recently_Logged_Actions_Max_Fields>;
  min?: Maybe<Audit_Recently_Logged_Actions_Min_Fields>;
  stddev?: Maybe<Audit_Recently_Logged_Actions_Stddev_Fields>;
  stddev_pop?: Maybe<Audit_Recently_Logged_Actions_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Audit_Recently_Logged_Actions_Stddev_Samp_Fields>;
  sum?: Maybe<Audit_Recently_Logged_Actions_Sum_Fields>;
  var_pop?: Maybe<Audit_Recently_Logged_Actions_Var_Pop_Fields>;
  var_samp?: Maybe<Audit_Recently_Logged_Actions_Var_Samp_Fields>;
  variance?: Maybe<Audit_Recently_Logged_Actions_Variance_Fields>;
};


/** aggregate fields of "audit.recently_logged_actions" */
export type Audit_Recently_Logged_Actions_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Audit_Recently_Logged_Actions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Audit_Recently_Logged_Actions_Append_Input = {
  changed_fields?: InputMaybe<Scalars['jsonb']['input']>;
  row_data?: InputMaybe<Scalars['jsonb']['input']>;
};

/** aggregate avg on columns */
export type Audit_Recently_Logged_Actions_Avg_Fields = {
  __typename?: 'audit_recently_logged_actions_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  event_id?: Maybe<Scalars['Float']['output']>;
  transaction_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "audit.recently_logged_actions". All fields are combined with a logical 'AND'. */
export type Audit_Recently_Logged_Actions_Bool_Exp = {
  _and?: InputMaybe<Array<Audit_Recently_Logged_Actions_Bool_Exp>>;
  _not?: InputMaybe<Audit_Recently_Logged_Actions_Bool_Exp>;
  _or?: InputMaybe<Array<Audit_Recently_Logged_Actions_Bool_Exp>>;
  account?: InputMaybe<Accounts_Bool_Exp>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  action?: InputMaybe<String_Comparison_Exp>;
  action_tstamp_clk?: InputMaybe<Timestamptz_Comparison_Exp>;
  action_tstamp_stm?: InputMaybe<Timestamptz_Comparison_Exp>;
  action_tstamp_tx?: InputMaybe<Timestamptz_Comparison_Exp>;
  changed_fields?: InputMaybe<Jsonb_Comparison_Exp>;
  event_id?: InputMaybe<Bigint_Comparison_Exp>;
  relid?: InputMaybe<Oid_Comparison_Exp>;
  row_data?: InputMaybe<Jsonb_Comparison_Exp>;
  schema_name?: InputMaybe<String_Comparison_Exp>;
  session_id?: InputMaybe<String_Comparison_Exp>;
  statement_only?: InputMaybe<Boolean_Comparison_Exp>;
  table_name?: InputMaybe<String_Comparison_Exp>;
  transaction_id?: InputMaybe<Bigint_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Int_Comparison_Exp>;
};

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Audit_Recently_Logged_Actions_Delete_At_Path_Input = {
  changed_fields?: InputMaybe<Array<Scalars['String']['input']>>;
  row_data?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Audit_Recently_Logged_Actions_Delete_Elem_Input = {
  changed_fields?: InputMaybe<Scalars['Int']['input']>;
  row_data?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Audit_Recently_Logged_Actions_Delete_Key_Input = {
  changed_fields?: InputMaybe<Scalars['String']['input']>;
  row_data?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "audit.recently_logged_actions" */
export type Audit_Recently_Logged_Actions_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  event_id?: InputMaybe<Scalars['bigint']['input']>;
  transaction_id?: InputMaybe<Scalars['bigint']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "audit.recently_logged_actions" */
export type Audit_Recently_Logged_Actions_Insert_Input = {
  account?: InputMaybe<Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['Int']['input']>;
  action?: InputMaybe<Scalars['String']['input']>;
  action_tstamp_clk?: InputMaybe<Scalars['timestamptz']['input']>;
  action_tstamp_stm?: InputMaybe<Scalars['timestamptz']['input']>;
  action_tstamp_tx?: InputMaybe<Scalars['timestamptz']['input']>;
  changed_fields?: InputMaybe<Scalars['jsonb']['input']>;
  event_id?: InputMaybe<Scalars['bigint']['input']>;
  relid?: InputMaybe<Scalars['oid']['input']>;
  row_data?: InputMaybe<Scalars['jsonb']['input']>;
  schema_name?: InputMaybe<Scalars['String']['input']>;
  session_id?: InputMaybe<Scalars['String']['input']>;
  statement_only?: InputMaybe<Scalars['Boolean']['input']>;
  table_name?: InputMaybe<Scalars['String']['input']>;
  transaction_id?: InputMaybe<Scalars['bigint']['input']>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Audit_Recently_Logged_Actions_Max_Fields = {
  __typename?: 'audit_recently_logged_actions_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  action?: Maybe<Scalars['String']['output']>;
  action_tstamp_clk?: Maybe<Scalars['timestamptz']['output']>;
  action_tstamp_stm?: Maybe<Scalars['timestamptz']['output']>;
  action_tstamp_tx?: Maybe<Scalars['timestamptz']['output']>;
  event_id?: Maybe<Scalars['bigint']['output']>;
  schema_name?: Maybe<Scalars['String']['output']>;
  session_id?: Maybe<Scalars['String']['output']>;
  table_name?: Maybe<Scalars['String']['output']>;
  transaction_id?: Maybe<Scalars['bigint']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type Audit_Recently_Logged_Actions_Min_Fields = {
  __typename?: 'audit_recently_logged_actions_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  action?: Maybe<Scalars['String']['output']>;
  action_tstamp_clk?: Maybe<Scalars['timestamptz']['output']>;
  action_tstamp_stm?: Maybe<Scalars['timestamptz']['output']>;
  action_tstamp_tx?: Maybe<Scalars['timestamptz']['output']>;
  event_id?: Maybe<Scalars['bigint']['output']>;
  schema_name?: Maybe<Scalars['String']['output']>;
  session_id?: Maybe<Scalars['String']['output']>;
  table_name?: Maybe<Scalars['String']['output']>;
  transaction_id?: Maybe<Scalars['bigint']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "audit.recently_logged_actions" */
export type Audit_Recently_Logged_Actions_Mutation_Response = {
  __typename?: 'audit_recently_logged_actions_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Audit_Recently_Logged_Actions>;
};

/** Ordering options when selecting data from "audit.recently_logged_actions". */
export type Audit_Recently_Logged_Actions_Order_By = {
  account?: InputMaybe<Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  action?: InputMaybe<Order_By>;
  action_tstamp_clk?: InputMaybe<Order_By>;
  action_tstamp_stm?: InputMaybe<Order_By>;
  action_tstamp_tx?: InputMaybe<Order_By>;
  changed_fields?: InputMaybe<Order_By>;
  event_id?: InputMaybe<Order_By>;
  relid?: InputMaybe<Order_By>;
  row_data?: InputMaybe<Order_By>;
  schema_name?: InputMaybe<Order_By>;
  session_id?: InputMaybe<Order_By>;
  statement_only?: InputMaybe<Order_By>;
  table_name?: InputMaybe<Order_By>;
  transaction_id?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Audit_Recently_Logged_Actions_Prepend_Input = {
  changed_fields?: InputMaybe<Scalars['jsonb']['input']>;
  row_data?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "audit.recently_logged_actions" */
export enum Audit_Recently_Logged_Actions_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Action = 'action',
  /** column name */
  ActionTstampClk = 'action_tstamp_clk',
  /** column name */
  ActionTstampStm = 'action_tstamp_stm',
  /** column name */
  ActionTstampTx = 'action_tstamp_tx',
  /** column name */
  ChangedFields = 'changed_fields',
  /** column name */
  EventId = 'event_id',
  /** column name */
  Relid = 'relid',
  /** column name */
  RowData = 'row_data',
  /** column name */
  SchemaName = 'schema_name',
  /** column name */
  SessionId = 'session_id',
  /** column name */
  StatementOnly = 'statement_only',
  /** column name */
  TableName = 'table_name',
  /** column name */
  TransactionId = 'transaction_id',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "audit.recently_logged_actions" */
export type Audit_Recently_Logged_Actions_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  action?: InputMaybe<Scalars['String']['input']>;
  action_tstamp_clk?: InputMaybe<Scalars['timestamptz']['input']>;
  action_tstamp_stm?: InputMaybe<Scalars['timestamptz']['input']>;
  action_tstamp_tx?: InputMaybe<Scalars['timestamptz']['input']>;
  changed_fields?: InputMaybe<Scalars['jsonb']['input']>;
  event_id?: InputMaybe<Scalars['bigint']['input']>;
  relid?: InputMaybe<Scalars['oid']['input']>;
  row_data?: InputMaybe<Scalars['jsonb']['input']>;
  schema_name?: InputMaybe<Scalars['String']['input']>;
  session_id?: InputMaybe<Scalars['String']['input']>;
  statement_only?: InputMaybe<Scalars['Boolean']['input']>;
  table_name?: InputMaybe<Scalars['String']['input']>;
  transaction_id?: InputMaybe<Scalars['bigint']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Audit_Recently_Logged_Actions_Stddev_Fields = {
  __typename?: 'audit_recently_logged_actions_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  event_id?: Maybe<Scalars['Float']['output']>;
  transaction_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Audit_Recently_Logged_Actions_Stddev_Pop_Fields = {
  __typename?: 'audit_recently_logged_actions_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  event_id?: Maybe<Scalars['Float']['output']>;
  transaction_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Audit_Recently_Logged_Actions_Stddev_Samp_Fields = {
  __typename?: 'audit_recently_logged_actions_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  event_id?: Maybe<Scalars['Float']['output']>;
  transaction_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "audit_recently_logged_actions" */
export type Audit_Recently_Logged_Actions_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Audit_Recently_Logged_Actions_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Audit_Recently_Logged_Actions_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  action?: InputMaybe<Scalars['String']['input']>;
  action_tstamp_clk?: InputMaybe<Scalars['timestamptz']['input']>;
  action_tstamp_stm?: InputMaybe<Scalars['timestamptz']['input']>;
  action_tstamp_tx?: InputMaybe<Scalars['timestamptz']['input']>;
  changed_fields?: InputMaybe<Scalars['jsonb']['input']>;
  event_id?: InputMaybe<Scalars['bigint']['input']>;
  relid?: InputMaybe<Scalars['oid']['input']>;
  row_data?: InputMaybe<Scalars['jsonb']['input']>;
  schema_name?: InputMaybe<Scalars['String']['input']>;
  session_id?: InputMaybe<Scalars['String']['input']>;
  statement_only?: InputMaybe<Scalars['Boolean']['input']>;
  table_name?: InputMaybe<Scalars['String']['input']>;
  transaction_id?: InputMaybe<Scalars['bigint']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Audit_Recently_Logged_Actions_Sum_Fields = {
  __typename?: 'audit_recently_logged_actions_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  event_id?: Maybe<Scalars['bigint']['output']>;
  transaction_id?: Maybe<Scalars['bigint']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

export type Audit_Recently_Logged_Actions_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Audit_Recently_Logged_Actions_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Audit_Recently_Logged_Actions_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Audit_Recently_Logged_Actions_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Audit_Recently_Logged_Actions_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Audit_Recently_Logged_Actions_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Audit_Recently_Logged_Actions_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Audit_Recently_Logged_Actions_Set_Input>;
  /** filter the rows which have to be updated */
  where: Audit_Recently_Logged_Actions_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Audit_Recently_Logged_Actions_Var_Pop_Fields = {
  __typename?: 'audit_recently_logged_actions_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  event_id?: Maybe<Scalars['Float']['output']>;
  transaction_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Audit_Recently_Logged_Actions_Var_Samp_Fields = {
  __typename?: 'audit_recently_logged_actions_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  event_id?: Maybe<Scalars['Float']['output']>;
  transaction_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Audit_Recently_Logged_Actions_Variance_Fields = {
  __typename?: 'audit_recently_logged_actions_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  event_id?: Maybe<Scalars['Float']['output']>;
  transaction_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'. */
export type Bigint_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['bigint']['input']>;
  _gt?: InputMaybe<Scalars['bigint']['input']>;
  _gte?: InputMaybe<Scalars['bigint']['input']>;
  _in?: InputMaybe<Array<Scalars['bigint']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['bigint']['input']>;
  _lte?: InputMaybe<Scalars['bigint']['input']>;
  _neq?: InputMaybe<Scalars['bigint']['input']>;
  _nin?: InputMaybe<Array<Scalars['bigint']['input']>>;
};

/** columns and relationships of "cancel_reasons" */
export type Cancel_Reasons = {
  __typename?: 'cancel_reasons';
  /** An object relationship */
  account?: Maybe<Accounts>;
  account_id?: Maybe<Scalars['Int']['output']>;
  account_name?: Maybe<Scalars['String']['output']>;
  created_at: Scalars['timestamp']['output'];
  explanation?: Maybe<Scalars['String']['output']>;
  id: Scalars['Int']['output'];
  paid_subscription?: Maybe<Scalars['Boolean']['output']>;
  reason?: Maybe<Scalars['String']['output']>;
  subscription_id?: Maybe<Scalars['String']['output']>;
  updated_at: Scalars['timestamp']['output'];
};

/** aggregated selection of "cancel_reasons" */
export type Cancel_Reasons_Aggregate = {
  __typename?: 'cancel_reasons_aggregate';
  aggregate?: Maybe<Cancel_Reasons_Aggregate_Fields>;
  nodes: Array<Cancel_Reasons>;
};

export type Cancel_Reasons_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Cancel_Reasons_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Cancel_Reasons_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Cancel_Reasons_Aggregate_Bool_Exp_Count>;
};

export type Cancel_Reasons_Aggregate_Bool_Exp_Bool_And = {
  arguments: Cancel_Reasons_Select_Column_Cancel_Reasons_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Cancel_Reasons_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Cancel_Reasons_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Cancel_Reasons_Select_Column_Cancel_Reasons_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Cancel_Reasons_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Cancel_Reasons_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Cancel_Reasons_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Cancel_Reasons_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "cancel_reasons" */
export type Cancel_Reasons_Aggregate_Fields = {
  __typename?: 'cancel_reasons_aggregate_fields';
  avg?: Maybe<Cancel_Reasons_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Cancel_Reasons_Max_Fields>;
  min?: Maybe<Cancel_Reasons_Min_Fields>;
  stddev?: Maybe<Cancel_Reasons_Stddev_Fields>;
  stddev_pop?: Maybe<Cancel_Reasons_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Cancel_Reasons_Stddev_Samp_Fields>;
  sum?: Maybe<Cancel_Reasons_Sum_Fields>;
  var_pop?: Maybe<Cancel_Reasons_Var_Pop_Fields>;
  var_samp?: Maybe<Cancel_Reasons_Var_Samp_Fields>;
  variance?: Maybe<Cancel_Reasons_Variance_Fields>;
};


/** aggregate fields of "cancel_reasons" */
export type Cancel_Reasons_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Cancel_Reasons_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "cancel_reasons" */
export type Cancel_Reasons_Aggregate_Order_By = {
  avg?: InputMaybe<Cancel_Reasons_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Cancel_Reasons_Max_Order_By>;
  min?: InputMaybe<Cancel_Reasons_Min_Order_By>;
  stddev?: InputMaybe<Cancel_Reasons_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Cancel_Reasons_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Cancel_Reasons_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Cancel_Reasons_Sum_Order_By>;
  var_pop?: InputMaybe<Cancel_Reasons_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Cancel_Reasons_Var_Samp_Order_By>;
  variance?: InputMaybe<Cancel_Reasons_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "cancel_reasons" */
export type Cancel_Reasons_Arr_Rel_Insert_Input = {
  data: Array<Cancel_Reasons_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Cancel_Reasons_On_Conflict>;
};

/** aggregate avg on columns */
export type Cancel_Reasons_Avg_Fields = {
  __typename?: 'cancel_reasons_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "cancel_reasons" */
export type Cancel_Reasons_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "cancel_reasons". All fields are combined with a logical 'AND'. */
export type Cancel_Reasons_Bool_Exp = {
  _and?: InputMaybe<Array<Cancel_Reasons_Bool_Exp>>;
  _not?: InputMaybe<Cancel_Reasons_Bool_Exp>;
  _or?: InputMaybe<Array<Cancel_Reasons_Bool_Exp>>;
  account?: InputMaybe<Accounts_Bool_Exp>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  account_name?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  explanation?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  paid_subscription?: InputMaybe<Boolean_Comparison_Exp>;
  reason?: InputMaybe<String_Comparison_Exp>;
  subscription_id?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "cancel_reasons" */
export enum Cancel_Reasons_Constraint {
  /** unique or primary key constraint on columns "id" */
  CancelReasonsPkey = 'cancel_reasons_pkey',
  /** unique or primary key constraint on columns "account_id", "id" */
  IndexUniqueCancelReasonsIdAccountId = 'index_unique_cancel_reasons_id_account_id'
}

/** input type for incrementing numeric columns in table "cancel_reasons" */
export type Cancel_Reasons_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "cancel_reasons" */
export type Cancel_Reasons_Insert_Input = {
  account?: InputMaybe<Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['Int']['input']>;
  account_name?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  explanation?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  paid_subscription?: InputMaybe<Scalars['Boolean']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  subscription_id?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Cancel_Reasons_Max_Fields = {
  __typename?: 'cancel_reasons_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  account_name?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  explanation?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  reason?: Maybe<Scalars['String']['output']>;
  subscription_id?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "cancel_reasons" */
export type Cancel_Reasons_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  account_name?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  explanation?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  reason?: InputMaybe<Order_By>;
  subscription_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Cancel_Reasons_Min_Fields = {
  __typename?: 'cancel_reasons_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  account_name?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  explanation?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  reason?: Maybe<Scalars['String']['output']>;
  subscription_id?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "cancel_reasons" */
export type Cancel_Reasons_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  account_name?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  explanation?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  reason?: InputMaybe<Order_By>;
  subscription_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "cancel_reasons" */
export type Cancel_Reasons_Mutation_Response = {
  __typename?: 'cancel_reasons_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Cancel_Reasons>;
};

/** on_conflict condition type for table "cancel_reasons" */
export type Cancel_Reasons_On_Conflict = {
  constraint: Cancel_Reasons_Constraint;
  update_columns?: Array<Cancel_Reasons_Update_Column>;
  where?: InputMaybe<Cancel_Reasons_Bool_Exp>;
};

/** Ordering options when selecting data from "cancel_reasons". */
export type Cancel_Reasons_Order_By = {
  account?: InputMaybe<Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  account_name?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  explanation?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  paid_subscription?: InputMaybe<Order_By>;
  reason?: InputMaybe<Order_By>;
  subscription_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: cancel_reasons */
export type Cancel_Reasons_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "cancel_reasons" */
export enum Cancel_Reasons_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  AccountName = 'account_name',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Explanation = 'explanation',
  /** column name */
  Id = 'id',
  /** column name */
  PaidSubscription = 'paid_subscription',
  /** column name */
  Reason = 'reason',
  /** column name */
  SubscriptionId = 'subscription_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** select "cancel_reasons_aggregate_bool_exp_bool_and_arguments_columns" columns of table "cancel_reasons" */
export enum Cancel_Reasons_Select_Column_Cancel_Reasons_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  PaidSubscription = 'paid_subscription'
}

/** select "cancel_reasons_aggregate_bool_exp_bool_or_arguments_columns" columns of table "cancel_reasons" */
export enum Cancel_Reasons_Select_Column_Cancel_Reasons_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  PaidSubscription = 'paid_subscription'
}

/** input type for updating data in table "cancel_reasons" */
export type Cancel_Reasons_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  account_name?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  explanation?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  paid_subscription?: InputMaybe<Scalars['Boolean']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  subscription_id?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Cancel_Reasons_Stddev_Fields = {
  __typename?: 'cancel_reasons_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "cancel_reasons" */
export type Cancel_Reasons_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Cancel_Reasons_Stddev_Pop_Fields = {
  __typename?: 'cancel_reasons_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "cancel_reasons" */
export type Cancel_Reasons_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Cancel_Reasons_Stddev_Samp_Fields = {
  __typename?: 'cancel_reasons_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "cancel_reasons" */
export type Cancel_Reasons_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "cancel_reasons" */
export type Cancel_Reasons_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Cancel_Reasons_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Cancel_Reasons_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  account_name?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  explanation?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  paid_subscription?: InputMaybe<Scalars['Boolean']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  subscription_id?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Cancel_Reasons_Sum_Fields = {
  __typename?: 'cancel_reasons_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "cancel_reasons" */
export type Cancel_Reasons_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "cancel_reasons" */
export enum Cancel_Reasons_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  AccountName = 'account_name',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Explanation = 'explanation',
  /** column name */
  Id = 'id',
  /** column name */
  PaidSubscription = 'paid_subscription',
  /** column name */
  Reason = 'reason',
  /** column name */
  SubscriptionId = 'subscription_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Cancel_Reasons_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Cancel_Reasons_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Cancel_Reasons_Set_Input>;
  /** filter the rows which have to be updated */
  where: Cancel_Reasons_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Cancel_Reasons_Var_Pop_Fields = {
  __typename?: 'cancel_reasons_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "cancel_reasons" */
export type Cancel_Reasons_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Cancel_Reasons_Var_Samp_Fields = {
  __typename?: 'cancel_reasons_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "cancel_reasons" */
export type Cancel_Reasons_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Cancel_Reasons_Variance_Fields = {
  __typename?: 'cancel_reasons_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "cancel_reasons" */
export type Cancel_Reasons_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "clients" */
export type Clients = {
  __typename?: 'clients';
  /** An object relationship */
  account: Accounts;
  account_id: Scalars['Int']['output'];
  active: Scalars['Boolean']['output'];
  archivable?: Maybe<Scalars['Boolean']['output']>;
  created_at: Scalars['timestamp']['output'];
  deletable?: Maybe<Scalars['Boolean']['output']>;
  id: Scalars['Int']['output'];
  image_key?: Maybe<Scalars['String']['output']>;
  internal?: Maybe<Scalars['Boolean']['output']>;
  name: Scalars['String']['output'];
  /** An array relationship */
  projects: Array<Projects>;
  /** An aggregate relationship */
  projects_aggregate: Projects_Aggregate;
  real_client?: Maybe<Scalars['Boolean']['output']>;
  references: Scalars['jsonb']['output'];
  updated_at: Scalars['timestamp']['output'];
  website?: Maybe<Scalars['String']['output']>;
};


/** columns and relationships of "clients" */
export type ClientsProjectsArgs = {
  distinct_on?: InputMaybe<Array<Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Projects_Order_By>>;
  where?: InputMaybe<Projects_Bool_Exp>;
};


/** columns and relationships of "clients" */
export type ClientsProjects_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Projects_Order_By>>;
  where?: InputMaybe<Projects_Bool_Exp>;
};


/** columns and relationships of "clients" */
export type ClientsReferencesArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "clients" */
export type Clients_Aggregate = {
  __typename?: 'clients_aggregate';
  aggregate?: Maybe<Clients_Aggregate_Fields>;
  nodes: Array<Clients>;
};

export type Clients_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Clients_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Clients_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Clients_Aggregate_Bool_Exp_Count>;
};

export type Clients_Aggregate_Bool_Exp_Bool_And = {
  arguments: Clients_Select_Column_Clients_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Clients_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Clients_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Clients_Select_Column_Clients_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Clients_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Clients_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Clients_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Clients_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "clients" */
export type Clients_Aggregate_Fields = {
  __typename?: 'clients_aggregate_fields';
  avg?: Maybe<Clients_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Clients_Max_Fields>;
  min?: Maybe<Clients_Min_Fields>;
  stddev?: Maybe<Clients_Stddev_Fields>;
  stddev_pop?: Maybe<Clients_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Clients_Stddev_Samp_Fields>;
  sum?: Maybe<Clients_Sum_Fields>;
  var_pop?: Maybe<Clients_Var_Pop_Fields>;
  var_samp?: Maybe<Clients_Var_Samp_Fields>;
  variance?: Maybe<Clients_Variance_Fields>;
};


/** aggregate fields of "clients" */
export type Clients_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Clients_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "clients" */
export type Clients_Aggregate_Order_By = {
  avg?: InputMaybe<Clients_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Clients_Max_Order_By>;
  min?: InputMaybe<Clients_Min_Order_By>;
  stddev?: InputMaybe<Clients_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Clients_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Clients_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Clients_Sum_Order_By>;
  var_pop?: InputMaybe<Clients_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Clients_Var_Samp_Order_By>;
  variance?: InputMaybe<Clients_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Clients_Append_Input = {
  references?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "clients" */
export type Clients_Arr_Rel_Insert_Input = {
  data: Array<Clients_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Clients_On_Conflict>;
};

/** aggregate avg on columns */
export type Clients_Avg_Fields = {
  __typename?: 'clients_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "clients" */
export type Clients_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "clients". All fields are combined with a logical 'AND'. */
export type Clients_Bool_Exp = {
  _and?: InputMaybe<Array<Clients_Bool_Exp>>;
  _not?: InputMaybe<Clients_Bool_Exp>;
  _or?: InputMaybe<Array<Clients_Bool_Exp>>;
  account?: InputMaybe<Accounts_Bool_Exp>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  active?: InputMaybe<Boolean_Comparison_Exp>;
  archivable?: InputMaybe<Boolean_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  deletable?: InputMaybe<Boolean_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  image_key?: InputMaybe<String_Comparison_Exp>;
  internal?: InputMaybe<Boolean_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  projects?: InputMaybe<Projects_Bool_Exp>;
  projects_aggregate?: InputMaybe<Projects_Aggregate_Bool_Exp>;
  real_client?: InputMaybe<Boolean_Comparison_Exp>;
  references?: InputMaybe<Jsonb_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
  website?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "clients" */
export enum Clients_Constraint {
  /** unique or primary key constraint on columns "id" */
  ClientsPkey = 'clients_pkey',
  /** unique or primary key constraint on columns "account_id", "name" */
  IndexUniqueClientNameAccountId = 'index_unique_client_name_account_id',
  /** unique or primary key constraint on columns "account_id", "id" */
  IndexUniqueClientsIdAccountId = 'index_unique_clients_id_account_id'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Clients_Delete_At_Path_Input = {
  references?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Clients_Delete_Elem_Input = {
  references?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Clients_Delete_Key_Input = {
  references?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "clients" */
export type Clients_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "clients" */
export type Clients_Insert_Input = {
  account?: InputMaybe<Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['Int']['input']>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  image_key?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  projects?: InputMaybe<Projects_Arr_Rel_Insert_Input>;
  real_client?: InputMaybe<Scalars['Boolean']['input']>;
  references?: InputMaybe<Scalars['jsonb']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  website?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Clients_Max_Fields = {
  __typename?: 'clients_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  image_key?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
  website?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "clients" */
export type Clients_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_key?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  website?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Clients_Min_Fields = {
  __typename?: 'clients_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  image_key?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
  website?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "clients" */
export type Clients_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_key?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  website?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "clients" */
export type Clients_Mutation_Response = {
  __typename?: 'clients_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Clients>;
};

/** input type for inserting object relation for remote table "clients" */
export type Clients_Obj_Rel_Insert_Input = {
  data: Clients_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Clients_On_Conflict>;
};

/** on_conflict condition type for table "clients" */
export type Clients_On_Conflict = {
  constraint: Clients_Constraint;
  update_columns?: Array<Clients_Update_Column>;
  where?: InputMaybe<Clients_Bool_Exp>;
};

/** Ordering options when selecting data from "clients". */
export type Clients_Order_By = {
  account?: InputMaybe<Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  active?: InputMaybe<Order_By>;
  archivable?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deletable?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_key?: InputMaybe<Order_By>;
  internal?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  projects_aggregate?: InputMaybe<Projects_Aggregate_Order_By>;
  real_client?: InputMaybe<Order_By>;
  references?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  website?: InputMaybe<Order_By>;
};

/** primary key columns input for table: clients */
export type Clients_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Clients_Prepend_Input = {
  references?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "clients" */
export enum Clients_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Active = 'active',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  ImageKey = 'image_key',
  /** column name */
  Name = 'name',
  /** column name */
  RealClient = 'real_client',
  /** column name */
  References = 'references',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Website = 'website'
}

/** select "clients_aggregate_bool_exp_bool_and_arguments_columns" columns of table "clients" */
export enum Clients_Select_Column_Clients_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  Active = 'active',
  /** column name */
  RealClient = 'real_client'
}

/** select "clients_aggregate_bool_exp_bool_or_arguments_columns" columns of table "clients" */
export enum Clients_Select_Column_Clients_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  Active = 'active',
  /** column name */
  RealClient = 'real_client'
}

/** input type for updating data in table "clients" */
export type Clients_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  image_key?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  real_client?: InputMaybe<Scalars['Boolean']['input']>;
  references?: InputMaybe<Scalars['jsonb']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  website?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Clients_Stddev_Fields = {
  __typename?: 'clients_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "clients" */
export type Clients_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Clients_Stddev_Pop_Fields = {
  __typename?: 'clients_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "clients" */
export type Clients_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Clients_Stddev_Samp_Fields = {
  __typename?: 'clients_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "clients" */
export type Clients_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "clients" */
export type Clients_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Clients_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Clients_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  image_key?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  real_client?: InputMaybe<Scalars['Boolean']['input']>;
  references?: InputMaybe<Scalars['jsonb']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  website?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Clients_Sum_Fields = {
  __typename?: 'clients_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "clients" */
export type Clients_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "clients" */
export enum Clients_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Active = 'active',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  ImageKey = 'image_key',
  /** column name */
  Name = 'name',
  /** column name */
  RealClient = 'real_client',
  /** column name */
  References = 'references',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Website = 'website'
}

export type Clients_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Clients_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Clients_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Clients_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Clients_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Clients_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Clients_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Clients_Set_Input>;
  /** filter the rows which have to be updated */
  where: Clients_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Clients_Var_Pop_Fields = {
  __typename?: 'clients_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "clients" */
export type Clients_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Clients_Var_Samp_Fields = {
  __typename?: 'clients_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "clients" */
export type Clients_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Clients_Variance_Fields = {
  __typename?: 'clients_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "clients" */
export type Clients_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "competencies" */
export type Competencies = {
  __typename?: 'competencies';
  /** An object relationship */
  account: Accounts;
  account_id: Scalars['Int']['output'];
  created_at: Scalars['timestamp']['output'];
  id: Scalars['Int']['output'];
  level?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  person: People;
  person_id: Scalars['Int']['output'];
  /** An object relationship */
  skill: Skills;
  skill_id: Scalars['Int']['output'];
  updated_at: Scalars['timestamp']['output'];
};

/** aggregated selection of "competencies" */
export type Competencies_Aggregate = {
  __typename?: 'competencies_aggregate';
  aggregate?: Maybe<Competencies_Aggregate_Fields>;
  nodes: Array<Competencies>;
};

export type Competencies_Aggregate_Bool_Exp = {
  count?: InputMaybe<Competencies_Aggregate_Bool_Exp_Count>;
};

export type Competencies_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Competencies_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Competencies_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "competencies" */
export type Competencies_Aggregate_Fields = {
  __typename?: 'competencies_aggregate_fields';
  avg?: Maybe<Competencies_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Competencies_Max_Fields>;
  min?: Maybe<Competencies_Min_Fields>;
  stddev?: Maybe<Competencies_Stddev_Fields>;
  stddev_pop?: Maybe<Competencies_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Competencies_Stddev_Samp_Fields>;
  sum?: Maybe<Competencies_Sum_Fields>;
  var_pop?: Maybe<Competencies_Var_Pop_Fields>;
  var_samp?: Maybe<Competencies_Var_Samp_Fields>;
  variance?: Maybe<Competencies_Variance_Fields>;
};


/** aggregate fields of "competencies" */
export type Competencies_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Competencies_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "competencies" */
export type Competencies_Aggregate_Order_By = {
  avg?: InputMaybe<Competencies_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Competencies_Max_Order_By>;
  min?: InputMaybe<Competencies_Min_Order_By>;
  stddev?: InputMaybe<Competencies_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Competencies_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Competencies_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Competencies_Sum_Order_By>;
  var_pop?: InputMaybe<Competencies_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Competencies_Var_Samp_Order_By>;
  variance?: InputMaybe<Competencies_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "competencies" */
export type Competencies_Arr_Rel_Insert_Input = {
  data: Array<Competencies_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Competencies_On_Conflict>;
};

/** aggregate avg on columns */
export type Competencies_Avg_Fields = {
  __typename?: 'competencies_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  skill_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "competencies" */
export type Competencies_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  skill_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "competencies". All fields are combined with a logical 'AND'. */
export type Competencies_Bool_Exp = {
  _and?: InputMaybe<Array<Competencies_Bool_Exp>>;
  _not?: InputMaybe<Competencies_Bool_Exp>;
  _or?: InputMaybe<Array<Competencies_Bool_Exp>>;
  account?: InputMaybe<Accounts_Bool_Exp>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  level?: InputMaybe<Int_Comparison_Exp>;
  person?: InputMaybe<People_Bool_Exp>;
  person_id?: InputMaybe<Int_Comparison_Exp>;
  skill?: InputMaybe<Skills_Bool_Exp>;
  skill_id?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "competencies" */
export enum Competencies_Constraint {
  /** unique or primary key constraint on columns "id" */
  CompetenciesPkey = 'competencies_pkey',
  /** unique or primary key constraint on columns "account_id", "id" */
  IndexUniqueCompetenciesIdAccountId = 'index_unique_competencies_id_account_id',
  /** unique or primary key constraint on columns "skill_id", "person_id" */
  IndexUniqueCompetencyPersonSkill = 'index_unique_competency_person_skill'
}

/** input type for incrementing numeric columns in table "competencies" */
export type Competencies_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  level?: InputMaybe<Scalars['Int']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  skill_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "competencies" */
export type Competencies_Insert_Input = {
  account?: InputMaybe<Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  level?: InputMaybe<Scalars['Int']['input']>;
  person?: InputMaybe<People_Obj_Rel_Insert_Input>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  skill?: InputMaybe<Skills_Obj_Rel_Insert_Input>;
  skill_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Competencies_Max_Fields = {
  __typename?: 'competencies_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  level?: Maybe<Scalars['Int']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  skill_id?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "competencies" */
export type Competencies_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  skill_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Competencies_Min_Fields = {
  __typename?: 'competencies_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  level?: Maybe<Scalars['Int']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  skill_id?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "competencies" */
export type Competencies_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  skill_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "competencies" */
export type Competencies_Mutation_Response = {
  __typename?: 'competencies_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Competencies>;
};

/** on_conflict condition type for table "competencies" */
export type Competencies_On_Conflict = {
  constraint: Competencies_Constraint;
  update_columns?: Array<Competencies_Update_Column>;
  where?: InputMaybe<Competencies_Bool_Exp>;
};

/** Ordering options when selecting data from "competencies". */
export type Competencies_Order_By = {
  account?: InputMaybe<Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
  person?: InputMaybe<People_Order_By>;
  person_id?: InputMaybe<Order_By>;
  skill?: InputMaybe<Skills_Order_By>;
  skill_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: competencies */
export type Competencies_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "competencies" */
export enum Competencies_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Level = 'level',
  /** column name */
  PersonId = 'person_id',
  /** column name */
  SkillId = 'skill_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "competencies" */
export type Competencies_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  level?: InputMaybe<Scalars['Int']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  skill_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Competencies_Stddev_Fields = {
  __typename?: 'competencies_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  skill_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "competencies" */
export type Competencies_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  skill_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Competencies_Stddev_Pop_Fields = {
  __typename?: 'competencies_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  skill_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "competencies" */
export type Competencies_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  skill_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Competencies_Stddev_Samp_Fields = {
  __typename?: 'competencies_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  skill_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "competencies" */
export type Competencies_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  skill_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "competencies" */
export type Competencies_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Competencies_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Competencies_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  level?: InputMaybe<Scalars['Int']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  skill_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Competencies_Sum_Fields = {
  __typename?: 'competencies_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  level?: Maybe<Scalars['Int']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  skill_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "competencies" */
export type Competencies_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  skill_id?: InputMaybe<Order_By>;
};

/** update columns of table "competencies" */
export enum Competencies_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Level = 'level',
  /** column name */
  PersonId = 'person_id',
  /** column name */
  SkillId = 'skill_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Competencies_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Competencies_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Competencies_Set_Input>;
  /** filter the rows which have to be updated */
  where: Competencies_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Competencies_Var_Pop_Fields = {
  __typename?: 'competencies_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  skill_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "competencies" */
export type Competencies_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  skill_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Competencies_Var_Samp_Fields = {
  __typename?: 'competencies_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  skill_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "competencies" */
export type Competencies_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  skill_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Competencies_Variance_Fields = {
  __typename?: 'competencies_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  level?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  skill_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "competencies" */
export type Competencies_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  level?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  skill_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "contracts" */
export type Contracts = {
  __typename?: 'contracts';
  account_id: Scalars['Int']['output'];
  cost?: Maybe<Scalars['numeric']['output']>;
  cost_padded_private?: Maybe<Scalars['numeric']['output']>;
  cost_private?: Maybe<Scalars['numeric']['output']>;
  created_at: Scalars['timestamp']['output'];
  employment_type: Scalars['String']['output'];
  end_date_iso?: Maybe<Scalars['date']['output']>;
  end_date_runn?: Maybe<Scalars['String']['output']>;
  id: Scalars['Int']['output'];
  minutes_per_day?: Maybe<Scalars['Int']['output']>;
  permanent?: Maybe<Scalars['Boolean']['output']>;
  /** An object relationship */
  person: People;
  person_id: Scalars['Int']['output'];
  /** An object relationship */
  role: Roles;
  role_id: Scalars['Int']['output'];
  rostered_days?: Maybe<Scalars['_int4']['output']>;
  start_date_iso: Scalars['date']['output'];
  start_date_runn?: Maybe<Scalars['String']['output']>;
  updated_at: Scalars['timestamp']['output'];
};

/** aggregated selection of "contracts" */
export type Contracts_Aggregate = {
  __typename?: 'contracts_aggregate';
  aggregate?: Maybe<Contracts_Aggregate_Fields>;
  nodes: Array<Contracts>;
};

export type Contracts_Aggregate_Bool_Exp = {
  count?: InputMaybe<Contracts_Aggregate_Bool_Exp_Count>;
};

export type Contracts_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Contracts_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Contracts_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "contracts" */
export type Contracts_Aggregate_Fields = {
  __typename?: 'contracts_aggregate_fields';
  avg?: Maybe<Contracts_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Contracts_Max_Fields>;
  min?: Maybe<Contracts_Min_Fields>;
  stddev?: Maybe<Contracts_Stddev_Fields>;
  stddev_pop?: Maybe<Contracts_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Contracts_Stddev_Samp_Fields>;
  sum?: Maybe<Contracts_Sum_Fields>;
  var_pop?: Maybe<Contracts_Var_Pop_Fields>;
  var_samp?: Maybe<Contracts_Var_Samp_Fields>;
  variance?: Maybe<Contracts_Variance_Fields>;
};


/** aggregate fields of "contracts" */
export type Contracts_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Contracts_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "contracts" */
export type Contracts_Aggregate_Order_By = {
  avg?: InputMaybe<Contracts_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Contracts_Max_Order_By>;
  min?: InputMaybe<Contracts_Min_Order_By>;
  stddev?: InputMaybe<Contracts_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Contracts_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Contracts_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Contracts_Sum_Order_By>;
  var_pop?: InputMaybe<Contracts_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Contracts_Var_Samp_Order_By>;
  variance?: InputMaybe<Contracts_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "contracts" */
export type Contracts_Arr_Rel_Insert_Input = {
  data: Array<Contracts_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Contracts_On_Conflict>;
};

/** aggregate avg on columns */
export type Contracts_Avg_Fields = {
  __typename?: 'contracts_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  cost?: Maybe<Scalars['Float']['output']>;
  cost_padded_private?: Maybe<Scalars['numeric']['output']>;
  cost_private?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  minutes_per_day?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "contracts" */
export type Contracts_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  cost?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minutes_per_day?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "contracts". All fields are combined with a logical 'AND'. */
export type Contracts_Bool_Exp = {
  _and?: InputMaybe<Array<Contracts_Bool_Exp>>;
  _not?: InputMaybe<Contracts_Bool_Exp>;
  _or?: InputMaybe<Array<Contracts_Bool_Exp>>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  cost?: InputMaybe<Numeric_Comparison_Exp>;
  cost_padded_private?: InputMaybe<Numeric_Comparison_Exp>;
  cost_private?: InputMaybe<Numeric_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  employment_type?: InputMaybe<String_Comparison_Exp>;
  end_date_iso?: InputMaybe<Date_Comparison_Exp>;
  end_date_runn?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  minutes_per_day?: InputMaybe<Int_Comparison_Exp>;
  permanent?: InputMaybe<Boolean_Comparison_Exp>;
  person?: InputMaybe<People_Bool_Exp>;
  person_id?: InputMaybe<Int_Comparison_Exp>;
  role?: InputMaybe<Roles_Bool_Exp>;
  role_id?: InputMaybe<Int_Comparison_Exp>;
  rostered_days?: InputMaybe<_Int4_Comparison_Exp>;
  start_date_iso?: InputMaybe<Date_Comparison_Exp>;
  start_date_runn?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "contracts" */
export enum Contracts_Constraint {
  /** unique or primary key constraint on columns "id" */
  ContractsPkey = 'contracts_pkey',
  /** unique or primary key constraint on columns "account_id", "id" */
  IndexUniqueContractsIdAccountId = 'index_unique_contracts_id_account_id'
}

/** input type for incrementing numeric columns in table "contracts" */
export type Contracts_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  cost?: InputMaybe<Scalars['numeric']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  minutes_per_day?: InputMaybe<Scalars['Int']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "contracts" */
export type Contracts_Insert_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  cost?: InputMaybe<Scalars['numeric']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  employment_type?: InputMaybe<Scalars['String']['input']>;
  end_date_iso?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  minutes_per_day?: InputMaybe<Scalars['Int']['input']>;
  person?: InputMaybe<People_Obj_Rel_Insert_Input>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  role?: InputMaybe<Roles_Obj_Rel_Insert_Input>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
  rostered_days?: InputMaybe<Scalars['_int4']['input']>;
  start_date_iso?: InputMaybe<Scalars['date']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Contracts_Max_Fields = {
  __typename?: 'contracts_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  cost?: Maybe<Scalars['numeric']['output']>;
  cost_padded_private?: Maybe<Scalars['numeric']['output']>;
  cost_private?: Maybe<Scalars['numeric']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  employment_type?: Maybe<Scalars['String']['output']>;
  end_date_iso?: Maybe<Scalars['date']['output']>;
  end_date_runn?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  minutes_per_day?: Maybe<Scalars['Int']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  role_id?: Maybe<Scalars['Int']['output']>;
  start_date_iso?: Maybe<Scalars['date']['output']>;
  start_date_runn?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "contracts" */
export type Contracts_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  cost?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  employment_type?: InputMaybe<Order_By>;
  end_date_iso?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minutes_per_day?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  start_date_iso?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Contracts_Min_Fields = {
  __typename?: 'contracts_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  cost?: Maybe<Scalars['numeric']['output']>;
  cost_padded_private?: Maybe<Scalars['numeric']['output']>;
  cost_private?: Maybe<Scalars['numeric']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  employment_type?: Maybe<Scalars['String']['output']>;
  end_date_iso?: Maybe<Scalars['date']['output']>;
  end_date_runn?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  minutes_per_day?: Maybe<Scalars['Int']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  role_id?: Maybe<Scalars['Int']['output']>;
  start_date_iso?: Maybe<Scalars['date']['output']>;
  start_date_runn?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "contracts" */
export type Contracts_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  cost?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  employment_type?: InputMaybe<Order_By>;
  end_date_iso?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minutes_per_day?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  start_date_iso?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "contracts" */
export type Contracts_Mutation_Response = {
  __typename?: 'contracts_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Contracts>;
};

/** on_conflict condition type for table "contracts" */
export type Contracts_On_Conflict = {
  constraint: Contracts_Constraint;
  update_columns?: Array<Contracts_Update_Column>;
  where?: InputMaybe<Contracts_Bool_Exp>;
};

/** Ordering options when selecting data from "contracts". */
export type Contracts_Order_By = {
  account_id?: InputMaybe<Order_By>;
  cost?: InputMaybe<Order_By>;
  cost_padded_private?: InputMaybe<Order_By>;
  cost_private?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  employment_type?: InputMaybe<Order_By>;
  end_date_iso?: InputMaybe<Order_By>;
  end_date_runn?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minutes_per_day?: InputMaybe<Order_By>;
  permanent?: InputMaybe<Order_By>;
  person?: InputMaybe<People_Order_By>;
  person_id?: InputMaybe<Order_By>;
  role?: InputMaybe<Roles_Order_By>;
  role_id?: InputMaybe<Order_By>;
  rostered_days?: InputMaybe<Order_By>;
  start_date_iso?: InputMaybe<Order_By>;
  start_date_runn?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: contracts */
export type Contracts_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "contracts" */
export enum Contracts_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Cost = 'cost',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  EmploymentType = 'employment_type',
  /** column name */
  EndDateIso = 'end_date_iso',
  /** column name */
  Id = 'id',
  /** column name */
  MinutesPerDay = 'minutes_per_day',
  /** column name */
  PersonId = 'person_id',
  /** column name */
  RoleId = 'role_id',
  /** column name */
  RosteredDays = 'rostered_days',
  /** column name */
  StartDateIso = 'start_date_iso',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "contracts" */
export type Contracts_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  cost?: InputMaybe<Scalars['numeric']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  employment_type?: InputMaybe<Scalars['String']['input']>;
  end_date_iso?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  minutes_per_day?: InputMaybe<Scalars['Int']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
  rostered_days?: InputMaybe<Scalars['_int4']['input']>;
  start_date_iso?: InputMaybe<Scalars['date']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Contracts_Stddev_Fields = {
  __typename?: 'contracts_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  cost?: Maybe<Scalars['Float']['output']>;
  cost_padded_private?: Maybe<Scalars['numeric']['output']>;
  cost_private?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  minutes_per_day?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "contracts" */
export type Contracts_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  cost?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minutes_per_day?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Contracts_Stddev_Pop_Fields = {
  __typename?: 'contracts_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  cost?: Maybe<Scalars['Float']['output']>;
  cost_padded_private?: Maybe<Scalars['numeric']['output']>;
  cost_private?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  minutes_per_day?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "contracts" */
export type Contracts_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  cost?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minutes_per_day?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Contracts_Stddev_Samp_Fields = {
  __typename?: 'contracts_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  cost?: Maybe<Scalars['Float']['output']>;
  cost_padded_private?: Maybe<Scalars['numeric']['output']>;
  cost_private?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  minutes_per_day?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "contracts" */
export type Contracts_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  cost?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minutes_per_day?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "contracts" */
export type Contracts_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Contracts_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Contracts_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  cost?: InputMaybe<Scalars['numeric']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  employment_type?: InputMaybe<Scalars['String']['input']>;
  end_date_iso?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  minutes_per_day?: InputMaybe<Scalars['Int']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
  rostered_days?: InputMaybe<Scalars['_int4']['input']>;
  start_date_iso?: InputMaybe<Scalars['date']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Contracts_Sum_Fields = {
  __typename?: 'contracts_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  cost?: Maybe<Scalars['numeric']['output']>;
  cost_padded_private?: Maybe<Scalars['numeric']['output']>;
  cost_private?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  minutes_per_day?: Maybe<Scalars['Int']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  role_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "contracts" */
export type Contracts_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  cost?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minutes_per_day?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** update columns of table "contracts" */
export enum Contracts_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Cost = 'cost',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  EmploymentType = 'employment_type',
  /** column name */
  EndDateIso = 'end_date_iso',
  /** column name */
  Id = 'id',
  /** column name */
  MinutesPerDay = 'minutes_per_day',
  /** column name */
  PersonId = 'person_id',
  /** column name */
  RoleId = 'role_id',
  /** column name */
  RosteredDays = 'rostered_days',
  /** column name */
  StartDateIso = 'start_date_iso',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Contracts_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Contracts_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Contracts_Set_Input>;
  /** filter the rows which have to be updated */
  where: Contracts_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Contracts_Var_Pop_Fields = {
  __typename?: 'contracts_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  cost?: Maybe<Scalars['Float']['output']>;
  cost_padded_private?: Maybe<Scalars['numeric']['output']>;
  cost_private?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  minutes_per_day?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "contracts" */
export type Contracts_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  cost?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minutes_per_day?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Contracts_Var_Samp_Fields = {
  __typename?: 'contracts_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  cost?: Maybe<Scalars['Float']['output']>;
  cost_padded_private?: Maybe<Scalars['numeric']['output']>;
  cost_private?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  minutes_per_day?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "contracts" */
export type Contracts_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  cost?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minutes_per_day?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Contracts_Variance_Fields = {
  __typename?: 'contracts_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  cost?: Maybe<Scalars['Float']['output']>;
  cost_padded_private?: Maybe<Scalars['numeric']['output']>;
  cost_private?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  minutes_per_day?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "contracts" */
export type Contracts_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  cost?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minutes_per_day?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** ordering argument of a cursor */
export enum Cursor_Ordering {
  /** ascending ordering of the cursor */
  Asc = 'ASC',
  /** descending ordering of the cursor */
  Desc = 'DESC'
}

/** Boolean expression to compare columns of type "custom_model". All fields are combined with logical 'AND'. */
export type Custom_Model_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['custom_model']['input']>;
  _gt?: InputMaybe<Scalars['custom_model']['input']>;
  _gte?: InputMaybe<Scalars['custom_model']['input']>;
  _in?: InputMaybe<Array<Scalars['custom_model']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['custom_model']['input']>;
  _lte?: InputMaybe<Scalars['custom_model']['input']>;
  _neq?: InputMaybe<Scalars['custom_model']['input']>;
  _nin?: InputMaybe<Array<Scalars['custom_model']['input']>>;
};

/** columns and relationships of "custom_select_options" */
export type Custom_Select_Options = {
  __typename?: 'custom_select_options';
  /** An object relationship */
  account: Accounts;
  account_id: Scalars['Int']['output'];
  created_at: Scalars['timestamp']['output'];
  /** An object relationship */
  custom_select_type: Custom_Select_Types;
  custom_select_type_id: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  updated_at: Scalars['timestamp']['output'];
};

/** aggregated selection of "custom_select_options" */
export type Custom_Select_Options_Aggregate = {
  __typename?: 'custom_select_options_aggregate';
  aggregate?: Maybe<Custom_Select_Options_Aggregate_Fields>;
  nodes: Array<Custom_Select_Options>;
};

export type Custom_Select_Options_Aggregate_Bool_Exp = {
  count?: InputMaybe<Custom_Select_Options_Aggregate_Bool_Exp_Count>;
};

export type Custom_Select_Options_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Custom_Select_Options_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Custom_Select_Options_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "custom_select_options" */
export type Custom_Select_Options_Aggregate_Fields = {
  __typename?: 'custom_select_options_aggregate_fields';
  avg?: Maybe<Custom_Select_Options_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Custom_Select_Options_Max_Fields>;
  min?: Maybe<Custom_Select_Options_Min_Fields>;
  stddev?: Maybe<Custom_Select_Options_Stddev_Fields>;
  stddev_pop?: Maybe<Custom_Select_Options_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Custom_Select_Options_Stddev_Samp_Fields>;
  sum?: Maybe<Custom_Select_Options_Sum_Fields>;
  var_pop?: Maybe<Custom_Select_Options_Var_Pop_Fields>;
  var_samp?: Maybe<Custom_Select_Options_Var_Samp_Fields>;
  variance?: Maybe<Custom_Select_Options_Variance_Fields>;
};


/** aggregate fields of "custom_select_options" */
export type Custom_Select_Options_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Custom_Select_Options_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "custom_select_options" */
export type Custom_Select_Options_Aggregate_Order_By = {
  avg?: InputMaybe<Custom_Select_Options_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Custom_Select_Options_Max_Order_By>;
  min?: InputMaybe<Custom_Select_Options_Min_Order_By>;
  stddev?: InputMaybe<Custom_Select_Options_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Custom_Select_Options_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Custom_Select_Options_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Custom_Select_Options_Sum_Order_By>;
  var_pop?: InputMaybe<Custom_Select_Options_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Custom_Select_Options_Var_Samp_Order_By>;
  variance?: InputMaybe<Custom_Select_Options_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "custom_select_options" */
export type Custom_Select_Options_Arr_Rel_Insert_Input = {
  data: Array<Custom_Select_Options_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Custom_Select_Options_On_Conflict>;
};

/** aggregate avg on columns */
export type Custom_Select_Options_Avg_Fields = {
  __typename?: 'custom_select_options_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  custom_select_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "custom_select_options" */
export type Custom_Select_Options_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  custom_select_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "custom_select_options". All fields are combined with a logical 'AND'. */
export type Custom_Select_Options_Bool_Exp = {
  _and?: InputMaybe<Array<Custom_Select_Options_Bool_Exp>>;
  _not?: InputMaybe<Custom_Select_Options_Bool_Exp>;
  _or?: InputMaybe<Array<Custom_Select_Options_Bool_Exp>>;
  account?: InputMaybe<Accounts_Bool_Exp>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  custom_select_type?: InputMaybe<Custom_Select_Types_Bool_Exp>;
  custom_select_type_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "custom_select_options" */
export enum Custom_Select_Options_Constraint {
  /** unique or primary key constraint on columns "id" */
  CustomSelectOptionsPkey = 'custom_select_options_pkey',
  /** unique or primary key constraint on columns "account_id", "id" */
  IndexUniqueCustomSelectOptionsIdAccountId = 'index_unique_custom_select_options_id_account_id',
  /** unique or primary key constraint on columns "custom_select_type_id", "id" */
  IndexUniqueCustomSelectOptionsIdType = 'index_unique_custom_select_options_id_type',
  /** unique or primary key constraint on columns "custom_select_type_id", "account_id", "name" */
  IndexUniqueCustomSelectOptionsNameCustomAccount = 'index_unique_custom_select_options_name_custom_account'
}

/** input type for incrementing numeric columns in table "custom_select_options" */
export type Custom_Select_Options_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  custom_select_type_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "custom_select_options" */
export type Custom_Select_Options_Insert_Input = {
  account?: InputMaybe<Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  custom_select_type?: InputMaybe<Custom_Select_Types_Obj_Rel_Insert_Input>;
  custom_select_type_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Custom_Select_Options_Max_Fields = {
  __typename?: 'custom_select_options_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  custom_select_type_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "custom_select_options" */
export type Custom_Select_Options_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  custom_select_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Custom_Select_Options_Min_Fields = {
  __typename?: 'custom_select_options_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  custom_select_type_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "custom_select_options" */
export type Custom_Select_Options_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  custom_select_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "custom_select_options" */
export type Custom_Select_Options_Mutation_Response = {
  __typename?: 'custom_select_options_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Custom_Select_Options>;
};

/** input type for inserting object relation for remote table "custom_select_options" */
export type Custom_Select_Options_Obj_Rel_Insert_Input = {
  data: Custom_Select_Options_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Custom_Select_Options_On_Conflict>;
};

/** on_conflict condition type for table "custom_select_options" */
export type Custom_Select_Options_On_Conflict = {
  constraint: Custom_Select_Options_Constraint;
  update_columns?: Array<Custom_Select_Options_Update_Column>;
  where?: InputMaybe<Custom_Select_Options_Bool_Exp>;
};

/** Ordering options when selecting data from "custom_select_options". */
export type Custom_Select_Options_Order_By = {
  account?: InputMaybe<Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  custom_select_type?: InputMaybe<Custom_Select_Types_Order_By>;
  custom_select_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: custom_select_options */
export type Custom_Select_Options_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "custom_select_options" */
export enum Custom_Select_Options_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CustomSelectTypeId = 'custom_select_type_id',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "custom_select_options" */
export type Custom_Select_Options_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  custom_select_type_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Custom_Select_Options_Stddev_Fields = {
  __typename?: 'custom_select_options_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  custom_select_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "custom_select_options" */
export type Custom_Select_Options_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  custom_select_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Custom_Select_Options_Stddev_Pop_Fields = {
  __typename?: 'custom_select_options_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  custom_select_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "custom_select_options" */
export type Custom_Select_Options_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  custom_select_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Custom_Select_Options_Stddev_Samp_Fields = {
  __typename?: 'custom_select_options_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  custom_select_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "custom_select_options" */
export type Custom_Select_Options_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  custom_select_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "custom_select_options" */
export type Custom_Select_Options_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Custom_Select_Options_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Custom_Select_Options_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  custom_select_type_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Custom_Select_Options_Sum_Fields = {
  __typename?: 'custom_select_options_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  custom_select_type_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "custom_select_options" */
export type Custom_Select_Options_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  custom_select_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "custom_select_options" */
export enum Custom_Select_Options_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CustomSelectTypeId = 'custom_select_type_id',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Custom_Select_Options_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Custom_Select_Options_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Custom_Select_Options_Set_Input>;
  /** filter the rows which have to be updated */
  where: Custom_Select_Options_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Custom_Select_Options_Var_Pop_Fields = {
  __typename?: 'custom_select_options_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  custom_select_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "custom_select_options" */
export type Custom_Select_Options_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  custom_select_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Custom_Select_Options_Var_Samp_Fields = {
  __typename?: 'custom_select_options_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  custom_select_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "custom_select_options" */
export type Custom_Select_Options_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  custom_select_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Custom_Select_Options_Variance_Fields = {
  __typename?: 'custom_select_options_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  custom_select_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "custom_select_options" */
export type Custom_Select_Options_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  custom_select_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "custom_select_types" */
export type Custom_Select_Types = {
  __typename?: 'custom_select_types';
  /** An object relationship */
  account: Accounts;
  account_id: Scalars['Int']['output'];
  created_at: Scalars['timestamp']['output'];
  /** An array relationship */
  custom_select_options: Array<Custom_Select_Options>;
  /** An aggregate relationship */
  custom_select_options_aggregate: Custom_Select_Options_Aggregate;
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['Int']['output'];
  model: Scalars['custom_model']['output'];
  name: Scalars['String']['output'];
  required?: Maybe<Scalars['Boolean']['output']>;
  show_in_planner: Scalars['Boolean']['output'];
  single_select: Scalars['Boolean']['output'];
  updated_at: Scalars['timestamp']['output'];
};


/** columns and relationships of "custom_select_types" */
export type Custom_Select_TypesCustom_Select_OptionsArgs = {
  distinct_on?: InputMaybe<Array<Custom_Select_Options_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Custom_Select_Options_Order_By>>;
  where?: InputMaybe<Custom_Select_Options_Bool_Exp>;
};


/** columns and relationships of "custom_select_types" */
export type Custom_Select_TypesCustom_Select_Options_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Custom_Select_Options_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Custom_Select_Options_Order_By>>;
  where?: InputMaybe<Custom_Select_Options_Bool_Exp>;
};

/** aggregated selection of "custom_select_types" */
export type Custom_Select_Types_Aggregate = {
  __typename?: 'custom_select_types_aggregate';
  aggregate?: Maybe<Custom_Select_Types_Aggregate_Fields>;
  nodes: Array<Custom_Select_Types>;
};

export type Custom_Select_Types_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Custom_Select_Types_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Custom_Select_Types_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Custom_Select_Types_Aggregate_Bool_Exp_Count>;
};

export type Custom_Select_Types_Aggregate_Bool_Exp_Bool_And = {
  arguments: Custom_Select_Types_Select_Column_Custom_Select_Types_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Custom_Select_Types_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Custom_Select_Types_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Custom_Select_Types_Select_Column_Custom_Select_Types_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Custom_Select_Types_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Custom_Select_Types_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Custom_Select_Types_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Custom_Select_Types_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "custom_select_types" */
export type Custom_Select_Types_Aggregate_Fields = {
  __typename?: 'custom_select_types_aggregate_fields';
  avg?: Maybe<Custom_Select_Types_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Custom_Select_Types_Max_Fields>;
  min?: Maybe<Custom_Select_Types_Min_Fields>;
  stddev?: Maybe<Custom_Select_Types_Stddev_Fields>;
  stddev_pop?: Maybe<Custom_Select_Types_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Custom_Select_Types_Stddev_Samp_Fields>;
  sum?: Maybe<Custom_Select_Types_Sum_Fields>;
  var_pop?: Maybe<Custom_Select_Types_Var_Pop_Fields>;
  var_samp?: Maybe<Custom_Select_Types_Var_Samp_Fields>;
  variance?: Maybe<Custom_Select_Types_Variance_Fields>;
};


/** aggregate fields of "custom_select_types" */
export type Custom_Select_Types_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Custom_Select_Types_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "custom_select_types" */
export type Custom_Select_Types_Aggregate_Order_By = {
  avg?: InputMaybe<Custom_Select_Types_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Custom_Select_Types_Max_Order_By>;
  min?: InputMaybe<Custom_Select_Types_Min_Order_By>;
  stddev?: InputMaybe<Custom_Select_Types_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Custom_Select_Types_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Custom_Select_Types_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Custom_Select_Types_Sum_Order_By>;
  var_pop?: InputMaybe<Custom_Select_Types_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Custom_Select_Types_Var_Samp_Order_By>;
  variance?: InputMaybe<Custom_Select_Types_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "custom_select_types" */
export type Custom_Select_Types_Arr_Rel_Insert_Input = {
  data: Array<Custom_Select_Types_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Custom_Select_Types_On_Conflict>;
};

/** aggregate avg on columns */
export type Custom_Select_Types_Avg_Fields = {
  __typename?: 'custom_select_types_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "custom_select_types" */
export type Custom_Select_Types_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "custom_select_types". All fields are combined with a logical 'AND'. */
export type Custom_Select_Types_Bool_Exp = {
  _and?: InputMaybe<Array<Custom_Select_Types_Bool_Exp>>;
  _not?: InputMaybe<Custom_Select_Types_Bool_Exp>;
  _or?: InputMaybe<Array<Custom_Select_Types_Bool_Exp>>;
  account?: InputMaybe<Accounts_Bool_Exp>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  custom_select_options?: InputMaybe<Custom_Select_Options_Bool_Exp>;
  custom_select_options_aggregate?: InputMaybe<Custom_Select_Options_Aggregate_Bool_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  model?: InputMaybe<Custom_Model_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  required?: InputMaybe<Boolean_Comparison_Exp>;
  show_in_planner?: InputMaybe<Boolean_Comparison_Exp>;
  single_select?: InputMaybe<Boolean_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "custom_select_types" */
export enum Custom_Select_Types_Constraint {
  /** unique or primary key constraint on columns "id" */
  CustomSelectTypesPkey = 'custom_select_types_pkey',
  /** unique or primary key constraint on columns "account_id", "id" */
  IndexUniqueCustomSelectTypesIdAccountId = 'index_unique_custom_select_types_id_account_id',
  /** unique or primary key constraint on columns "account_id", "model", "name" */
  IndexUniqueCustomSelectTypesNameModelAccount = 'index_unique_custom_select_types_name_model_account'
}

/** input type for incrementing numeric columns in table "custom_select_types" */
export type Custom_Select_Types_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "custom_select_types" */
export type Custom_Select_Types_Insert_Input = {
  account?: InputMaybe<Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  custom_select_options?: InputMaybe<Custom_Select_Options_Arr_Rel_Insert_Input>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  model?: InputMaybe<Scalars['custom_model']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  required?: InputMaybe<Scalars['Boolean']['input']>;
  show_in_planner?: InputMaybe<Scalars['Boolean']['input']>;
  single_select?: InputMaybe<Scalars['Boolean']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Custom_Select_Types_Max_Fields = {
  __typename?: 'custom_select_types_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  model?: Maybe<Scalars['custom_model']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "custom_select_types" */
export type Custom_Select_Types_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  model?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Custom_Select_Types_Min_Fields = {
  __typename?: 'custom_select_types_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  model?: Maybe<Scalars['custom_model']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "custom_select_types" */
export type Custom_Select_Types_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  model?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "custom_select_types" */
export type Custom_Select_Types_Mutation_Response = {
  __typename?: 'custom_select_types_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Custom_Select_Types>;
};

/** input type for inserting object relation for remote table "custom_select_types" */
export type Custom_Select_Types_Obj_Rel_Insert_Input = {
  data: Custom_Select_Types_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Custom_Select_Types_On_Conflict>;
};

/** on_conflict condition type for table "custom_select_types" */
export type Custom_Select_Types_On_Conflict = {
  constraint: Custom_Select_Types_Constraint;
  update_columns?: Array<Custom_Select_Types_Update_Column>;
  where?: InputMaybe<Custom_Select_Types_Bool_Exp>;
};

/** Ordering options when selecting data from "custom_select_types". */
export type Custom_Select_Types_Order_By = {
  account?: InputMaybe<Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  custom_select_options_aggregate?: InputMaybe<Custom_Select_Options_Aggregate_Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  model?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  required?: InputMaybe<Order_By>;
  show_in_planner?: InputMaybe<Order_By>;
  single_select?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: custom_select_types */
export type Custom_Select_Types_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "custom_select_types" */
export enum Custom_Select_Types_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  Model = 'model',
  /** column name */
  Name = 'name',
  /** column name */
  Required = 'required',
  /** column name */
  ShowInPlanner = 'show_in_planner',
  /** column name */
  SingleSelect = 'single_select',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** select "custom_select_types_aggregate_bool_exp_bool_and_arguments_columns" columns of table "custom_select_types" */
export enum Custom_Select_Types_Select_Column_Custom_Select_Types_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  Required = 'required',
  /** column name */
  ShowInPlanner = 'show_in_planner',
  /** column name */
  SingleSelect = 'single_select'
}

/** select "custom_select_types_aggregate_bool_exp_bool_or_arguments_columns" columns of table "custom_select_types" */
export enum Custom_Select_Types_Select_Column_Custom_Select_Types_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  Required = 'required',
  /** column name */
  ShowInPlanner = 'show_in_planner',
  /** column name */
  SingleSelect = 'single_select'
}

/** input type for updating data in table "custom_select_types" */
export type Custom_Select_Types_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  model?: InputMaybe<Scalars['custom_model']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  required?: InputMaybe<Scalars['Boolean']['input']>;
  show_in_planner?: InputMaybe<Scalars['Boolean']['input']>;
  single_select?: InputMaybe<Scalars['Boolean']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Custom_Select_Types_Stddev_Fields = {
  __typename?: 'custom_select_types_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "custom_select_types" */
export type Custom_Select_Types_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Custom_Select_Types_Stddev_Pop_Fields = {
  __typename?: 'custom_select_types_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "custom_select_types" */
export type Custom_Select_Types_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Custom_Select_Types_Stddev_Samp_Fields = {
  __typename?: 'custom_select_types_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "custom_select_types" */
export type Custom_Select_Types_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "custom_select_types" */
export type Custom_Select_Types_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Custom_Select_Types_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Custom_Select_Types_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  model?: InputMaybe<Scalars['custom_model']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  required?: InputMaybe<Scalars['Boolean']['input']>;
  show_in_planner?: InputMaybe<Scalars['Boolean']['input']>;
  single_select?: InputMaybe<Scalars['Boolean']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Custom_Select_Types_Sum_Fields = {
  __typename?: 'custom_select_types_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "custom_select_types" */
export type Custom_Select_Types_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "custom_select_types" */
export enum Custom_Select_Types_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  Model = 'model',
  /** column name */
  Name = 'name',
  /** column name */
  Required = 'required',
  /** column name */
  ShowInPlanner = 'show_in_planner',
  /** column name */
  SingleSelect = 'single_select',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Custom_Select_Types_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Custom_Select_Types_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Custom_Select_Types_Set_Input>;
  /** filter the rows which have to be updated */
  where: Custom_Select_Types_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Custom_Select_Types_Var_Pop_Fields = {
  __typename?: 'custom_select_types_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "custom_select_types" */
export type Custom_Select_Types_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Custom_Select_Types_Var_Samp_Fields = {
  __typename?: 'custom_select_types_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "custom_select_types" */
export type Custom_Select_Types_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Custom_Select_Types_Variance_Fields = {
  __typename?: 'custom_select_types_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "custom_select_types" */
export type Custom_Select_Types_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "custom_select_values" */
export type Custom_Select_Values = {
  __typename?: 'custom_select_values';
  account_id: Scalars['Int']['output'];
  created_at: Scalars['timestamp']['output'];
  /** An object relationship */
  custom_select_option: Custom_Select_Options;
  custom_select_option_id: Scalars['Int']['output'];
  custom_select_type_id: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  model: Scalars['custom_model']['output'];
  person_id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  updated_at: Scalars['timestamp']['output'];
};

/** aggregated selection of "custom_select_values" */
export type Custom_Select_Values_Aggregate = {
  __typename?: 'custom_select_values_aggregate';
  aggregate?: Maybe<Custom_Select_Values_Aggregate_Fields>;
  nodes: Array<Custom_Select_Values>;
};

export type Custom_Select_Values_Aggregate_Bool_Exp = {
  count?: InputMaybe<Custom_Select_Values_Aggregate_Bool_Exp_Count>;
};

export type Custom_Select_Values_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Custom_Select_Values_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Custom_Select_Values_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "custom_select_values" */
export type Custom_Select_Values_Aggregate_Fields = {
  __typename?: 'custom_select_values_aggregate_fields';
  avg?: Maybe<Custom_Select_Values_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Custom_Select_Values_Max_Fields>;
  min?: Maybe<Custom_Select_Values_Min_Fields>;
  stddev?: Maybe<Custom_Select_Values_Stddev_Fields>;
  stddev_pop?: Maybe<Custom_Select_Values_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Custom_Select_Values_Stddev_Samp_Fields>;
  sum?: Maybe<Custom_Select_Values_Sum_Fields>;
  var_pop?: Maybe<Custom_Select_Values_Var_Pop_Fields>;
  var_samp?: Maybe<Custom_Select_Values_Var_Samp_Fields>;
  variance?: Maybe<Custom_Select_Values_Variance_Fields>;
};


/** aggregate fields of "custom_select_values" */
export type Custom_Select_Values_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Custom_Select_Values_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "custom_select_values" */
export type Custom_Select_Values_Aggregate_Order_By = {
  avg?: InputMaybe<Custom_Select_Values_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Custom_Select_Values_Max_Order_By>;
  min?: InputMaybe<Custom_Select_Values_Min_Order_By>;
  stddev?: InputMaybe<Custom_Select_Values_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Custom_Select_Values_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Custom_Select_Values_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Custom_Select_Values_Sum_Order_By>;
  var_pop?: InputMaybe<Custom_Select_Values_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Custom_Select_Values_Var_Samp_Order_By>;
  variance?: InputMaybe<Custom_Select_Values_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "custom_select_values" */
export type Custom_Select_Values_Arr_Rel_Insert_Input = {
  data: Array<Custom_Select_Values_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Custom_Select_Values_On_Conflict>;
};

/** aggregate avg on columns */
export type Custom_Select_Values_Avg_Fields = {
  __typename?: 'custom_select_values_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  custom_select_option_id?: Maybe<Scalars['Float']['output']>;
  custom_select_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "custom_select_values" */
export type Custom_Select_Values_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  custom_select_option_id?: InputMaybe<Order_By>;
  custom_select_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "custom_select_values". All fields are combined with a logical 'AND'. */
export type Custom_Select_Values_Bool_Exp = {
  _and?: InputMaybe<Array<Custom_Select_Values_Bool_Exp>>;
  _not?: InputMaybe<Custom_Select_Values_Bool_Exp>;
  _or?: InputMaybe<Array<Custom_Select_Values_Bool_Exp>>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  custom_select_option?: InputMaybe<Custom_Select_Options_Bool_Exp>;
  custom_select_option_id?: InputMaybe<Int_Comparison_Exp>;
  custom_select_type_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  model?: InputMaybe<Custom_Model_Comparison_Exp>;
  person_id?: InputMaybe<Int_Comparison_Exp>;
  project_id?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "custom_select_values" */
export enum Custom_Select_Values_Constraint {
  /** unique or primary key constraint on columns "id" */
  CustomSelectValuesPkey = 'custom_select_values_pkey',
  /** unique or primary key constraint on columns "account_id", "id" */
  IndexUniqueCustomSelectValuesIdAccountId = 'index_unique_custom_select_values_id_account_id',
  /** unique or primary key constraint on columns "account_id", "custom_select_option_id", "person_id" */
  IndexUniqueCustomSelectValuesOptionPersonAccount = 'index_unique_custom_select_values_option_person_account',
  /** unique or primary key constraint on columns "project_id", "account_id", "custom_select_option_id" */
  IndexUniqueCustomSelectValuesOptionProjectAccount = 'index_unique_custom_select_values_option_project_account'
}

/** input type for incrementing numeric columns in table "custom_select_values" */
export type Custom_Select_Values_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  custom_select_option_id?: InputMaybe<Scalars['Int']['input']>;
  custom_select_type_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "custom_select_values" */
export type Custom_Select_Values_Insert_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  custom_select_option?: InputMaybe<Custom_Select_Options_Obj_Rel_Insert_Input>;
  custom_select_option_id?: InputMaybe<Scalars['Int']['input']>;
  custom_select_type_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  model?: InputMaybe<Scalars['custom_model']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Custom_Select_Values_Max_Fields = {
  __typename?: 'custom_select_values_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  custom_select_option_id?: Maybe<Scalars['Int']['output']>;
  custom_select_type_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  model?: Maybe<Scalars['custom_model']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "custom_select_values" */
export type Custom_Select_Values_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  custom_select_option_id?: InputMaybe<Order_By>;
  custom_select_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  model?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Custom_Select_Values_Min_Fields = {
  __typename?: 'custom_select_values_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  custom_select_option_id?: Maybe<Scalars['Int']['output']>;
  custom_select_type_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  model?: Maybe<Scalars['custom_model']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "custom_select_values" */
export type Custom_Select_Values_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  custom_select_option_id?: InputMaybe<Order_By>;
  custom_select_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  model?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "custom_select_values" */
export type Custom_Select_Values_Mutation_Response = {
  __typename?: 'custom_select_values_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Custom_Select_Values>;
};

/** on_conflict condition type for table "custom_select_values" */
export type Custom_Select_Values_On_Conflict = {
  constraint: Custom_Select_Values_Constraint;
  update_columns?: Array<Custom_Select_Values_Update_Column>;
  where?: InputMaybe<Custom_Select_Values_Bool_Exp>;
};

/** Ordering options when selecting data from "custom_select_values". */
export type Custom_Select_Values_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  custom_select_option?: InputMaybe<Custom_Select_Options_Order_By>;
  custom_select_option_id?: InputMaybe<Order_By>;
  custom_select_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  model?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: custom_select_values */
export type Custom_Select_Values_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "custom_select_values" */
export enum Custom_Select_Values_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CustomSelectOptionId = 'custom_select_option_id',
  /** column name */
  CustomSelectTypeId = 'custom_select_type_id',
  /** column name */
  Id = 'id',
  /** column name */
  Model = 'model',
  /** column name */
  PersonId = 'person_id',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "custom_select_values" */
export type Custom_Select_Values_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  custom_select_option_id?: InputMaybe<Scalars['Int']['input']>;
  custom_select_type_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  model?: InputMaybe<Scalars['custom_model']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Custom_Select_Values_Stddev_Fields = {
  __typename?: 'custom_select_values_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  custom_select_option_id?: Maybe<Scalars['Float']['output']>;
  custom_select_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "custom_select_values" */
export type Custom_Select_Values_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  custom_select_option_id?: InputMaybe<Order_By>;
  custom_select_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Custom_Select_Values_Stddev_Pop_Fields = {
  __typename?: 'custom_select_values_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  custom_select_option_id?: Maybe<Scalars['Float']['output']>;
  custom_select_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "custom_select_values" */
export type Custom_Select_Values_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  custom_select_option_id?: InputMaybe<Order_By>;
  custom_select_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Custom_Select_Values_Stddev_Samp_Fields = {
  __typename?: 'custom_select_values_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  custom_select_option_id?: Maybe<Scalars['Float']['output']>;
  custom_select_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "custom_select_values" */
export type Custom_Select_Values_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  custom_select_option_id?: InputMaybe<Order_By>;
  custom_select_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "custom_select_values" */
export type Custom_Select_Values_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Custom_Select_Values_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Custom_Select_Values_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  custom_select_option_id?: InputMaybe<Scalars['Int']['input']>;
  custom_select_type_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  model?: InputMaybe<Scalars['custom_model']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Custom_Select_Values_Sum_Fields = {
  __typename?: 'custom_select_values_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  custom_select_option_id?: Maybe<Scalars['Int']['output']>;
  custom_select_type_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "custom_select_values" */
export type Custom_Select_Values_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  custom_select_option_id?: InputMaybe<Order_By>;
  custom_select_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** update columns of table "custom_select_values" */
export enum Custom_Select_Values_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CustomSelectOptionId = 'custom_select_option_id',
  /** column name */
  CustomSelectTypeId = 'custom_select_type_id',
  /** column name */
  Id = 'id',
  /** column name */
  Model = 'model',
  /** column name */
  PersonId = 'person_id',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Custom_Select_Values_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Custom_Select_Values_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Custom_Select_Values_Set_Input>;
  /** filter the rows which have to be updated */
  where: Custom_Select_Values_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Custom_Select_Values_Var_Pop_Fields = {
  __typename?: 'custom_select_values_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  custom_select_option_id?: Maybe<Scalars['Float']['output']>;
  custom_select_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "custom_select_values" */
export type Custom_Select_Values_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  custom_select_option_id?: InputMaybe<Order_By>;
  custom_select_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Custom_Select_Values_Var_Samp_Fields = {
  __typename?: 'custom_select_values_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  custom_select_option_id?: Maybe<Scalars['Float']['output']>;
  custom_select_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "custom_select_values" */
export type Custom_Select_Values_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  custom_select_option_id?: InputMaybe<Order_By>;
  custom_select_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Custom_Select_Values_Variance_Fields = {
  __typename?: 'custom_select_values_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  custom_select_option_id?: Maybe<Scalars['Float']['output']>;
  custom_select_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "custom_select_values" */
export type Custom_Select_Values_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  custom_select_option_id?: InputMaybe<Order_By>;
  custom_select_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "custom_text_types" */
export type Custom_Text_Types = {
  __typename?: 'custom_text_types';
  /** An object relationship */
  account: Accounts;
  account_id: Scalars['Int']['output'];
  created_at: Scalars['timestamp']['output'];
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['Int']['output'];
  model: Scalars['custom_model']['output'];
  name: Scalars['String']['output'];
  required?: Maybe<Scalars['Boolean']['output']>;
  show_in_planner: Scalars['Boolean']['output'];
  updated_at: Scalars['timestamp']['output'];
};

/** aggregated selection of "custom_text_types" */
export type Custom_Text_Types_Aggregate = {
  __typename?: 'custom_text_types_aggregate';
  aggregate?: Maybe<Custom_Text_Types_Aggregate_Fields>;
  nodes: Array<Custom_Text_Types>;
};

export type Custom_Text_Types_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Custom_Text_Types_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Custom_Text_Types_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Custom_Text_Types_Aggregate_Bool_Exp_Count>;
};

export type Custom_Text_Types_Aggregate_Bool_Exp_Bool_And = {
  arguments: Custom_Text_Types_Select_Column_Custom_Text_Types_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Custom_Text_Types_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Custom_Text_Types_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Custom_Text_Types_Select_Column_Custom_Text_Types_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Custom_Text_Types_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Custom_Text_Types_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Custom_Text_Types_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Custom_Text_Types_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "custom_text_types" */
export type Custom_Text_Types_Aggregate_Fields = {
  __typename?: 'custom_text_types_aggregate_fields';
  avg?: Maybe<Custom_Text_Types_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Custom_Text_Types_Max_Fields>;
  min?: Maybe<Custom_Text_Types_Min_Fields>;
  stddev?: Maybe<Custom_Text_Types_Stddev_Fields>;
  stddev_pop?: Maybe<Custom_Text_Types_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Custom_Text_Types_Stddev_Samp_Fields>;
  sum?: Maybe<Custom_Text_Types_Sum_Fields>;
  var_pop?: Maybe<Custom_Text_Types_Var_Pop_Fields>;
  var_samp?: Maybe<Custom_Text_Types_Var_Samp_Fields>;
  variance?: Maybe<Custom_Text_Types_Variance_Fields>;
};


/** aggregate fields of "custom_text_types" */
export type Custom_Text_Types_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Custom_Text_Types_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "custom_text_types" */
export type Custom_Text_Types_Aggregate_Order_By = {
  avg?: InputMaybe<Custom_Text_Types_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Custom_Text_Types_Max_Order_By>;
  min?: InputMaybe<Custom_Text_Types_Min_Order_By>;
  stddev?: InputMaybe<Custom_Text_Types_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Custom_Text_Types_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Custom_Text_Types_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Custom_Text_Types_Sum_Order_By>;
  var_pop?: InputMaybe<Custom_Text_Types_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Custom_Text_Types_Var_Samp_Order_By>;
  variance?: InputMaybe<Custom_Text_Types_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "custom_text_types" */
export type Custom_Text_Types_Arr_Rel_Insert_Input = {
  data: Array<Custom_Text_Types_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Custom_Text_Types_On_Conflict>;
};

/** aggregate avg on columns */
export type Custom_Text_Types_Avg_Fields = {
  __typename?: 'custom_text_types_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "custom_text_types" */
export type Custom_Text_Types_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "custom_text_types". All fields are combined with a logical 'AND'. */
export type Custom_Text_Types_Bool_Exp = {
  _and?: InputMaybe<Array<Custom_Text_Types_Bool_Exp>>;
  _not?: InputMaybe<Custom_Text_Types_Bool_Exp>;
  _or?: InputMaybe<Array<Custom_Text_Types_Bool_Exp>>;
  account?: InputMaybe<Accounts_Bool_Exp>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  model?: InputMaybe<Custom_Model_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  required?: InputMaybe<Boolean_Comparison_Exp>;
  show_in_planner?: InputMaybe<Boolean_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "custom_text_types" */
export enum Custom_Text_Types_Constraint {
  /** unique or primary key constraint on columns "id" */
  CustomTextTypesPkey = 'custom_text_types_pkey',
  /** unique or primary key constraint on columns "account_id", "id" */
  IndexUniqueCustomTextTypesIdAccountId = 'index_unique_custom_text_types_id_account_id',
  /** unique or primary key constraint on columns "account_id", "model", "name" */
  IndexUniqueCustomTextTypesNameModelAccount = 'index_unique_custom_text_types_name_model_account'
}

/** input type for incrementing numeric columns in table "custom_text_types" */
export type Custom_Text_Types_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "custom_text_types" */
export type Custom_Text_Types_Insert_Input = {
  account?: InputMaybe<Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  model?: InputMaybe<Scalars['custom_model']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  required?: InputMaybe<Scalars['Boolean']['input']>;
  show_in_planner?: InputMaybe<Scalars['Boolean']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Custom_Text_Types_Max_Fields = {
  __typename?: 'custom_text_types_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  model?: Maybe<Scalars['custom_model']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "custom_text_types" */
export type Custom_Text_Types_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  model?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Custom_Text_Types_Min_Fields = {
  __typename?: 'custom_text_types_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  model?: Maybe<Scalars['custom_model']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "custom_text_types" */
export type Custom_Text_Types_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  model?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "custom_text_types" */
export type Custom_Text_Types_Mutation_Response = {
  __typename?: 'custom_text_types_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Custom_Text_Types>;
};

/** input type for inserting object relation for remote table "custom_text_types" */
export type Custom_Text_Types_Obj_Rel_Insert_Input = {
  data: Custom_Text_Types_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Custom_Text_Types_On_Conflict>;
};

/** on_conflict condition type for table "custom_text_types" */
export type Custom_Text_Types_On_Conflict = {
  constraint: Custom_Text_Types_Constraint;
  update_columns?: Array<Custom_Text_Types_Update_Column>;
  where?: InputMaybe<Custom_Text_Types_Bool_Exp>;
};

/** Ordering options when selecting data from "custom_text_types". */
export type Custom_Text_Types_Order_By = {
  account?: InputMaybe<Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  model?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  required?: InputMaybe<Order_By>;
  show_in_planner?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: custom_text_types */
export type Custom_Text_Types_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "custom_text_types" */
export enum Custom_Text_Types_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  Model = 'model',
  /** column name */
  Name = 'name',
  /** column name */
  Required = 'required',
  /** column name */
  ShowInPlanner = 'show_in_planner',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** select "custom_text_types_aggregate_bool_exp_bool_and_arguments_columns" columns of table "custom_text_types" */
export enum Custom_Text_Types_Select_Column_Custom_Text_Types_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  Required = 'required',
  /** column name */
  ShowInPlanner = 'show_in_planner'
}

/** select "custom_text_types_aggregate_bool_exp_bool_or_arguments_columns" columns of table "custom_text_types" */
export enum Custom_Text_Types_Select_Column_Custom_Text_Types_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  Required = 'required',
  /** column name */
  ShowInPlanner = 'show_in_planner'
}

/** input type for updating data in table "custom_text_types" */
export type Custom_Text_Types_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  model?: InputMaybe<Scalars['custom_model']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  required?: InputMaybe<Scalars['Boolean']['input']>;
  show_in_planner?: InputMaybe<Scalars['Boolean']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Custom_Text_Types_Stddev_Fields = {
  __typename?: 'custom_text_types_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "custom_text_types" */
export type Custom_Text_Types_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Custom_Text_Types_Stddev_Pop_Fields = {
  __typename?: 'custom_text_types_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "custom_text_types" */
export type Custom_Text_Types_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Custom_Text_Types_Stddev_Samp_Fields = {
  __typename?: 'custom_text_types_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "custom_text_types" */
export type Custom_Text_Types_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "custom_text_types" */
export type Custom_Text_Types_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Custom_Text_Types_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Custom_Text_Types_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  model?: InputMaybe<Scalars['custom_model']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  required?: InputMaybe<Scalars['Boolean']['input']>;
  show_in_planner?: InputMaybe<Scalars['Boolean']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Custom_Text_Types_Sum_Fields = {
  __typename?: 'custom_text_types_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "custom_text_types" */
export type Custom_Text_Types_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "custom_text_types" */
export enum Custom_Text_Types_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  Model = 'model',
  /** column name */
  Name = 'name',
  /** column name */
  Required = 'required',
  /** column name */
  ShowInPlanner = 'show_in_planner',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Custom_Text_Types_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Custom_Text_Types_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Custom_Text_Types_Set_Input>;
  /** filter the rows which have to be updated */
  where: Custom_Text_Types_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Custom_Text_Types_Var_Pop_Fields = {
  __typename?: 'custom_text_types_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "custom_text_types" */
export type Custom_Text_Types_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Custom_Text_Types_Var_Samp_Fields = {
  __typename?: 'custom_text_types_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "custom_text_types" */
export type Custom_Text_Types_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Custom_Text_Types_Variance_Fields = {
  __typename?: 'custom_text_types_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "custom_text_types" */
export type Custom_Text_Types_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "custom_text_values" */
export type Custom_Text_Values = {
  __typename?: 'custom_text_values';
  account_id: Scalars['Int']['output'];
  created_at: Scalars['timestamp']['output'];
  /** An object relationship */
  custom_text_type: Custom_Text_Types;
  custom_text_type_id: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  model: Scalars['custom_model']['output'];
  person_id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  updated_at: Scalars['timestamp']['output'];
  value?: Maybe<Scalars['String']['output']>;
};

/** aggregated selection of "custom_text_values" */
export type Custom_Text_Values_Aggregate = {
  __typename?: 'custom_text_values_aggregate';
  aggregate?: Maybe<Custom_Text_Values_Aggregate_Fields>;
  nodes: Array<Custom_Text_Values>;
};

export type Custom_Text_Values_Aggregate_Bool_Exp = {
  count?: InputMaybe<Custom_Text_Values_Aggregate_Bool_Exp_Count>;
};

export type Custom_Text_Values_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Custom_Text_Values_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Custom_Text_Values_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "custom_text_values" */
export type Custom_Text_Values_Aggregate_Fields = {
  __typename?: 'custom_text_values_aggregate_fields';
  avg?: Maybe<Custom_Text_Values_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Custom_Text_Values_Max_Fields>;
  min?: Maybe<Custom_Text_Values_Min_Fields>;
  stddev?: Maybe<Custom_Text_Values_Stddev_Fields>;
  stddev_pop?: Maybe<Custom_Text_Values_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Custom_Text_Values_Stddev_Samp_Fields>;
  sum?: Maybe<Custom_Text_Values_Sum_Fields>;
  var_pop?: Maybe<Custom_Text_Values_Var_Pop_Fields>;
  var_samp?: Maybe<Custom_Text_Values_Var_Samp_Fields>;
  variance?: Maybe<Custom_Text_Values_Variance_Fields>;
};


/** aggregate fields of "custom_text_values" */
export type Custom_Text_Values_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Custom_Text_Values_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "custom_text_values" */
export type Custom_Text_Values_Aggregate_Order_By = {
  avg?: InputMaybe<Custom_Text_Values_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Custom_Text_Values_Max_Order_By>;
  min?: InputMaybe<Custom_Text_Values_Min_Order_By>;
  stddev?: InputMaybe<Custom_Text_Values_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Custom_Text_Values_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Custom_Text_Values_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Custom_Text_Values_Sum_Order_By>;
  var_pop?: InputMaybe<Custom_Text_Values_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Custom_Text_Values_Var_Samp_Order_By>;
  variance?: InputMaybe<Custom_Text_Values_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "custom_text_values" */
export type Custom_Text_Values_Arr_Rel_Insert_Input = {
  data: Array<Custom_Text_Values_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Custom_Text_Values_On_Conflict>;
};

/** aggregate avg on columns */
export type Custom_Text_Values_Avg_Fields = {
  __typename?: 'custom_text_values_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  custom_text_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "custom_text_values" */
export type Custom_Text_Values_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  custom_text_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "custom_text_values". All fields are combined with a logical 'AND'. */
export type Custom_Text_Values_Bool_Exp = {
  _and?: InputMaybe<Array<Custom_Text_Values_Bool_Exp>>;
  _not?: InputMaybe<Custom_Text_Values_Bool_Exp>;
  _or?: InputMaybe<Array<Custom_Text_Values_Bool_Exp>>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  custom_text_type?: InputMaybe<Custom_Text_Types_Bool_Exp>;
  custom_text_type_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  model?: InputMaybe<Custom_Model_Comparison_Exp>;
  person_id?: InputMaybe<Int_Comparison_Exp>;
  project_id?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
  value?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "custom_text_values" */
export enum Custom_Text_Values_Constraint {
  /** unique or primary key constraint on columns "id" */
  CustomTextValuesPkey = 'custom_text_values_pkey',
  /** unique or primary key constraint on columns "account_id", "id" */
  IndexUniqueCustomTextValuesIdAccountId = 'index_unique_custom_text_values_id_account_id',
  /** unique or primary key constraint on columns "account_id", "custom_text_type_id", "person_id" */
  IndexUniqueCustomTextValuesTypePersonAccount = 'index_unique_custom_text_values_type_person_account',
  /** unique or primary key constraint on columns "project_id", "account_id", "custom_text_type_id" */
  IndexUniqueCustomTextValuesTypeProjectAccount = 'index_unique_custom_text_values_type_project_account'
}

/** input type for incrementing numeric columns in table "custom_text_values" */
export type Custom_Text_Values_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  custom_text_type_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "custom_text_values" */
export type Custom_Text_Values_Insert_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  custom_text_type?: InputMaybe<Custom_Text_Types_Obj_Rel_Insert_Input>;
  custom_text_type_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  model?: InputMaybe<Scalars['custom_model']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Custom_Text_Values_Max_Fields = {
  __typename?: 'custom_text_values_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  custom_text_type_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  model?: Maybe<Scalars['custom_model']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
  value?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "custom_text_values" */
export type Custom_Text_Values_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  custom_text_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  model?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Custom_Text_Values_Min_Fields = {
  __typename?: 'custom_text_values_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  custom_text_type_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  model?: Maybe<Scalars['custom_model']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
  value?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "custom_text_values" */
export type Custom_Text_Values_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  custom_text_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  model?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "custom_text_values" */
export type Custom_Text_Values_Mutation_Response = {
  __typename?: 'custom_text_values_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Custom_Text_Values>;
};

/** on_conflict condition type for table "custom_text_values" */
export type Custom_Text_Values_On_Conflict = {
  constraint: Custom_Text_Values_Constraint;
  update_columns?: Array<Custom_Text_Values_Update_Column>;
  where?: InputMaybe<Custom_Text_Values_Bool_Exp>;
};

/** Ordering options when selecting data from "custom_text_values". */
export type Custom_Text_Values_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  custom_text_type?: InputMaybe<Custom_Text_Types_Order_By>;
  custom_text_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  model?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
};

/** primary key columns input for table: custom_text_values */
export type Custom_Text_Values_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "custom_text_values" */
export enum Custom_Text_Values_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CustomTextTypeId = 'custom_text_type_id',
  /** column name */
  Id = 'id',
  /** column name */
  Model = 'model',
  /** column name */
  PersonId = 'person_id',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Value = 'value'
}

/** input type for updating data in table "custom_text_values" */
export type Custom_Text_Values_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  custom_text_type_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  model?: InputMaybe<Scalars['custom_model']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Custom_Text_Values_Stddev_Fields = {
  __typename?: 'custom_text_values_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  custom_text_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "custom_text_values" */
export type Custom_Text_Values_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  custom_text_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Custom_Text_Values_Stddev_Pop_Fields = {
  __typename?: 'custom_text_values_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  custom_text_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "custom_text_values" */
export type Custom_Text_Values_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  custom_text_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Custom_Text_Values_Stddev_Samp_Fields = {
  __typename?: 'custom_text_values_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  custom_text_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "custom_text_values" */
export type Custom_Text_Values_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  custom_text_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "custom_text_values" */
export type Custom_Text_Values_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Custom_Text_Values_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Custom_Text_Values_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  custom_text_type_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  model?: InputMaybe<Scalars['custom_model']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Custom_Text_Values_Sum_Fields = {
  __typename?: 'custom_text_values_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  custom_text_type_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "custom_text_values" */
export type Custom_Text_Values_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  custom_text_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** update columns of table "custom_text_values" */
export enum Custom_Text_Values_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CustomTextTypeId = 'custom_text_type_id',
  /** column name */
  Id = 'id',
  /** column name */
  Model = 'model',
  /** column name */
  PersonId = 'person_id',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Value = 'value'
}

export type Custom_Text_Values_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Custom_Text_Values_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Custom_Text_Values_Set_Input>;
  /** filter the rows which have to be updated */
  where: Custom_Text_Values_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Custom_Text_Values_Var_Pop_Fields = {
  __typename?: 'custom_text_values_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  custom_text_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "custom_text_values" */
export type Custom_Text_Values_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  custom_text_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Custom_Text_Values_Var_Samp_Fields = {
  __typename?: 'custom_text_values_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  custom_text_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "custom_text_values" */
export type Custom_Text_Values_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  custom_text_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Custom_Text_Values_Variance_Fields = {
  __typename?: 'custom_text_values_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  custom_text_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "custom_text_values" */
export type Custom_Text_Values_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  custom_text_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** Boolean expression to compare columns of type "date". All fields are combined with logical 'AND'. */
export type Date_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['date']['input']>;
  _gt?: InputMaybe<Scalars['date']['input']>;
  _gte?: InputMaybe<Scalars['date']['input']>;
  _in?: InputMaybe<Array<Scalars['date']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['date']['input']>;
  _lte?: InputMaybe<Scalars['date']['input']>;
  _neq?: InputMaybe<Scalars['date']['input']>;
  _nin?: InputMaybe<Array<Scalars['date']['input']>>;
};

/** columns and relationships of "ext_contract" */
export type Ext_Contract = {
  __typename?: 'ext_contract';
  account_id: Scalars['Int']['output'];
  cost?: Maybe<Scalars['numeric']['output']>;
  created_at: Scalars['timestamp']['output'];
  deleted: Scalars['Boolean']['output'];
  employment_type: Scalars['String']['output'];
  end_date?: Maybe<Scalars['timestamp']['output']>;
  ext_person_id: Scalars['Int']['output'];
  /** An object relationship */
  ext_role: Ext_Role;
  ext_role_id: Scalars['Int']['output'];
  external_id: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  integration_id: Scalars['Int']['output'];
  minutes_per_day: Scalars['Int']['output'];
  remote_id?: Maybe<Scalars['String']['output']>;
  rostered_days: Scalars['_int4']['output'];
  start_date: Scalars['timestamp']['output'];
  sync: Scalars['Boolean']['output'];
  updated_at: Scalars['timestamp']['output'];
};

/** aggregated selection of "ext_contract" */
export type Ext_Contract_Aggregate = {
  __typename?: 'ext_contract_aggregate';
  aggregate?: Maybe<Ext_Contract_Aggregate_Fields>;
  nodes: Array<Ext_Contract>;
};

/** aggregate fields of "ext_contract" */
export type Ext_Contract_Aggregate_Fields = {
  __typename?: 'ext_contract_aggregate_fields';
  avg?: Maybe<Ext_Contract_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Ext_Contract_Max_Fields>;
  min?: Maybe<Ext_Contract_Min_Fields>;
  stddev?: Maybe<Ext_Contract_Stddev_Fields>;
  stddev_pop?: Maybe<Ext_Contract_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Ext_Contract_Stddev_Samp_Fields>;
  sum?: Maybe<Ext_Contract_Sum_Fields>;
  var_pop?: Maybe<Ext_Contract_Var_Pop_Fields>;
  var_samp?: Maybe<Ext_Contract_Var_Samp_Fields>;
  variance?: Maybe<Ext_Contract_Variance_Fields>;
};


/** aggregate fields of "ext_contract" */
export type Ext_Contract_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Ext_Contract_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "ext_contract" */
export type Ext_Contract_Aggregate_Order_By = {
  avg?: InputMaybe<Ext_Contract_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Ext_Contract_Max_Order_By>;
  min?: InputMaybe<Ext_Contract_Min_Order_By>;
  stddev?: InputMaybe<Ext_Contract_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Ext_Contract_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Ext_Contract_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Ext_Contract_Sum_Order_By>;
  var_pop?: InputMaybe<Ext_Contract_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Ext_Contract_Var_Samp_Order_By>;
  variance?: InputMaybe<Ext_Contract_Variance_Order_By>;
};

/** aggregate avg on columns */
export type Ext_Contract_Avg_Fields = {
  __typename?: 'ext_contract_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  cost?: Maybe<Scalars['Float']['output']>;
  ext_person_id?: Maybe<Scalars['Float']['output']>;
  ext_role_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
  minutes_per_day?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "ext_contract" */
export type Ext_Contract_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  cost?: InputMaybe<Order_By>;
  ext_person_id?: InputMaybe<Order_By>;
  ext_role_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
  minutes_per_day?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "ext_contract". All fields are combined with a logical 'AND'. */
export type Ext_Contract_Bool_Exp = {
  _and?: InputMaybe<Array<Ext_Contract_Bool_Exp>>;
  _not?: InputMaybe<Ext_Contract_Bool_Exp>;
  _or?: InputMaybe<Array<Ext_Contract_Bool_Exp>>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  cost?: InputMaybe<Numeric_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  deleted?: InputMaybe<Boolean_Comparison_Exp>;
  employment_type?: InputMaybe<String_Comparison_Exp>;
  end_date?: InputMaybe<Timestamp_Comparison_Exp>;
  ext_person_id?: InputMaybe<Int_Comparison_Exp>;
  ext_role?: InputMaybe<Ext_Role_Bool_Exp>;
  ext_role_id?: InputMaybe<Int_Comparison_Exp>;
  external_id?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  integration_id?: InputMaybe<Int_Comparison_Exp>;
  minutes_per_day?: InputMaybe<Int_Comparison_Exp>;
  remote_id?: InputMaybe<String_Comparison_Exp>;
  rostered_days?: InputMaybe<_Int4_Comparison_Exp>;
  start_date?: InputMaybe<Timestamp_Comparison_Exp>;
  sync?: InputMaybe<Boolean_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "ext_contract" */
export enum Ext_Contract_Constraint {
  /** unique or primary key constraint on columns "account_id", "external_id", "integration_id" */
  ExtContractExternalTenant = 'ext_contract_external_tenant',
  /** unique or primary key constraint on columns "id" */
  ExtContractPkey = 'ext_contract_pkey',
  /** unique or primary key constraint on columns "account_id", "id" */
  ExtContractTenant = 'ext_contract_tenant'
}

/** input type for incrementing numeric columns in table "ext_contract" */
export type Ext_Contract_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  cost?: InputMaybe<Scalars['numeric']['input']>;
  ext_person_id?: InputMaybe<Scalars['Int']['input']>;
  ext_role_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  integration_id?: InputMaybe<Scalars['Int']['input']>;
  minutes_per_day?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "ext_contract" */
export type Ext_Contract_Insert_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  cost?: InputMaybe<Scalars['numeric']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  employment_type?: InputMaybe<Scalars['String']['input']>;
  end_date?: InputMaybe<Scalars['timestamp']['input']>;
  ext_person_id?: InputMaybe<Scalars['Int']['input']>;
  ext_role?: InputMaybe<Ext_Role_Obj_Rel_Insert_Input>;
  ext_role_id?: InputMaybe<Scalars['Int']['input']>;
  external_id?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  integration_id?: InputMaybe<Scalars['Int']['input']>;
  minutes_per_day?: InputMaybe<Scalars['Int']['input']>;
  remote_id?: InputMaybe<Scalars['String']['input']>;
  rostered_days?: InputMaybe<Scalars['_int4']['input']>;
  start_date?: InputMaybe<Scalars['timestamp']['input']>;
  sync?: InputMaybe<Scalars['Boolean']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Ext_Contract_Max_Fields = {
  __typename?: 'ext_contract_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  cost?: Maybe<Scalars['numeric']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  employment_type?: Maybe<Scalars['String']['output']>;
  end_date?: Maybe<Scalars['timestamp']['output']>;
  ext_person_id?: Maybe<Scalars['Int']['output']>;
  ext_role_id?: Maybe<Scalars['Int']['output']>;
  external_id?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  integration_id?: Maybe<Scalars['Int']['output']>;
  minutes_per_day?: Maybe<Scalars['Int']['output']>;
  remote_id?: Maybe<Scalars['String']['output']>;
  start_date?: Maybe<Scalars['timestamp']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "ext_contract" */
export type Ext_Contract_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  cost?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  employment_type?: InputMaybe<Order_By>;
  end_date?: InputMaybe<Order_By>;
  ext_person_id?: InputMaybe<Order_By>;
  ext_role_id?: InputMaybe<Order_By>;
  external_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
  minutes_per_day?: InputMaybe<Order_By>;
  remote_id?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Ext_Contract_Min_Fields = {
  __typename?: 'ext_contract_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  cost?: Maybe<Scalars['numeric']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  employment_type?: Maybe<Scalars['String']['output']>;
  end_date?: Maybe<Scalars['timestamp']['output']>;
  ext_person_id?: Maybe<Scalars['Int']['output']>;
  ext_role_id?: Maybe<Scalars['Int']['output']>;
  external_id?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  integration_id?: Maybe<Scalars['Int']['output']>;
  minutes_per_day?: Maybe<Scalars['Int']['output']>;
  remote_id?: Maybe<Scalars['String']['output']>;
  start_date?: Maybe<Scalars['timestamp']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "ext_contract" */
export type Ext_Contract_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  cost?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  employment_type?: InputMaybe<Order_By>;
  end_date?: InputMaybe<Order_By>;
  ext_person_id?: InputMaybe<Order_By>;
  ext_role_id?: InputMaybe<Order_By>;
  external_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
  minutes_per_day?: InputMaybe<Order_By>;
  remote_id?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "ext_contract" */
export type Ext_Contract_Mutation_Response = {
  __typename?: 'ext_contract_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Ext_Contract>;
};

/** on_conflict condition type for table "ext_contract" */
export type Ext_Contract_On_Conflict = {
  constraint: Ext_Contract_Constraint;
  update_columns?: Array<Ext_Contract_Update_Column>;
  where?: InputMaybe<Ext_Contract_Bool_Exp>;
};

/** Ordering options when selecting data from "ext_contract". */
export type Ext_Contract_Order_By = {
  account_id?: InputMaybe<Order_By>;
  cost?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted?: InputMaybe<Order_By>;
  employment_type?: InputMaybe<Order_By>;
  end_date?: InputMaybe<Order_By>;
  ext_person_id?: InputMaybe<Order_By>;
  ext_role?: InputMaybe<Ext_Role_Order_By>;
  ext_role_id?: InputMaybe<Order_By>;
  external_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
  minutes_per_day?: InputMaybe<Order_By>;
  remote_id?: InputMaybe<Order_By>;
  rostered_days?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  sync?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: ext_contract */
export type Ext_Contract_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "ext_contract" */
export enum Ext_Contract_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Cost = 'cost',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Deleted = 'deleted',
  /** column name */
  EmploymentType = 'employment_type',
  /** column name */
  EndDate = 'end_date',
  /** column name */
  ExtPersonId = 'ext_person_id',
  /** column name */
  ExtRoleId = 'ext_role_id',
  /** column name */
  ExternalId = 'external_id',
  /** column name */
  Id = 'id',
  /** column name */
  IntegrationId = 'integration_id',
  /** column name */
  MinutesPerDay = 'minutes_per_day',
  /** column name */
  RemoteId = 'remote_id',
  /** column name */
  RosteredDays = 'rostered_days',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  Sync = 'sync',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "ext_contract" */
export type Ext_Contract_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  cost?: InputMaybe<Scalars['numeric']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  employment_type?: InputMaybe<Scalars['String']['input']>;
  end_date?: InputMaybe<Scalars['timestamp']['input']>;
  ext_person_id?: InputMaybe<Scalars['Int']['input']>;
  ext_role_id?: InputMaybe<Scalars['Int']['input']>;
  external_id?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  integration_id?: InputMaybe<Scalars['Int']['input']>;
  minutes_per_day?: InputMaybe<Scalars['Int']['input']>;
  remote_id?: InputMaybe<Scalars['String']['input']>;
  rostered_days?: InputMaybe<Scalars['_int4']['input']>;
  start_date?: InputMaybe<Scalars['timestamp']['input']>;
  sync?: InputMaybe<Scalars['Boolean']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Ext_Contract_Stddev_Fields = {
  __typename?: 'ext_contract_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  cost?: Maybe<Scalars['Float']['output']>;
  ext_person_id?: Maybe<Scalars['Float']['output']>;
  ext_role_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
  minutes_per_day?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "ext_contract" */
export type Ext_Contract_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  cost?: InputMaybe<Order_By>;
  ext_person_id?: InputMaybe<Order_By>;
  ext_role_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
  minutes_per_day?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Ext_Contract_Stddev_Pop_Fields = {
  __typename?: 'ext_contract_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  cost?: Maybe<Scalars['Float']['output']>;
  ext_person_id?: Maybe<Scalars['Float']['output']>;
  ext_role_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
  minutes_per_day?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "ext_contract" */
export type Ext_Contract_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  cost?: InputMaybe<Order_By>;
  ext_person_id?: InputMaybe<Order_By>;
  ext_role_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
  minutes_per_day?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Ext_Contract_Stddev_Samp_Fields = {
  __typename?: 'ext_contract_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  cost?: Maybe<Scalars['Float']['output']>;
  ext_person_id?: Maybe<Scalars['Float']['output']>;
  ext_role_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
  minutes_per_day?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "ext_contract" */
export type Ext_Contract_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  cost?: InputMaybe<Order_By>;
  ext_person_id?: InputMaybe<Order_By>;
  ext_role_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
  minutes_per_day?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "ext_contract" */
export type Ext_Contract_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Ext_Contract_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Ext_Contract_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  cost?: InputMaybe<Scalars['numeric']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  employment_type?: InputMaybe<Scalars['String']['input']>;
  end_date?: InputMaybe<Scalars['timestamp']['input']>;
  ext_person_id?: InputMaybe<Scalars['Int']['input']>;
  ext_role_id?: InputMaybe<Scalars['Int']['input']>;
  external_id?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  integration_id?: InputMaybe<Scalars['Int']['input']>;
  minutes_per_day?: InputMaybe<Scalars['Int']['input']>;
  remote_id?: InputMaybe<Scalars['String']['input']>;
  rostered_days?: InputMaybe<Scalars['_int4']['input']>;
  start_date?: InputMaybe<Scalars['timestamp']['input']>;
  sync?: InputMaybe<Scalars['Boolean']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Ext_Contract_Sum_Fields = {
  __typename?: 'ext_contract_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  cost?: Maybe<Scalars['numeric']['output']>;
  ext_person_id?: Maybe<Scalars['Int']['output']>;
  ext_role_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  integration_id?: Maybe<Scalars['Int']['output']>;
  minutes_per_day?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "ext_contract" */
export type Ext_Contract_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  cost?: InputMaybe<Order_By>;
  ext_person_id?: InputMaybe<Order_By>;
  ext_role_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
  minutes_per_day?: InputMaybe<Order_By>;
};

/** update columns of table "ext_contract" */
export enum Ext_Contract_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Cost = 'cost',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Deleted = 'deleted',
  /** column name */
  EmploymentType = 'employment_type',
  /** column name */
  EndDate = 'end_date',
  /** column name */
  ExtPersonId = 'ext_person_id',
  /** column name */
  ExtRoleId = 'ext_role_id',
  /** column name */
  ExternalId = 'external_id',
  /** column name */
  Id = 'id',
  /** column name */
  IntegrationId = 'integration_id',
  /** column name */
  MinutesPerDay = 'minutes_per_day',
  /** column name */
  RemoteId = 'remote_id',
  /** column name */
  RosteredDays = 'rostered_days',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  Sync = 'sync',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Ext_Contract_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Ext_Contract_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Ext_Contract_Set_Input>;
  /** filter the rows which have to be updated */
  where: Ext_Contract_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Ext_Contract_Var_Pop_Fields = {
  __typename?: 'ext_contract_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  cost?: Maybe<Scalars['Float']['output']>;
  ext_person_id?: Maybe<Scalars['Float']['output']>;
  ext_role_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
  minutes_per_day?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "ext_contract" */
export type Ext_Contract_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  cost?: InputMaybe<Order_By>;
  ext_person_id?: InputMaybe<Order_By>;
  ext_role_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
  minutes_per_day?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Ext_Contract_Var_Samp_Fields = {
  __typename?: 'ext_contract_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  cost?: Maybe<Scalars['Float']['output']>;
  ext_person_id?: Maybe<Scalars['Float']['output']>;
  ext_role_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
  minutes_per_day?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "ext_contract" */
export type Ext_Contract_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  cost?: InputMaybe<Order_By>;
  ext_person_id?: InputMaybe<Order_By>;
  ext_role_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
  minutes_per_day?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Ext_Contract_Variance_Fields = {
  __typename?: 'ext_contract_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  cost?: Maybe<Scalars['Float']['output']>;
  ext_person_id?: Maybe<Scalars['Float']['output']>;
  ext_role_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
  minutes_per_day?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "ext_contract" */
export type Ext_Contract_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  cost?: InputMaybe<Order_By>;
  ext_person_id?: InputMaybe<Order_By>;
  ext_role_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
  minutes_per_day?: InputMaybe<Order_By>;
};

/** columns and relationships of "ext_person" */
export type Ext_Person = {
  __typename?: 'ext_person';
  /** An object relationship */
  account: Accounts;
  account_id: Scalars['Int']['output'];
  active: Scalars['Boolean']['output'];
  created_at: Scalars['timestamp']['output'];
  deleted: Scalars['Boolean']['output'];
  email?: Maybe<Scalars['String']['output']>;
  /** A computed field, executes function "ext_person_current_ext_contract" */
  ext_current_contract?: Maybe<Array<Ext_Contract>>;
  /** An array relationship */
  ext_person_links: Array<Ext_Person_Link>;
  /** An aggregate relationship */
  ext_person_links_aggregate: Ext_Person_Link_Aggregate;
  /** An object relationship */
  ext_team?: Maybe<Ext_Team>;
  ext_team_id?: Maybe<Scalars['Int']['output']>;
  external_id: Scalars['String']['output'];
  first_name: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  image_key?: Maybe<Scalars['String']['output']>;
  /** An object relationship */
  integration?: Maybe<Integration>;
  integration_id: Scalars['Int']['output'];
  is_placeholder: Scalars['Boolean']['output'];
  last_name: Scalars['String']['output'];
  references: Scalars['jsonb']['output'];
  remote_id?: Maybe<Scalars['String']['output']>;
  sync: Scalars['Boolean']['output'];
  tags: Scalars['_text']['output'];
  updated_at: Scalars['timestamp']['output'];
};


/** columns and relationships of "ext_person" */
export type Ext_PersonExt_Current_ContractArgs = {
  distinct_on?: InputMaybe<Array<Ext_Contract_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Contract_Order_By>>;
  where?: InputMaybe<Ext_Contract_Bool_Exp>;
};


/** columns and relationships of "ext_person" */
export type Ext_PersonExt_Person_LinksArgs = {
  distinct_on?: InputMaybe<Array<Ext_Person_Link_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Person_Link_Order_By>>;
  where?: InputMaybe<Ext_Person_Link_Bool_Exp>;
};


/** columns and relationships of "ext_person" */
export type Ext_PersonExt_Person_Links_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ext_Person_Link_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Person_Link_Order_By>>;
  where?: InputMaybe<Ext_Person_Link_Bool_Exp>;
};


/** columns and relationships of "ext_person" */
export type Ext_PersonReferencesArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "ext_person" */
export type Ext_Person_Aggregate = {
  __typename?: 'ext_person_aggregate';
  aggregate?: Maybe<Ext_Person_Aggregate_Fields>;
  nodes: Array<Ext_Person>;
};

export type Ext_Person_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Ext_Person_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Ext_Person_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Ext_Person_Aggregate_Bool_Exp_Count>;
};

export type Ext_Person_Aggregate_Bool_Exp_Bool_And = {
  arguments: Ext_Person_Select_Column_Ext_Person_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Ext_Person_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Ext_Person_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Ext_Person_Select_Column_Ext_Person_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Ext_Person_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Ext_Person_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Ext_Person_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Ext_Person_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "ext_person" */
export type Ext_Person_Aggregate_Fields = {
  __typename?: 'ext_person_aggregate_fields';
  avg?: Maybe<Ext_Person_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Ext_Person_Max_Fields>;
  min?: Maybe<Ext_Person_Min_Fields>;
  stddev?: Maybe<Ext_Person_Stddev_Fields>;
  stddev_pop?: Maybe<Ext_Person_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Ext_Person_Stddev_Samp_Fields>;
  sum?: Maybe<Ext_Person_Sum_Fields>;
  var_pop?: Maybe<Ext_Person_Var_Pop_Fields>;
  var_samp?: Maybe<Ext_Person_Var_Samp_Fields>;
  variance?: Maybe<Ext_Person_Variance_Fields>;
};


/** aggregate fields of "ext_person" */
export type Ext_Person_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Ext_Person_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "ext_person" */
export type Ext_Person_Aggregate_Order_By = {
  avg?: InputMaybe<Ext_Person_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Ext_Person_Max_Order_By>;
  min?: InputMaybe<Ext_Person_Min_Order_By>;
  stddev?: InputMaybe<Ext_Person_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Ext_Person_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Ext_Person_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Ext_Person_Sum_Order_By>;
  var_pop?: InputMaybe<Ext_Person_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Ext_Person_Var_Samp_Order_By>;
  variance?: InputMaybe<Ext_Person_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Ext_Person_Append_Input = {
  references?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "ext_person" */
export type Ext_Person_Arr_Rel_Insert_Input = {
  data: Array<Ext_Person_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Ext_Person_On_Conflict>;
};

/** aggregate avg on columns */
export type Ext_Person_Avg_Fields = {
  __typename?: 'ext_person_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  ext_team_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "ext_person" */
export type Ext_Person_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  ext_team_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "ext_person". All fields are combined with a logical 'AND'. */
export type Ext_Person_Bool_Exp = {
  _and?: InputMaybe<Array<Ext_Person_Bool_Exp>>;
  _not?: InputMaybe<Ext_Person_Bool_Exp>;
  _or?: InputMaybe<Array<Ext_Person_Bool_Exp>>;
  account?: InputMaybe<Accounts_Bool_Exp>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  active?: InputMaybe<Boolean_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  deleted?: InputMaybe<Boolean_Comparison_Exp>;
  email?: InputMaybe<String_Comparison_Exp>;
  ext_current_contract?: InputMaybe<Ext_Contract_Bool_Exp>;
  ext_person_links?: InputMaybe<Ext_Person_Link_Bool_Exp>;
  ext_person_links_aggregate?: InputMaybe<Ext_Person_Link_Aggregate_Bool_Exp>;
  ext_team?: InputMaybe<Ext_Team_Bool_Exp>;
  ext_team_id?: InputMaybe<Int_Comparison_Exp>;
  external_id?: InputMaybe<String_Comparison_Exp>;
  first_name?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  image_key?: InputMaybe<String_Comparison_Exp>;
  integration?: InputMaybe<Integration_Bool_Exp>;
  integration_id?: InputMaybe<Int_Comparison_Exp>;
  is_placeholder?: InputMaybe<Boolean_Comparison_Exp>;
  last_name?: InputMaybe<String_Comparison_Exp>;
  references?: InputMaybe<Jsonb_Comparison_Exp>;
  remote_id?: InputMaybe<String_Comparison_Exp>;
  sync?: InputMaybe<Boolean_Comparison_Exp>;
  tags?: InputMaybe<_Text_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "ext_person" */
export enum Ext_Person_Constraint {
  /** unique or primary key constraint on columns "account_id", "external_id", "integration_id" */
  ExtPersonExternalTenant = 'ext_person_external_tenant',
  /** unique or primary key constraint on columns "id" */
  ExtPersonPkey = 'ext_person_pkey',
  /** unique or primary key constraint on columns "account_id", "id" */
  ExtPersonTenant = 'ext_person_tenant'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Ext_Person_Delete_At_Path_Input = {
  references?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Ext_Person_Delete_Elem_Input = {
  references?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Ext_Person_Delete_Key_Input = {
  references?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "ext_person" */
export type Ext_Person_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  ext_team_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  integration_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "ext_person" */
export type Ext_Person_Insert_Input = {
  account?: InputMaybe<Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['Int']['input']>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  ext_person_links?: InputMaybe<Ext_Person_Link_Arr_Rel_Insert_Input>;
  ext_team?: InputMaybe<Ext_Team_Obj_Rel_Insert_Input>;
  ext_team_id?: InputMaybe<Scalars['Int']['input']>;
  external_id?: InputMaybe<Scalars['String']['input']>;
  first_name?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  image_key?: InputMaybe<Scalars['String']['input']>;
  integration?: InputMaybe<Integration_Obj_Rel_Insert_Input>;
  integration_id?: InputMaybe<Scalars['Int']['input']>;
  is_placeholder?: InputMaybe<Scalars['Boolean']['input']>;
  last_name?: InputMaybe<Scalars['String']['input']>;
  references?: InputMaybe<Scalars['jsonb']['input']>;
  remote_id?: InputMaybe<Scalars['String']['input']>;
  sync?: InputMaybe<Scalars['Boolean']['input']>;
  tags?: InputMaybe<Scalars['_text']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** columns and relationships of "ext_person_link" */
export type Ext_Person_Link = {
  __typename?: 'ext_person_link';
  /** An object relationship */
  account: Accounts;
  account_id: Scalars['Int']['output'];
  active: Scalars['Boolean']['output'];
  created_at: Scalars['timestamp']['output'];
  created_by: Scalars['String']['output'];
  /** An object relationship */
  ext_person?: Maybe<Ext_Person>;
  ext_person_id: Scalars['Int']['output'];
  note: Scalars['String']['output'];
  /** An object relationship */
  person?: Maybe<People>;
  person_id: Scalars['Int']['output'];
  updated_at: Scalars['timestamp']['output'];
};

/** aggregated selection of "ext_person_link" */
export type Ext_Person_Link_Aggregate = {
  __typename?: 'ext_person_link_aggregate';
  aggregate?: Maybe<Ext_Person_Link_Aggregate_Fields>;
  nodes: Array<Ext_Person_Link>;
};

export type Ext_Person_Link_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Ext_Person_Link_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Ext_Person_Link_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Ext_Person_Link_Aggregate_Bool_Exp_Count>;
};

export type Ext_Person_Link_Aggregate_Bool_Exp_Bool_And = {
  arguments: Ext_Person_Link_Select_Column_Ext_Person_Link_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Ext_Person_Link_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Ext_Person_Link_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Ext_Person_Link_Select_Column_Ext_Person_Link_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Ext_Person_Link_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Ext_Person_Link_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Ext_Person_Link_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Ext_Person_Link_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "ext_person_link" */
export type Ext_Person_Link_Aggregate_Fields = {
  __typename?: 'ext_person_link_aggregate_fields';
  avg?: Maybe<Ext_Person_Link_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Ext_Person_Link_Max_Fields>;
  min?: Maybe<Ext_Person_Link_Min_Fields>;
  stddev?: Maybe<Ext_Person_Link_Stddev_Fields>;
  stddev_pop?: Maybe<Ext_Person_Link_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Ext_Person_Link_Stddev_Samp_Fields>;
  sum?: Maybe<Ext_Person_Link_Sum_Fields>;
  var_pop?: Maybe<Ext_Person_Link_Var_Pop_Fields>;
  var_samp?: Maybe<Ext_Person_Link_Var_Samp_Fields>;
  variance?: Maybe<Ext_Person_Link_Variance_Fields>;
};


/** aggregate fields of "ext_person_link" */
export type Ext_Person_Link_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Ext_Person_Link_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "ext_person_link" */
export type Ext_Person_Link_Aggregate_Order_By = {
  avg?: InputMaybe<Ext_Person_Link_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Ext_Person_Link_Max_Order_By>;
  min?: InputMaybe<Ext_Person_Link_Min_Order_By>;
  stddev?: InputMaybe<Ext_Person_Link_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Ext_Person_Link_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Ext_Person_Link_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Ext_Person_Link_Sum_Order_By>;
  var_pop?: InputMaybe<Ext_Person_Link_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Ext_Person_Link_Var_Samp_Order_By>;
  variance?: InputMaybe<Ext_Person_Link_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "ext_person_link" */
export type Ext_Person_Link_Arr_Rel_Insert_Input = {
  data: Array<Ext_Person_Link_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Ext_Person_Link_On_Conflict>;
};

/** aggregate avg on columns */
export type Ext_Person_Link_Avg_Fields = {
  __typename?: 'ext_person_link_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  ext_person_id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "ext_person_link" */
export type Ext_Person_Link_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  ext_person_id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "ext_person_link". All fields are combined with a logical 'AND'. */
export type Ext_Person_Link_Bool_Exp = {
  _and?: InputMaybe<Array<Ext_Person_Link_Bool_Exp>>;
  _not?: InputMaybe<Ext_Person_Link_Bool_Exp>;
  _or?: InputMaybe<Array<Ext_Person_Link_Bool_Exp>>;
  account?: InputMaybe<Accounts_Bool_Exp>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  active?: InputMaybe<Boolean_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  created_by?: InputMaybe<String_Comparison_Exp>;
  ext_person?: InputMaybe<Ext_Person_Bool_Exp>;
  ext_person_id?: InputMaybe<Int_Comparison_Exp>;
  note?: InputMaybe<String_Comparison_Exp>;
  person?: InputMaybe<People_Bool_Exp>;
  person_id?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "ext_person_link" */
export enum Ext_Person_Link_Constraint {
  /** unique or primary key constraint on columns "ext_person_id", "person_id" */
  ExtPersonLinkPkey = 'ext_person_link_pkey',
  /** unique or primary key constraint on columns "ext_person_id", "account_id", "person_id" */
  ExtPersonLinkTenant = 'ext_person_link_tenant'
}

/** input type for incrementing numeric columns in table "ext_person_link" */
export type Ext_Person_Link_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  ext_person_id?: InputMaybe<Scalars['Int']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "ext_person_link" */
export type Ext_Person_Link_Insert_Input = {
  account?: InputMaybe<Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['Int']['input']>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  created_by?: InputMaybe<Scalars['String']['input']>;
  ext_person?: InputMaybe<Ext_Person_Obj_Rel_Insert_Input>;
  ext_person_id?: InputMaybe<Scalars['Int']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  person?: InputMaybe<People_Obj_Rel_Insert_Input>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Ext_Person_Link_Max_Fields = {
  __typename?: 'ext_person_link_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  created_by?: Maybe<Scalars['String']['output']>;
  ext_person_id?: Maybe<Scalars['Int']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "ext_person_link" */
export type Ext_Person_Link_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  created_by?: InputMaybe<Order_By>;
  ext_person_id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Ext_Person_Link_Min_Fields = {
  __typename?: 'ext_person_link_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  created_by?: Maybe<Scalars['String']['output']>;
  ext_person_id?: Maybe<Scalars['Int']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "ext_person_link" */
export type Ext_Person_Link_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  created_by?: InputMaybe<Order_By>;
  ext_person_id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "ext_person_link" */
export type Ext_Person_Link_Mutation_Response = {
  __typename?: 'ext_person_link_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Ext_Person_Link>;
};

/** on_conflict condition type for table "ext_person_link" */
export type Ext_Person_Link_On_Conflict = {
  constraint: Ext_Person_Link_Constraint;
  update_columns?: Array<Ext_Person_Link_Update_Column>;
  where?: InputMaybe<Ext_Person_Link_Bool_Exp>;
};

/** Ordering options when selecting data from "ext_person_link". */
export type Ext_Person_Link_Order_By = {
  account?: InputMaybe<Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  active?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  created_by?: InputMaybe<Order_By>;
  ext_person?: InputMaybe<Ext_Person_Order_By>;
  ext_person_id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  person?: InputMaybe<People_Order_By>;
  person_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: ext_person_link */
export type Ext_Person_Link_Pk_Columns_Input = {
  ext_person_id: Scalars['Int']['input'];
  person_id: Scalars['Int']['input'];
};

/** select columns of table "ext_person_link" */
export enum Ext_Person_Link_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Active = 'active',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CreatedBy = 'created_by',
  /** column name */
  ExtPersonId = 'ext_person_id',
  /** column name */
  Note = 'note',
  /** column name */
  PersonId = 'person_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** select "ext_person_link_aggregate_bool_exp_bool_and_arguments_columns" columns of table "ext_person_link" */
export enum Ext_Person_Link_Select_Column_Ext_Person_Link_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  Active = 'active'
}

/** select "ext_person_link_aggregate_bool_exp_bool_or_arguments_columns" columns of table "ext_person_link" */
export enum Ext_Person_Link_Select_Column_Ext_Person_Link_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  Active = 'active'
}

/** input type for updating data in table "ext_person_link" */
export type Ext_Person_Link_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  created_by?: InputMaybe<Scalars['String']['input']>;
  ext_person_id?: InputMaybe<Scalars['Int']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Ext_Person_Link_Stddev_Fields = {
  __typename?: 'ext_person_link_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  ext_person_id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "ext_person_link" */
export type Ext_Person_Link_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  ext_person_id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Ext_Person_Link_Stddev_Pop_Fields = {
  __typename?: 'ext_person_link_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  ext_person_id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "ext_person_link" */
export type Ext_Person_Link_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  ext_person_id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Ext_Person_Link_Stddev_Samp_Fields = {
  __typename?: 'ext_person_link_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  ext_person_id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "ext_person_link" */
export type Ext_Person_Link_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  ext_person_id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "ext_person_link" */
export type Ext_Person_Link_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Ext_Person_Link_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Ext_Person_Link_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  created_by?: InputMaybe<Scalars['String']['input']>;
  ext_person_id?: InputMaybe<Scalars['Int']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Ext_Person_Link_Sum_Fields = {
  __typename?: 'ext_person_link_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  ext_person_id?: Maybe<Scalars['Int']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "ext_person_link" */
export type Ext_Person_Link_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  ext_person_id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
};

/** update columns of table "ext_person_link" */
export enum Ext_Person_Link_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Active = 'active',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CreatedBy = 'created_by',
  /** column name */
  ExtPersonId = 'ext_person_id',
  /** column name */
  Note = 'note',
  /** column name */
  PersonId = 'person_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Ext_Person_Link_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Ext_Person_Link_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Ext_Person_Link_Set_Input>;
  /** filter the rows which have to be updated */
  where: Ext_Person_Link_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Ext_Person_Link_Var_Pop_Fields = {
  __typename?: 'ext_person_link_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  ext_person_id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "ext_person_link" */
export type Ext_Person_Link_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  ext_person_id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Ext_Person_Link_Var_Samp_Fields = {
  __typename?: 'ext_person_link_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  ext_person_id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "ext_person_link" */
export type Ext_Person_Link_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  ext_person_id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Ext_Person_Link_Variance_Fields = {
  __typename?: 'ext_person_link_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  ext_person_id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "ext_person_link" */
export type Ext_Person_Link_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  ext_person_id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
};

/** aggregate max on columns */
export type Ext_Person_Max_Fields = {
  __typename?: 'ext_person_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  ext_team_id?: Maybe<Scalars['Int']['output']>;
  external_id?: Maybe<Scalars['String']['output']>;
  first_name?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  image_key?: Maybe<Scalars['String']['output']>;
  integration_id?: Maybe<Scalars['Int']['output']>;
  last_name?: Maybe<Scalars['String']['output']>;
  remote_id?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "ext_person" */
export type Ext_Person_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  ext_team_id?: InputMaybe<Order_By>;
  external_id?: InputMaybe<Order_By>;
  first_name?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_key?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
  last_name?: InputMaybe<Order_By>;
  remote_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Ext_Person_Min_Fields = {
  __typename?: 'ext_person_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  ext_team_id?: Maybe<Scalars['Int']['output']>;
  external_id?: Maybe<Scalars['String']['output']>;
  first_name?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  image_key?: Maybe<Scalars['String']['output']>;
  integration_id?: Maybe<Scalars['Int']['output']>;
  last_name?: Maybe<Scalars['String']['output']>;
  remote_id?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "ext_person" */
export type Ext_Person_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  ext_team_id?: InputMaybe<Order_By>;
  external_id?: InputMaybe<Order_By>;
  first_name?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_key?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
  last_name?: InputMaybe<Order_By>;
  remote_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "ext_person" */
export type Ext_Person_Mutation_Response = {
  __typename?: 'ext_person_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Ext_Person>;
};

/** input type for inserting object relation for remote table "ext_person" */
export type Ext_Person_Obj_Rel_Insert_Input = {
  data: Ext_Person_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Ext_Person_On_Conflict>;
};

/** on_conflict condition type for table "ext_person" */
export type Ext_Person_On_Conflict = {
  constraint: Ext_Person_Constraint;
  update_columns?: Array<Ext_Person_Update_Column>;
  where?: InputMaybe<Ext_Person_Bool_Exp>;
};

/** Ordering options when selecting data from "ext_person". */
export type Ext_Person_Order_By = {
  account?: InputMaybe<Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  active?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  ext_current_contract_aggregate?: InputMaybe<Ext_Contract_Aggregate_Order_By>;
  ext_person_links_aggregate?: InputMaybe<Ext_Person_Link_Aggregate_Order_By>;
  ext_team?: InputMaybe<Ext_Team_Order_By>;
  ext_team_id?: InputMaybe<Order_By>;
  external_id?: InputMaybe<Order_By>;
  first_name?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_key?: InputMaybe<Order_By>;
  integration?: InputMaybe<Integration_Order_By>;
  integration_id?: InputMaybe<Order_By>;
  is_placeholder?: InputMaybe<Order_By>;
  last_name?: InputMaybe<Order_By>;
  references?: InputMaybe<Order_By>;
  remote_id?: InputMaybe<Order_By>;
  sync?: InputMaybe<Order_By>;
  tags?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: ext_person */
export type Ext_Person_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Ext_Person_Prepend_Input = {
  references?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "ext_person" */
export enum Ext_Person_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Active = 'active',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Deleted = 'deleted',
  /** column name */
  Email = 'email',
  /** column name */
  ExtTeamId = 'ext_team_id',
  /** column name */
  ExternalId = 'external_id',
  /** column name */
  FirstName = 'first_name',
  /** column name */
  Id = 'id',
  /** column name */
  ImageKey = 'image_key',
  /** column name */
  IntegrationId = 'integration_id',
  /** column name */
  IsPlaceholder = 'is_placeholder',
  /** column name */
  LastName = 'last_name',
  /** column name */
  References = 'references',
  /** column name */
  RemoteId = 'remote_id',
  /** column name */
  Sync = 'sync',
  /** column name */
  Tags = 'tags',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** select "ext_person_aggregate_bool_exp_bool_and_arguments_columns" columns of table "ext_person" */
export enum Ext_Person_Select_Column_Ext_Person_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  Active = 'active',
  /** column name */
  Deleted = 'deleted',
  /** column name */
  IsPlaceholder = 'is_placeholder',
  /** column name */
  Sync = 'sync'
}

/** select "ext_person_aggregate_bool_exp_bool_or_arguments_columns" columns of table "ext_person" */
export enum Ext_Person_Select_Column_Ext_Person_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  Active = 'active',
  /** column name */
  Deleted = 'deleted',
  /** column name */
  IsPlaceholder = 'is_placeholder',
  /** column name */
  Sync = 'sync'
}

/** input type for updating data in table "ext_person" */
export type Ext_Person_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  ext_team_id?: InputMaybe<Scalars['Int']['input']>;
  external_id?: InputMaybe<Scalars['String']['input']>;
  first_name?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  image_key?: InputMaybe<Scalars['String']['input']>;
  integration_id?: InputMaybe<Scalars['Int']['input']>;
  is_placeholder?: InputMaybe<Scalars['Boolean']['input']>;
  last_name?: InputMaybe<Scalars['String']['input']>;
  references?: InputMaybe<Scalars['jsonb']['input']>;
  remote_id?: InputMaybe<Scalars['String']['input']>;
  sync?: InputMaybe<Scalars['Boolean']['input']>;
  tags?: InputMaybe<Scalars['_text']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Ext_Person_Stddev_Fields = {
  __typename?: 'ext_person_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  ext_team_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "ext_person" */
export type Ext_Person_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  ext_team_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Ext_Person_Stddev_Pop_Fields = {
  __typename?: 'ext_person_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  ext_team_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "ext_person" */
export type Ext_Person_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  ext_team_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Ext_Person_Stddev_Samp_Fields = {
  __typename?: 'ext_person_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  ext_team_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "ext_person" */
export type Ext_Person_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  ext_team_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "ext_person" */
export type Ext_Person_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Ext_Person_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Ext_Person_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  ext_team_id?: InputMaybe<Scalars['Int']['input']>;
  external_id?: InputMaybe<Scalars['String']['input']>;
  first_name?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  image_key?: InputMaybe<Scalars['String']['input']>;
  integration_id?: InputMaybe<Scalars['Int']['input']>;
  is_placeholder?: InputMaybe<Scalars['Boolean']['input']>;
  last_name?: InputMaybe<Scalars['String']['input']>;
  references?: InputMaybe<Scalars['jsonb']['input']>;
  remote_id?: InputMaybe<Scalars['String']['input']>;
  sync?: InputMaybe<Scalars['Boolean']['input']>;
  tags?: InputMaybe<Scalars['_text']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Ext_Person_Sum_Fields = {
  __typename?: 'ext_person_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  ext_team_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  integration_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "ext_person" */
export type Ext_Person_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  ext_team_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
};

/** update columns of table "ext_person" */
export enum Ext_Person_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Active = 'active',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Deleted = 'deleted',
  /** column name */
  Email = 'email',
  /** column name */
  ExtTeamId = 'ext_team_id',
  /** column name */
  ExternalId = 'external_id',
  /** column name */
  FirstName = 'first_name',
  /** column name */
  Id = 'id',
  /** column name */
  ImageKey = 'image_key',
  /** column name */
  IntegrationId = 'integration_id',
  /** column name */
  IsPlaceholder = 'is_placeholder',
  /** column name */
  LastName = 'last_name',
  /** column name */
  References = 'references',
  /** column name */
  RemoteId = 'remote_id',
  /** column name */
  Sync = 'sync',
  /** column name */
  Tags = 'tags',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Ext_Person_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Ext_Person_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Ext_Person_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Ext_Person_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Ext_Person_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Ext_Person_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Ext_Person_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Ext_Person_Set_Input>;
  /** filter the rows which have to be updated */
  where: Ext_Person_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Ext_Person_Var_Pop_Fields = {
  __typename?: 'ext_person_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  ext_team_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "ext_person" */
export type Ext_Person_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  ext_team_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Ext_Person_Var_Samp_Fields = {
  __typename?: 'ext_person_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  ext_team_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "ext_person" */
export type Ext_Person_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  ext_team_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Ext_Person_Variance_Fields = {
  __typename?: 'ext_person_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  ext_team_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "ext_person" */
export type Ext_Person_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  ext_team_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "ext_role" */
export type Ext_Role = {
  __typename?: 'ext_role';
  account_id: Scalars['Int']['output'];
  active: Scalars['Boolean']['output'];
  created_at: Scalars['timestamp']['output'];
  default_hour_cost: Scalars['numeric']['output'];
  deleted: Scalars['Boolean']['output'];
  external_id: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  integration_id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  remote_id?: Maybe<Scalars['String']['output']>;
  sync: Scalars['Boolean']['output'];
  updated_at: Scalars['timestamp']['output'];
};

/** aggregated selection of "ext_role" */
export type Ext_Role_Aggregate = {
  __typename?: 'ext_role_aggregate';
  aggregate?: Maybe<Ext_Role_Aggregate_Fields>;
  nodes: Array<Ext_Role>;
};

/** aggregate fields of "ext_role" */
export type Ext_Role_Aggregate_Fields = {
  __typename?: 'ext_role_aggregate_fields';
  avg?: Maybe<Ext_Role_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Ext_Role_Max_Fields>;
  min?: Maybe<Ext_Role_Min_Fields>;
  stddev?: Maybe<Ext_Role_Stddev_Fields>;
  stddev_pop?: Maybe<Ext_Role_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Ext_Role_Stddev_Samp_Fields>;
  sum?: Maybe<Ext_Role_Sum_Fields>;
  var_pop?: Maybe<Ext_Role_Var_Pop_Fields>;
  var_samp?: Maybe<Ext_Role_Var_Samp_Fields>;
  variance?: Maybe<Ext_Role_Variance_Fields>;
};


/** aggregate fields of "ext_role" */
export type Ext_Role_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Ext_Role_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Ext_Role_Avg_Fields = {
  __typename?: 'ext_role_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  default_hour_cost?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "ext_role". All fields are combined with a logical 'AND'. */
export type Ext_Role_Bool_Exp = {
  _and?: InputMaybe<Array<Ext_Role_Bool_Exp>>;
  _not?: InputMaybe<Ext_Role_Bool_Exp>;
  _or?: InputMaybe<Array<Ext_Role_Bool_Exp>>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  active?: InputMaybe<Boolean_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  default_hour_cost?: InputMaybe<Numeric_Comparison_Exp>;
  deleted?: InputMaybe<Boolean_Comparison_Exp>;
  external_id?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  integration_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  remote_id?: InputMaybe<String_Comparison_Exp>;
  sync?: InputMaybe<Boolean_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "ext_role" */
export enum Ext_Role_Constraint {
  /** unique or primary key constraint on columns "account_id", "external_id", "integration_id" */
  ExtRoleExternalTenant = 'ext_role_external_tenant',
  /** unique or primary key constraint on columns "id" */
  ExtRolePkey = 'ext_role_pkey',
  /** unique or primary key constraint on columns "account_id", "id" */
  ExtRoleTenant = 'ext_role_tenant'
}

/** input type for incrementing numeric columns in table "ext_role" */
export type Ext_Role_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  default_hour_cost?: InputMaybe<Scalars['numeric']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  integration_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "ext_role" */
export type Ext_Role_Insert_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  default_hour_cost?: InputMaybe<Scalars['numeric']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  external_id?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  integration_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  remote_id?: InputMaybe<Scalars['String']['input']>;
  sync?: InputMaybe<Scalars['Boolean']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Ext_Role_Max_Fields = {
  __typename?: 'ext_role_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  default_hour_cost?: Maybe<Scalars['numeric']['output']>;
  external_id?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  integration_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  remote_id?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** aggregate min on columns */
export type Ext_Role_Min_Fields = {
  __typename?: 'ext_role_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  default_hour_cost?: Maybe<Scalars['numeric']['output']>;
  external_id?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  integration_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  remote_id?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** response of any mutation on the table "ext_role" */
export type Ext_Role_Mutation_Response = {
  __typename?: 'ext_role_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Ext_Role>;
};

/** input type for inserting object relation for remote table "ext_role" */
export type Ext_Role_Obj_Rel_Insert_Input = {
  data: Ext_Role_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Ext_Role_On_Conflict>;
};

/** on_conflict condition type for table "ext_role" */
export type Ext_Role_On_Conflict = {
  constraint: Ext_Role_Constraint;
  update_columns?: Array<Ext_Role_Update_Column>;
  where?: InputMaybe<Ext_Role_Bool_Exp>;
};

/** Ordering options when selecting data from "ext_role". */
export type Ext_Role_Order_By = {
  account_id?: InputMaybe<Order_By>;
  active?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  default_hour_cost?: InputMaybe<Order_By>;
  deleted?: InputMaybe<Order_By>;
  external_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  remote_id?: InputMaybe<Order_By>;
  sync?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: ext_role */
export type Ext_Role_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "ext_role" */
export enum Ext_Role_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Active = 'active',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DefaultHourCost = 'default_hour_cost',
  /** column name */
  Deleted = 'deleted',
  /** column name */
  ExternalId = 'external_id',
  /** column name */
  Id = 'id',
  /** column name */
  IntegrationId = 'integration_id',
  /** column name */
  Name = 'name',
  /** column name */
  RemoteId = 'remote_id',
  /** column name */
  Sync = 'sync',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "ext_role" */
export type Ext_Role_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  default_hour_cost?: InputMaybe<Scalars['numeric']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  external_id?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  integration_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  remote_id?: InputMaybe<Scalars['String']['input']>;
  sync?: InputMaybe<Scalars['Boolean']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Ext_Role_Stddev_Fields = {
  __typename?: 'ext_role_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  default_hour_cost?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Ext_Role_Stddev_Pop_Fields = {
  __typename?: 'ext_role_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  default_hour_cost?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Ext_Role_Stddev_Samp_Fields = {
  __typename?: 'ext_role_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  default_hour_cost?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "ext_role" */
export type Ext_Role_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Ext_Role_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Ext_Role_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  default_hour_cost?: InputMaybe<Scalars['numeric']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  external_id?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  integration_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  remote_id?: InputMaybe<Scalars['String']['input']>;
  sync?: InputMaybe<Scalars['Boolean']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Ext_Role_Sum_Fields = {
  __typename?: 'ext_role_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  default_hour_cost?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  integration_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "ext_role" */
export enum Ext_Role_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Active = 'active',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DefaultHourCost = 'default_hour_cost',
  /** column name */
  Deleted = 'deleted',
  /** column name */
  ExternalId = 'external_id',
  /** column name */
  Id = 'id',
  /** column name */
  IntegrationId = 'integration_id',
  /** column name */
  Name = 'name',
  /** column name */
  RemoteId = 'remote_id',
  /** column name */
  Sync = 'sync',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Ext_Role_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Ext_Role_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Ext_Role_Set_Input>;
  /** filter the rows which have to be updated */
  where: Ext_Role_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Ext_Role_Var_Pop_Fields = {
  __typename?: 'ext_role_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  default_hour_cost?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Ext_Role_Var_Samp_Fields = {
  __typename?: 'ext_role_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  default_hour_cost?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Ext_Role_Variance_Fields = {
  __typename?: 'ext_role_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  default_hour_cost?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "ext_team" */
export type Ext_Team = {
  __typename?: 'ext_team';
  account_id: Scalars['Int']['output'];
  created_at: Scalars['timestamp']['output'];
  deleted: Scalars['Boolean']['output'];
  external_id: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  integration_id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  remote_id?: Maybe<Scalars['String']['output']>;
  sync: Scalars['Boolean']['output'];
  updated_at: Scalars['timestamp']['output'];
};

/** aggregated selection of "ext_team" */
export type Ext_Team_Aggregate = {
  __typename?: 'ext_team_aggregate';
  aggregate?: Maybe<Ext_Team_Aggregate_Fields>;
  nodes: Array<Ext_Team>;
};

/** aggregate fields of "ext_team" */
export type Ext_Team_Aggregate_Fields = {
  __typename?: 'ext_team_aggregate_fields';
  avg?: Maybe<Ext_Team_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Ext_Team_Max_Fields>;
  min?: Maybe<Ext_Team_Min_Fields>;
  stddev?: Maybe<Ext_Team_Stddev_Fields>;
  stddev_pop?: Maybe<Ext_Team_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Ext_Team_Stddev_Samp_Fields>;
  sum?: Maybe<Ext_Team_Sum_Fields>;
  var_pop?: Maybe<Ext_Team_Var_Pop_Fields>;
  var_samp?: Maybe<Ext_Team_Var_Samp_Fields>;
  variance?: Maybe<Ext_Team_Variance_Fields>;
};


/** aggregate fields of "ext_team" */
export type Ext_Team_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Ext_Team_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Ext_Team_Avg_Fields = {
  __typename?: 'ext_team_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "ext_team". All fields are combined with a logical 'AND'. */
export type Ext_Team_Bool_Exp = {
  _and?: InputMaybe<Array<Ext_Team_Bool_Exp>>;
  _not?: InputMaybe<Ext_Team_Bool_Exp>;
  _or?: InputMaybe<Array<Ext_Team_Bool_Exp>>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  deleted?: InputMaybe<Boolean_Comparison_Exp>;
  external_id?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  integration_id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  remote_id?: InputMaybe<String_Comparison_Exp>;
  sync?: InputMaybe<Boolean_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "ext_team" */
export enum Ext_Team_Constraint {
  /** unique or primary key constraint on columns "account_id", "external_id", "integration_id" */
  ExtTeamExternalTenant = 'ext_team_external_tenant',
  /** unique or primary key constraint on columns "id" */
  ExtTeamPkey = 'ext_team_pkey',
  /** unique or primary key constraint on columns "account_id", "id" */
  ExtTeamTenant = 'ext_team_tenant'
}

/** input type for incrementing numeric columns in table "ext_team" */
export type Ext_Team_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  integration_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "ext_team" */
export type Ext_Team_Insert_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  external_id?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  integration_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  remote_id?: InputMaybe<Scalars['String']['input']>;
  sync?: InputMaybe<Scalars['Boolean']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Ext_Team_Max_Fields = {
  __typename?: 'ext_team_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  external_id?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  integration_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  remote_id?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** aggregate min on columns */
export type Ext_Team_Min_Fields = {
  __typename?: 'ext_team_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  external_id?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  integration_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  remote_id?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** response of any mutation on the table "ext_team" */
export type Ext_Team_Mutation_Response = {
  __typename?: 'ext_team_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Ext_Team>;
};

/** input type for inserting object relation for remote table "ext_team" */
export type Ext_Team_Obj_Rel_Insert_Input = {
  data: Ext_Team_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Ext_Team_On_Conflict>;
};

/** on_conflict condition type for table "ext_team" */
export type Ext_Team_On_Conflict = {
  constraint: Ext_Team_Constraint;
  update_columns?: Array<Ext_Team_Update_Column>;
  where?: InputMaybe<Ext_Team_Bool_Exp>;
};

/** Ordering options when selecting data from "ext_team". */
export type Ext_Team_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted?: InputMaybe<Order_By>;
  external_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  remote_id?: InputMaybe<Order_By>;
  sync?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: ext_team */
export type Ext_Team_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "ext_team" */
export enum Ext_Team_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Deleted = 'deleted',
  /** column name */
  ExternalId = 'external_id',
  /** column name */
  Id = 'id',
  /** column name */
  IntegrationId = 'integration_id',
  /** column name */
  Name = 'name',
  /** column name */
  RemoteId = 'remote_id',
  /** column name */
  Sync = 'sync',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "ext_team" */
export type Ext_Team_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  external_id?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  integration_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  remote_id?: InputMaybe<Scalars['String']['input']>;
  sync?: InputMaybe<Scalars['Boolean']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Ext_Team_Stddev_Fields = {
  __typename?: 'ext_team_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Ext_Team_Stddev_Pop_Fields = {
  __typename?: 'ext_team_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Ext_Team_Stddev_Samp_Fields = {
  __typename?: 'ext_team_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "ext_team" */
export type Ext_Team_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Ext_Team_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Ext_Team_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  external_id?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  integration_id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  remote_id?: InputMaybe<Scalars['String']['input']>;
  sync?: InputMaybe<Scalars['Boolean']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Ext_Team_Sum_Fields = {
  __typename?: 'ext_team_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  integration_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "ext_team" */
export enum Ext_Team_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Deleted = 'deleted',
  /** column name */
  ExternalId = 'external_id',
  /** column name */
  Id = 'id',
  /** column name */
  IntegrationId = 'integration_id',
  /** column name */
  Name = 'name',
  /** column name */
  RemoteId = 'remote_id',
  /** column name */
  Sync = 'sync',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Ext_Team_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Ext_Team_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Ext_Team_Set_Input>;
  /** filter the rows which have to be updated */
  where: Ext_Team_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Ext_Team_Var_Pop_Fields = {
  __typename?: 'ext_team_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Ext_Team_Var_Samp_Fields = {
  __typename?: 'ext_team_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Ext_Team_Variance_Fields = {
  __typename?: 'ext_team_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "ext_time_off" */
export type Ext_Time_Off = {
  __typename?: 'ext_time_off';
  /** An object relationship */
  account: Accounts;
  account_id: Scalars['Int']['output'];
  created_at: Scalars['timestamp']['output'];
  deleted: Scalars['Boolean']['output'];
  end_date: Scalars['timestamp']['output'];
  /** An object relationship */
  ext_person?: Maybe<Ext_Person>;
  ext_person_id: Scalars['Int']['output'];
  /** An array relationship */
  ext_time_off_links: Array<Ext_Time_Off_Link>;
  /** An aggregate relationship */
  ext_time_off_links_aggregate: Ext_Time_Off_Link_Aggregate;
  external_id: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  integration?: Maybe<Integration>;
  integration_id: Scalars['Int']['output'];
  leave_type: Scalars['String']['output'];
  note?: Maybe<Scalars['String']['output']>;
  remote_id?: Maybe<Scalars['String']['output']>;
  start_date: Scalars['timestamp']['output'];
  sync: Scalars['Boolean']['output'];
  updated_at: Scalars['timestamp']['output'];
};


/** columns and relationships of "ext_time_off" */
export type Ext_Time_OffExt_Time_Off_LinksArgs = {
  distinct_on?: InputMaybe<Array<Ext_Time_Off_Link_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Time_Off_Link_Order_By>>;
  where?: InputMaybe<Ext_Time_Off_Link_Bool_Exp>;
};


/** columns and relationships of "ext_time_off" */
export type Ext_Time_OffExt_Time_Off_Links_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ext_Time_Off_Link_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Time_Off_Link_Order_By>>;
  where?: InputMaybe<Ext_Time_Off_Link_Bool_Exp>;
};

/** aggregated selection of "ext_time_off" */
export type Ext_Time_Off_Aggregate = {
  __typename?: 'ext_time_off_aggregate';
  aggregate?: Maybe<Ext_Time_Off_Aggregate_Fields>;
  nodes: Array<Ext_Time_Off>;
};

export type Ext_Time_Off_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Ext_Time_Off_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Ext_Time_Off_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Ext_Time_Off_Aggregate_Bool_Exp_Count>;
};

export type Ext_Time_Off_Aggregate_Bool_Exp_Bool_And = {
  arguments: Ext_Time_Off_Select_Column_Ext_Time_Off_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Ext_Time_Off_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Ext_Time_Off_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Ext_Time_Off_Select_Column_Ext_Time_Off_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Ext_Time_Off_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Ext_Time_Off_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Ext_Time_Off_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Ext_Time_Off_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "ext_time_off" */
export type Ext_Time_Off_Aggregate_Fields = {
  __typename?: 'ext_time_off_aggregate_fields';
  avg?: Maybe<Ext_Time_Off_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Ext_Time_Off_Max_Fields>;
  min?: Maybe<Ext_Time_Off_Min_Fields>;
  stddev?: Maybe<Ext_Time_Off_Stddev_Fields>;
  stddev_pop?: Maybe<Ext_Time_Off_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Ext_Time_Off_Stddev_Samp_Fields>;
  sum?: Maybe<Ext_Time_Off_Sum_Fields>;
  var_pop?: Maybe<Ext_Time_Off_Var_Pop_Fields>;
  var_samp?: Maybe<Ext_Time_Off_Var_Samp_Fields>;
  variance?: Maybe<Ext_Time_Off_Variance_Fields>;
};


/** aggregate fields of "ext_time_off" */
export type Ext_Time_Off_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Ext_Time_Off_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "ext_time_off" */
export type Ext_Time_Off_Aggregate_Order_By = {
  avg?: InputMaybe<Ext_Time_Off_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Ext_Time_Off_Max_Order_By>;
  min?: InputMaybe<Ext_Time_Off_Min_Order_By>;
  stddev?: InputMaybe<Ext_Time_Off_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Ext_Time_Off_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Ext_Time_Off_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Ext_Time_Off_Sum_Order_By>;
  var_pop?: InputMaybe<Ext_Time_Off_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Ext_Time_Off_Var_Samp_Order_By>;
  variance?: InputMaybe<Ext_Time_Off_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "ext_time_off" */
export type Ext_Time_Off_Arr_Rel_Insert_Input = {
  data: Array<Ext_Time_Off_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Ext_Time_Off_On_Conflict>;
};

/** aggregate avg on columns */
export type Ext_Time_Off_Avg_Fields = {
  __typename?: 'ext_time_off_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  ext_person_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "ext_time_off" */
export type Ext_Time_Off_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  ext_person_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "ext_time_off". All fields are combined with a logical 'AND'. */
export type Ext_Time_Off_Bool_Exp = {
  _and?: InputMaybe<Array<Ext_Time_Off_Bool_Exp>>;
  _not?: InputMaybe<Ext_Time_Off_Bool_Exp>;
  _or?: InputMaybe<Array<Ext_Time_Off_Bool_Exp>>;
  account?: InputMaybe<Accounts_Bool_Exp>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  deleted?: InputMaybe<Boolean_Comparison_Exp>;
  end_date?: InputMaybe<Timestamp_Comparison_Exp>;
  ext_person?: InputMaybe<Ext_Person_Bool_Exp>;
  ext_person_id?: InputMaybe<Int_Comparison_Exp>;
  ext_time_off_links?: InputMaybe<Ext_Time_Off_Link_Bool_Exp>;
  ext_time_off_links_aggregate?: InputMaybe<Ext_Time_Off_Link_Aggregate_Bool_Exp>;
  external_id?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  integration?: InputMaybe<Integration_Bool_Exp>;
  integration_id?: InputMaybe<Int_Comparison_Exp>;
  leave_type?: InputMaybe<String_Comparison_Exp>;
  note?: InputMaybe<String_Comparison_Exp>;
  remote_id?: InputMaybe<String_Comparison_Exp>;
  start_date?: InputMaybe<Timestamp_Comparison_Exp>;
  sync?: InputMaybe<Boolean_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "ext_time_off" */
export enum Ext_Time_Off_Constraint {
  /** unique or primary key constraint on columns "account_id", "external_id", "integration_id" */
  ExtTimeOffExternalTenant = 'ext_time_off_external_tenant',
  /** unique or primary key constraint on columns "id" */
  ExtTimeOffPkey = 'ext_time_off_pkey',
  /** unique or primary key constraint on columns "account_id", "id" */
  ExtTimeOffTenant = 'ext_time_off_tenant'
}

/** input type for incrementing numeric columns in table "ext_time_off" */
export type Ext_Time_Off_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  ext_person_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  integration_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "ext_time_off" */
export type Ext_Time_Off_Insert_Input = {
  account?: InputMaybe<Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  end_date?: InputMaybe<Scalars['timestamp']['input']>;
  ext_person?: InputMaybe<Ext_Person_Obj_Rel_Insert_Input>;
  ext_person_id?: InputMaybe<Scalars['Int']['input']>;
  ext_time_off_links?: InputMaybe<Ext_Time_Off_Link_Arr_Rel_Insert_Input>;
  external_id?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  integration?: InputMaybe<Integration_Obj_Rel_Insert_Input>;
  integration_id?: InputMaybe<Scalars['Int']['input']>;
  leave_type?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  remote_id?: InputMaybe<Scalars['String']['input']>;
  start_date?: InputMaybe<Scalars['timestamp']['input']>;
  sync?: InputMaybe<Scalars['Boolean']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** columns and relationships of "ext_time_off_link" */
export type Ext_Time_Off_Link = {
  __typename?: 'ext_time_off_link';
  /** An object relationship */
  account: Accounts;
  account_id: Scalars['Int']['output'];
  active: Scalars['Boolean']['output'];
  created_at: Scalars['timestamp']['output'];
  created_by: Scalars['String']['output'];
  /** An object relationship */
  ext_time_off?: Maybe<Ext_Time_Off>;
  ext_time_off_id: Scalars['Int']['output'];
  note: Scalars['String']['output'];
  /** An object relationship */
  time_off?: Maybe<Time_Offs>;
  time_off_id: Scalars['Int']['output'];
  updated_at: Scalars['timestamp']['output'];
};

/** aggregated selection of "ext_time_off_link" */
export type Ext_Time_Off_Link_Aggregate = {
  __typename?: 'ext_time_off_link_aggregate';
  aggregate?: Maybe<Ext_Time_Off_Link_Aggregate_Fields>;
  nodes: Array<Ext_Time_Off_Link>;
};

export type Ext_Time_Off_Link_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Ext_Time_Off_Link_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Ext_Time_Off_Link_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Ext_Time_Off_Link_Aggregate_Bool_Exp_Count>;
};

export type Ext_Time_Off_Link_Aggregate_Bool_Exp_Bool_And = {
  arguments: Ext_Time_Off_Link_Select_Column_Ext_Time_Off_Link_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Ext_Time_Off_Link_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Ext_Time_Off_Link_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Ext_Time_Off_Link_Select_Column_Ext_Time_Off_Link_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Ext_Time_Off_Link_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Ext_Time_Off_Link_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Ext_Time_Off_Link_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Ext_Time_Off_Link_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "ext_time_off_link" */
export type Ext_Time_Off_Link_Aggregate_Fields = {
  __typename?: 'ext_time_off_link_aggregate_fields';
  avg?: Maybe<Ext_Time_Off_Link_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Ext_Time_Off_Link_Max_Fields>;
  min?: Maybe<Ext_Time_Off_Link_Min_Fields>;
  stddev?: Maybe<Ext_Time_Off_Link_Stddev_Fields>;
  stddev_pop?: Maybe<Ext_Time_Off_Link_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Ext_Time_Off_Link_Stddev_Samp_Fields>;
  sum?: Maybe<Ext_Time_Off_Link_Sum_Fields>;
  var_pop?: Maybe<Ext_Time_Off_Link_Var_Pop_Fields>;
  var_samp?: Maybe<Ext_Time_Off_Link_Var_Samp_Fields>;
  variance?: Maybe<Ext_Time_Off_Link_Variance_Fields>;
};


/** aggregate fields of "ext_time_off_link" */
export type Ext_Time_Off_Link_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Ext_Time_Off_Link_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "ext_time_off_link" */
export type Ext_Time_Off_Link_Aggregate_Order_By = {
  avg?: InputMaybe<Ext_Time_Off_Link_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Ext_Time_Off_Link_Max_Order_By>;
  min?: InputMaybe<Ext_Time_Off_Link_Min_Order_By>;
  stddev?: InputMaybe<Ext_Time_Off_Link_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Ext_Time_Off_Link_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Ext_Time_Off_Link_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Ext_Time_Off_Link_Sum_Order_By>;
  var_pop?: InputMaybe<Ext_Time_Off_Link_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Ext_Time_Off_Link_Var_Samp_Order_By>;
  variance?: InputMaybe<Ext_Time_Off_Link_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "ext_time_off_link" */
export type Ext_Time_Off_Link_Arr_Rel_Insert_Input = {
  data: Array<Ext_Time_Off_Link_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Ext_Time_Off_Link_On_Conflict>;
};

/** aggregate avg on columns */
export type Ext_Time_Off_Link_Avg_Fields = {
  __typename?: 'ext_time_off_link_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  ext_time_off_id?: Maybe<Scalars['Float']['output']>;
  time_off_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "ext_time_off_link" */
export type Ext_Time_Off_Link_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  ext_time_off_id?: InputMaybe<Order_By>;
  time_off_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "ext_time_off_link". All fields are combined with a logical 'AND'. */
export type Ext_Time_Off_Link_Bool_Exp = {
  _and?: InputMaybe<Array<Ext_Time_Off_Link_Bool_Exp>>;
  _not?: InputMaybe<Ext_Time_Off_Link_Bool_Exp>;
  _or?: InputMaybe<Array<Ext_Time_Off_Link_Bool_Exp>>;
  account?: InputMaybe<Accounts_Bool_Exp>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  active?: InputMaybe<Boolean_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  created_by?: InputMaybe<String_Comparison_Exp>;
  ext_time_off?: InputMaybe<Ext_Time_Off_Bool_Exp>;
  ext_time_off_id?: InputMaybe<Int_Comparison_Exp>;
  note?: InputMaybe<String_Comparison_Exp>;
  time_off?: InputMaybe<Time_Offs_Bool_Exp>;
  time_off_id?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "ext_time_off_link" */
export enum Ext_Time_Off_Link_Constraint {
  /** unique or primary key constraint on columns "time_off_id", "ext_time_off_id" */
  ExtTimeOffLinkPkey = 'ext_time_off_link_pkey',
  /** unique or primary key constraint on columns "time_off_id", "account_id", "ext_time_off_id" */
  ExtTimeOffLinkTenant = 'ext_time_off_link_tenant'
}

/** input type for incrementing numeric columns in table "ext_time_off_link" */
export type Ext_Time_Off_Link_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  ext_time_off_id?: InputMaybe<Scalars['Int']['input']>;
  time_off_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "ext_time_off_link" */
export type Ext_Time_Off_Link_Insert_Input = {
  account?: InputMaybe<Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['Int']['input']>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  created_by?: InputMaybe<Scalars['String']['input']>;
  ext_time_off?: InputMaybe<Ext_Time_Off_Obj_Rel_Insert_Input>;
  ext_time_off_id?: InputMaybe<Scalars['Int']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  time_off?: InputMaybe<Time_Offs_Obj_Rel_Insert_Input>;
  time_off_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Ext_Time_Off_Link_Max_Fields = {
  __typename?: 'ext_time_off_link_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  created_by?: Maybe<Scalars['String']['output']>;
  ext_time_off_id?: Maybe<Scalars['Int']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  time_off_id?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "ext_time_off_link" */
export type Ext_Time_Off_Link_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  created_by?: InputMaybe<Order_By>;
  ext_time_off_id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  time_off_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Ext_Time_Off_Link_Min_Fields = {
  __typename?: 'ext_time_off_link_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  created_by?: Maybe<Scalars['String']['output']>;
  ext_time_off_id?: Maybe<Scalars['Int']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  time_off_id?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "ext_time_off_link" */
export type Ext_Time_Off_Link_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  created_by?: InputMaybe<Order_By>;
  ext_time_off_id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  time_off_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "ext_time_off_link" */
export type Ext_Time_Off_Link_Mutation_Response = {
  __typename?: 'ext_time_off_link_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Ext_Time_Off_Link>;
};

/** on_conflict condition type for table "ext_time_off_link" */
export type Ext_Time_Off_Link_On_Conflict = {
  constraint: Ext_Time_Off_Link_Constraint;
  update_columns?: Array<Ext_Time_Off_Link_Update_Column>;
  where?: InputMaybe<Ext_Time_Off_Link_Bool_Exp>;
};

/** Ordering options when selecting data from "ext_time_off_link". */
export type Ext_Time_Off_Link_Order_By = {
  account?: InputMaybe<Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  active?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  created_by?: InputMaybe<Order_By>;
  ext_time_off?: InputMaybe<Ext_Time_Off_Order_By>;
  ext_time_off_id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  time_off?: InputMaybe<Time_Offs_Order_By>;
  time_off_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: ext_time_off_link */
export type Ext_Time_Off_Link_Pk_Columns_Input = {
  ext_time_off_id: Scalars['Int']['input'];
  time_off_id: Scalars['Int']['input'];
};

/** select columns of table "ext_time_off_link" */
export enum Ext_Time_Off_Link_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Active = 'active',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CreatedBy = 'created_by',
  /** column name */
  ExtTimeOffId = 'ext_time_off_id',
  /** column name */
  Note = 'note',
  /** column name */
  TimeOffId = 'time_off_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** select "ext_time_off_link_aggregate_bool_exp_bool_and_arguments_columns" columns of table "ext_time_off_link" */
export enum Ext_Time_Off_Link_Select_Column_Ext_Time_Off_Link_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  Active = 'active'
}

/** select "ext_time_off_link_aggregate_bool_exp_bool_or_arguments_columns" columns of table "ext_time_off_link" */
export enum Ext_Time_Off_Link_Select_Column_Ext_Time_Off_Link_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  Active = 'active'
}

/** input type for updating data in table "ext_time_off_link" */
export type Ext_Time_Off_Link_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  created_by?: InputMaybe<Scalars['String']['input']>;
  ext_time_off_id?: InputMaybe<Scalars['Int']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  time_off_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Ext_Time_Off_Link_Stddev_Fields = {
  __typename?: 'ext_time_off_link_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  ext_time_off_id?: Maybe<Scalars['Float']['output']>;
  time_off_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "ext_time_off_link" */
export type Ext_Time_Off_Link_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  ext_time_off_id?: InputMaybe<Order_By>;
  time_off_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Ext_Time_Off_Link_Stddev_Pop_Fields = {
  __typename?: 'ext_time_off_link_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  ext_time_off_id?: Maybe<Scalars['Float']['output']>;
  time_off_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "ext_time_off_link" */
export type Ext_Time_Off_Link_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  ext_time_off_id?: InputMaybe<Order_By>;
  time_off_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Ext_Time_Off_Link_Stddev_Samp_Fields = {
  __typename?: 'ext_time_off_link_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  ext_time_off_id?: Maybe<Scalars['Float']['output']>;
  time_off_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "ext_time_off_link" */
export type Ext_Time_Off_Link_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  ext_time_off_id?: InputMaybe<Order_By>;
  time_off_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "ext_time_off_link" */
export type Ext_Time_Off_Link_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Ext_Time_Off_Link_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Ext_Time_Off_Link_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  created_by?: InputMaybe<Scalars['String']['input']>;
  ext_time_off_id?: InputMaybe<Scalars['Int']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  time_off_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Ext_Time_Off_Link_Sum_Fields = {
  __typename?: 'ext_time_off_link_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  ext_time_off_id?: Maybe<Scalars['Int']['output']>;
  time_off_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "ext_time_off_link" */
export type Ext_Time_Off_Link_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  ext_time_off_id?: InputMaybe<Order_By>;
  time_off_id?: InputMaybe<Order_By>;
};

/** update columns of table "ext_time_off_link" */
export enum Ext_Time_Off_Link_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Active = 'active',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CreatedBy = 'created_by',
  /** column name */
  ExtTimeOffId = 'ext_time_off_id',
  /** column name */
  Note = 'note',
  /** column name */
  TimeOffId = 'time_off_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Ext_Time_Off_Link_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Ext_Time_Off_Link_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Ext_Time_Off_Link_Set_Input>;
  /** filter the rows which have to be updated */
  where: Ext_Time_Off_Link_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Ext_Time_Off_Link_Var_Pop_Fields = {
  __typename?: 'ext_time_off_link_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  ext_time_off_id?: Maybe<Scalars['Float']['output']>;
  time_off_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "ext_time_off_link" */
export type Ext_Time_Off_Link_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  ext_time_off_id?: InputMaybe<Order_By>;
  time_off_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Ext_Time_Off_Link_Var_Samp_Fields = {
  __typename?: 'ext_time_off_link_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  ext_time_off_id?: Maybe<Scalars['Float']['output']>;
  time_off_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "ext_time_off_link" */
export type Ext_Time_Off_Link_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  ext_time_off_id?: InputMaybe<Order_By>;
  time_off_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Ext_Time_Off_Link_Variance_Fields = {
  __typename?: 'ext_time_off_link_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  ext_time_off_id?: Maybe<Scalars['Float']['output']>;
  time_off_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "ext_time_off_link" */
export type Ext_Time_Off_Link_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  ext_time_off_id?: InputMaybe<Order_By>;
  time_off_id?: InputMaybe<Order_By>;
};

/** aggregate max on columns */
export type Ext_Time_Off_Max_Fields = {
  __typename?: 'ext_time_off_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  end_date?: Maybe<Scalars['timestamp']['output']>;
  ext_person_id?: Maybe<Scalars['Int']['output']>;
  external_id?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  integration_id?: Maybe<Scalars['Int']['output']>;
  leave_type?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  remote_id?: Maybe<Scalars['String']['output']>;
  start_date?: Maybe<Scalars['timestamp']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "ext_time_off" */
export type Ext_Time_Off_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  end_date?: InputMaybe<Order_By>;
  ext_person_id?: InputMaybe<Order_By>;
  external_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
  leave_type?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  remote_id?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Ext_Time_Off_Min_Fields = {
  __typename?: 'ext_time_off_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  end_date?: Maybe<Scalars['timestamp']['output']>;
  ext_person_id?: Maybe<Scalars['Int']['output']>;
  external_id?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  integration_id?: Maybe<Scalars['Int']['output']>;
  leave_type?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  remote_id?: Maybe<Scalars['String']['output']>;
  start_date?: Maybe<Scalars['timestamp']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "ext_time_off" */
export type Ext_Time_Off_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  end_date?: InputMaybe<Order_By>;
  ext_person_id?: InputMaybe<Order_By>;
  external_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
  leave_type?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  remote_id?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "ext_time_off" */
export type Ext_Time_Off_Mutation_Response = {
  __typename?: 'ext_time_off_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Ext_Time_Off>;
};

/** input type for inserting object relation for remote table "ext_time_off" */
export type Ext_Time_Off_Obj_Rel_Insert_Input = {
  data: Ext_Time_Off_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Ext_Time_Off_On_Conflict>;
};

/** on_conflict condition type for table "ext_time_off" */
export type Ext_Time_Off_On_Conflict = {
  constraint: Ext_Time_Off_Constraint;
  update_columns?: Array<Ext_Time_Off_Update_Column>;
  where?: InputMaybe<Ext_Time_Off_Bool_Exp>;
};

/** Ordering options when selecting data from "ext_time_off". */
export type Ext_Time_Off_Order_By = {
  account?: InputMaybe<Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  deleted?: InputMaybe<Order_By>;
  end_date?: InputMaybe<Order_By>;
  ext_person?: InputMaybe<Ext_Person_Order_By>;
  ext_person_id?: InputMaybe<Order_By>;
  ext_time_off_links_aggregate?: InputMaybe<Ext_Time_Off_Link_Aggregate_Order_By>;
  external_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration?: InputMaybe<Integration_Order_By>;
  integration_id?: InputMaybe<Order_By>;
  leave_type?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  remote_id?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  sync?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: ext_time_off */
export type Ext_Time_Off_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "ext_time_off" */
export enum Ext_Time_Off_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Deleted = 'deleted',
  /** column name */
  EndDate = 'end_date',
  /** column name */
  ExtPersonId = 'ext_person_id',
  /** column name */
  ExternalId = 'external_id',
  /** column name */
  Id = 'id',
  /** column name */
  IntegrationId = 'integration_id',
  /** column name */
  LeaveType = 'leave_type',
  /** column name */
  Note = 'note',
  /** column name */
  RemoteId = 'remote_id',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  Sync = 'sync',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** select "ext_time_off_aggregate_bool_exp_bool_and_arguments_columns" columns of table "ext_time_off" */
export enum Ext_Time_Off_Select_Column_Ext_Time_Off_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  Deleted = 'deleted',
  /** column name */
  Sync = 'sync'
}

/** select "ext_time_off_aggregate_bool_exp_bool_or_arguments_columns" columns of table "ext_time_off" */
export enum Ext_Time_Off_Select_Column_Ext_Time_Off_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  Deleted = 'deleted',
  /** column name */
  Sync = 'sync'
}

/** input type for updating data in table "ext_time_off" */
export type Ext_Time_Off_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  end_date?: InputMaybe<Scalars['timestamp']['input']>;
  ext_person_id?: InputMaybe<Scalars['Int']['input']>;
  external_id?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  integration_id?: InputMaybe<Scalars['Int']['input']>;
  leave_type?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  remote_id?: InputMaybe<Scalars['String']['input']>;
  start_date?: InputMaybe<Scalars['timestamp']['input']>;
  sync?: InputMaybe<Scalars['Boolean']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Ext_Time_Off_Stddev_Fields = {
  __typename?: 'ext_time_off_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  ext_person_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "ext_time_off" */
export type Ext_Time_Off_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  ext_person_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Ext_Time_Off_Stddev_Pop_Fields = {
  __typename?: 'ext_time_off_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  ext_person_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "ext_time_off" */
export type Ext_Time_Off_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  ext_person_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Ext_Time_Off_Stddev_Samp_Fields = {
  __typename?: 'ext_time_off_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  ext_person_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "ext_time_off" */
export type Ext_Time_Off_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  ext_person_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "ext_time_off" */
export type Ext_Time_Off_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Ext_Time_Off_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Ext_Time_Off_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  end_date?: InputMaybe<Scalars['timestamp']['input']>;
  ext_person_id?: InputMaybe<Scalars['Int']['input']>;
  external_id?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  integration_id?: InputMaybe<Scalars['Int']['input']>;
  leave_type?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  remote_id?: InputMaybe<Scalars['String']['input']>;
  start_date?: InputMaybe<Scalars['timestamp']['input']>;
  sync?: InputMaybe<Scalars['Boolean']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Ext_Time_Off_Sum_Fields = {
  __typename?: 'ext_time_off_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  ext_person_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  integration_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "ext_time_off" */
export type Ext_Time_Off_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  ext_person_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
};

/** update columns of table "ext_time_off" */
export enum Ext_Time_Off_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Deleted = 'deleted',
  /** column name */
  EndDate = 'end_date',
  /** column name */
  ExtPersonId = 'ext_person_id',
  /** column name */
  ExternalId = 'external_id',
  /** column name */
  Id = 'id',
  /** column name */
  IntegrationId = 'integration_id',
  /** column name */
  LeaveType = 'leave_type',
  /** column name */
  Note = 'note',
  /** column name */
  RemoteId = 'remote_id',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  Sync = 'sync',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Ext_Time_Off_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Ext_Time_Off_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Ext_Time_Off_Set_Input>;
  /** filter the rows which have to be updated */
  where: Ext_Time_Off_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Ext_Time_Off_Var_Pop_Fields = {
  __typename?: 'ext_time_off_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  ext_person_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "ext_time_off" */
export type Ext_Time_Off_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  ext_person_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Ext_Time_Off_Var_Samp_Fields = {
  __typename?: 'ext_time_off_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  ext_person_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "ext_time_off" */
export type Ext_Time_Off_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  ext_person_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Ext_Time_Off_Variance_Fields = {
  __typename?: 'ext_time_off_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  ext_person_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "ext_time_off" */
export type Ext_Time_Off_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  ext_person_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "features" */
export type Features = {
  __typename?: 'features';
  created_at: Scalars['timestamp']['output'];
  description?: Maybe<Scalars['String']['output']>;
  enabled: Scalars['Boolean']['output'];
  /** An array relationship */
  features_accounts: Array<Features_Accounts>;
  /** An aggregate relationship */
  features_accounts_aggregate: Features_Accounts_Aggregate;
  id: Scalars['String']['output'];
  name: Scalars['String']['output'];
  updated_at: Scalars['timestamp']['output'];
};


/** columns and relationships of "features" */
export type FeaturesFeatures_AccountsArgs = {
  distinct_on?: InputMaybe<Array<Features_Accounts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Features_Accounts_Order_By>>;
  where?: InputMaybe<Features_Accounts_Bool_Exp>;
};


/** columns and relationships of "features" */
export type FeaturesFeatures_Accounts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Features_Accounts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Features_Accounts_Order_By>>;
  where?: InputMaybe<Features_Accounts_Bool_Exp>;
};

/** columns and relationships of "features_accounts" */
export type Features_Accounts = {
  __typename?: 'features_accounts';
  /** An object relationship */
  account: Accounts;
  account_id: Scalars['Int']['output'];
  created_at: Scalars['timestamp']['output'];
  enabled: Scalars['Boolean']['output'];
  /** An object relationship */
  feature: Features;
  feature_id: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  updated_at: Scalars['timestamp']['output'];
};

/** aggregated selection of "features_accounts" */
export type Features_Accounts_Aggregate = {
  __typename?: 'features_accounts_aggregate';
  aggregate?: Maybe<Features_Accounts_Aggregate_Fields>;
  nodes: Array<Features_Accounts>;
};

export type Features_Accounts_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Features_Accounts_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Features_Accounts_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Features_Accounts_Aggregate_Bool_Exp_Count>;
};

export type Features_Accounts_Aggregate_Bool_Exp_Bool_And = {
  arguments: Features_Accounts_Select_Column_Features_Accounts_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Features_Accounts_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Features_Accounts_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Features_Accounts_Select_Column_Features_Accounts_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Features_Accounts_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Features_Accounts_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Features_Accounts_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Features_Accounts_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "features_accounts" */
export type Features_Accounts_Aggregate_Fields = {
  __typename?: 'features_accounts_aggregate_fields';
  avg?: Maybe<Features_Accounts_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Features_Accounts_Max_Fields>;
  min?: Maybe<Features_Accounts_Min_Fields>;
  stddev?: Maybe<Features_Accounts_Stddev_Fields>;
  stddev_pop?: Maybe<Features_Accounts_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Features_Accounts_Stddev_Samp_Fields>;
  sum?: Maybe<Features_Accounts_Sum_Fields>;
  var_pop?: Maybe<Features_Accounts_Var_Pop_Fields>;
  var_samp?: Maybe<Features_Accounts_Var_Samp_Fields>;
  variance?: Maybe<Features_Accounts_Variance_Fields>;
};


/** aggregate fields of "features_accounts" */
export type Features_Accounts_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Features_Accounts_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "features_accounts" */
export type Features_Accounts_Aggregate_Order_By = {
  avg?: InputMaybe<Features_Accounts_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Features_Accounts_Max_Order_By>;
  min?: InputMaybe<Features_Accounts_Min_Order_By>;
  stddev?: InputMaybe<Features_Accounts_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Features_Accounts_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Features_Accounts_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Features_Accounts_Sum_Order_By>;
  var_pop?: InputMaybe<Features_Accounts_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Features_Accounts_Var_Samp_Order_By>;
  variance?: InputMaybe<Features_Accounts_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "features_accounts" */
export type Features_Accounts_Arr_Rel_Insert_Input = {
  data: Array<Features_Accounts_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Features_Accounts_On_Conflict>;
};

/** aggregate avg on columns */
export type Features_Accounts_Avg_Fields = {
  __typename?: 'features_accounts_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "features_accounts" */
export type Features_Accounts_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "features_accounts". All fields are combined with a logical 'AND'. */
export type Features_Accounts_Bool_Exp = {
  _and?: InputMaybe<Array<Features_Accounts_Bool_Exp>>;
  _not?: InputMaybe<Features_Accounts_Bool_Exp>;
  _or?: InputMaybe<Array<Features_Accounts_Bool_Exp>>;
  account?: InputMaybe<Accounts_Bool_Exp>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  enabled?: InputMaybe<Boolean_Comparison_Exp>;
  feature?: InputMaybe<Features_Bool_Exp>;
  feature_id?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "features_accounts" */
export enum Features_Accounts_Constraint {
  /** unique or primary key constraint on columns "id" */
  FeaturesAccountsPkey = 'features_accounts_pkey',
  /** unique or primary key constraint on columns "account_id", "feature_id" */
  IndexFeaturesAccountsOnAccountIdAndFeatureId = 'index_features_accounts_on_account_id_and_feature_id',
  /** unique or primary key constraint on columns "account_id", "id" */
  IndexUniqueFeaturesAccountsIdAccountId = 'index_unique_features_accounts_id_account_id'
}

/** input type for incrementing numeric columns in table "features_accounts" */
export type Features_Accounts_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "features_accounts" */
export type Features_Accounts_Insert_Input = {
  account?: InputMaybe<Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  feature?: InputMaybe<Features_Obj_Rel_Insert_Input>;
  feature_id?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Features_Accounts_Max_Fields = {
  __typename?: 'features_accounts_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  feature_id?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "features_accounts" */
export type Features_Accounts_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  feature_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Features_Accounts_Min_Fields = {
  __typename?: 'features_accounts_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  feature_id?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "features_accounts" */
export type Features_Accounts_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  feature_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "features_accounts" */
export type Features_Accounts_Mutation_Response = {
  __typename?: 'features_accounts_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Features_Accounts>;
};

/** on_conflict condition type for table "features_accounts" */
export type Features_Accounts_On_Conflict = {
  constraint: Features_Accounts_Constraint;
  update_columns?: Array<Features_Accounts_Update_Column>;
  where?: InputMaybe<Features_Accounts_Bool_Exp>;
};

/** Ordering options when selecting data from "features_accounts". */
export type Features_Accounts_Order_By = {
  account?: InputMaybe<Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  enabled?: InputMaybe<Order_By>;
  feature?: InputMaybe<Features_Order_By>;
  feature_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: features_accounts */
export type Features_Accounts_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "features_accounts" */
export enum Features_Accounts_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Enabled = 'enabled',
  /** column name */
  FeatureId = 'feature_id',
  /** column name */
  Id = 'id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** select "features_accounts_aggregate_bool_exp_bool_and_arguments_columns" columns of table "features_accounts" */
export enum Features_Accounts_Select_Column_Features_Accounts_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  Enabled = 'enabled'
}

/** select "features_accounts_aggregate_bool_exp_bool_or_arguments_columns" columns of table "features_accounts" */
export enum Features_Accounts_Select_Column_Features_Accounts_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  Enabled = 'enabled'
}

/** input type for updating data in table "features_accounts" */
export type Features_Accounts_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  feature_id?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Features_Accounts_Stddev_Fields = {
  __typename?: 'features_accounts_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "features_accounts" */
export type Features_Accounts_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Features_Accounts_Stddev_Pop_Fields = {
  __typename?: 'features_accounts_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "features_accounts" */
export type Features_Accounts_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Features_Accounts_Stddev_Samp_Fields = {
  __typename?: 'features_accounts_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "features_accounts" */
export type Features_Accounts_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "features_accounts" */
export type Features_Accounts_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Features_Accounts_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Features_Accounts_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  feature_id?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Features_Accounts_Sum_Fields = {
  __typename?: 'features_accounts_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "features_accounts" */
export type Features_Accounts_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "features_accounts" */
export enum Features_Accounts_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Enabled = 'enabled',
  /** column name */
  FeatureId = 'feature_id',
  /** column name */
  Id = 'id',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Features_Accounts_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Features_Accounts_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Features_Accounts_Set_Input>;
  /** filter the rows which have to be updated */
  where: Features_Accounts_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Features_Accounts_Var_Pop_Fields = {
  __typename?: 'features_accounts_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "features_accounts" */
export type Features_Accounts_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Features_Accounts_Var_Samp_Fields = {
  __typename?: 'features_accounts_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "features_accounts" */
export type Features_Accounts_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Features_Accounts_Variance_Fields = {
  __typename?: 'features_accounts_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "features_accounts" */
export type Features_Accounts_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregated selection of "features" */
export type Features_Aggregate = {
  __typename?: 'features_aggregate';
  aggregate?: Maybe<Features_Aggregate_Fields>;
  nodes: Array<Features>;
};

/** aggregate fields of "features" */
export type Features_Aggregate_Fields = {
  __typename?: 'features_aggregate_fields';
  count: Scalars['Int']['output'];
  max?: Maybe<Features_Max_Fields>;
  min?: Maybe<Features_Min_Fields>;
};


/** aggregate fields of "features" */
export type Features_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Features_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** Boolean expression to filter rows from the table "features". All fields are combined with a logical 'AND'. */
export type Features_Bool_Exp = {
  _and?: InputMaybe<Array<Features_Bool_Exp>>;
  _not?: InputMaybe<Features_Bool_Exp>;
  _or?: InputMaybe<Array<Features_Bool_Exp>>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  enabled?: InputMaybe<Boolean_Comparison_Exp>;
  features_accounts?: InputMaybe<Features_Accounts_Bool_Exp>;
  features_accounts_aggregate?: InputMaybe<Features_Accounts_Aggregate_Bool_Exp>;
  id?: InputMaybe<String_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "features" */
export enum Features_Constraint {
  /** unique or primary key constraint on columns "id" */
  FeaturesPkey = 'features_pkey'
}

/** input type for inserting data into table "features" */
export type Features_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  features_accounts?: InputMaybe<Features_Accounts_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Features_Max_Fields = {
  __typename?: 'features_max_fields';
  created_at?: Maybe<Scalars['timestamp']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** aggregate min on columns */
export type Features_Min_Fields = {
  __typename?: 'features_min_fields';
  created_at?: Maybe<Scalars['timestamp']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** response of any mutation on the table "features" */
export type Features_Mutation_Response = {
  __typename?: 'features_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Features>;
};

/** input type for inserting object relation for remote table "features" */
export type Features_Obj_Rel_Insert_Input = {
  data: Features_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Features_On_Conflict>;
};

/** on_conflict condition type for table "features" */
export type Features_On_Conflict = {
  constraint: Features_Constraint;
  update_columns?: Array<Features_Update_Column>;
  where?: InputMaybe<Features_Bool_Exp>;
};

/** Ordering options when selecting data from "features". */
export type Features_Order_By = {
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  enabled?: InputMaybe<Order_By>;
  features_accounts_aggregate?: InputMaybe<Features_Accounts_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: features */
export type Features_Pk_Columns_Input = {
  id: Scalars['String']['input'];
};

/** select columns of table "features" */
export enum Features_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Enabled = 'enabled',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "features" */
export type Features_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** Streaming cursor of the table "features" */
export type Features_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Features_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Features_Stream_Cursor_Value_Input = {
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** update columns of table "features" */
export enum Features_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Enabled = 'enabled',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Features_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Features_Set_Input>;
  /** filter the rows which have to be updated */
  where: Features_Bool_Exp;
};

/** columns and relationships of "holidays" */
export type Holidays = {
  __typename?: 'holidays';
  /** An object relationship */
  account: Accounts;
  account_id: Scalars['Int']['output'];
  created_at: Scalars['timestamp']['output'];
  date: Scalars['date']['output'];
  /** A computed field, executes function "holidays_date_runn" */
  date_runn?: Maybe<Scalars['String']['output']>;
  holiday_api_uuid?: Maybe<Scalars['uuid']['output']>;
  /** An object relationship */
  holidays_group: Holidays_Groups;
  holidays_group_id: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  observed?: Maybe<Scalars['date']['output']>;
  /** A computed field, executes function "holidays_observed_runn" */
  observed_runn?: Maybe<Scalars['String']['output']>;
  /** An array relationship */
  time_offs: Array<Time_Offs>;
  /** An aggregate relationship */
  time_offs_aggregate: Time_Offs_Aggregate;
  type: Scalars['String']['output'];
  updated_at: Scalars['timestamp']['output'];
};


/** columns and relationships of "holidays" */
export type HolidaysTime_OffsArgs = {
  distinct_on?: InputMaybe<Array<Time_Offs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Time_Offs_Order_By>>;
  where?: InputMaybe<Time_Offs_Bool_Exp>;
};


/** columns and relationships of "holidays" */
export type HolidaysTime_Offs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Time_Offs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Time_Offs_Order_By>>;
  where?: InputMaybe<Time_Offs_Bool_Exp>;
};

/** aggregated selection of "holidays" */
export type Holidays_Aggregate = {
  __typename?: 'holidays_aggregate';
  aggregate?: Maybe<Holidays_Aggregate_Fields>;
  nodes: Array<Holidays>;
};

export type Holidays_Aggregate_Bool_Exp = {
  count?: InputMaybe<Holidays_Aggregate_Bool_Exp_Count>;
};

export type Holidays_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Holidays_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Holidays_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "holidays" */
export type Holidays_Aggregate_Fields = {
  __typename?: 'holidays_aggregate_fields';
  avg?: Maybe<Holidays_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Holidays_Max_Fields>;
  min?: Maybe<Holidays_Min_Fields>;
  stddev?: Maybe<Holidays_Stddev_Fields>;
  stddev_pop?: Maybe<Holidays_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Holidays_Stddev_Samp_Fields>;
  sum?: Maybe<Holidays_Sum_Fields>;
  var_pop?: Maybe<Holidays_Var_Pop_Fields>;
  var_samp?: Maybe<Holidays_Var_Samp_Fields>;
  variance?: Maybe<Holidays_Variance_Fields>;
};


/** aggregate fields of "holidays" */
export type Holidays_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Holidays_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "holidays" */
export type Holidays_Aggregate_Order_By = {
  avg?: InputMaybe<Holidays_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Holidays_Max_Order_By>;
  min?: InputMaybe<Holidays_Min_Order_By>;
  stddev?: InputMaybe<Holidays_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Holidays_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Holidays_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Holidays_Sum_Order_By>;
  var_pop?: InputMaybe<Holidays_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Holidays_Var_Samp_Order_By>;
  variance?: InputMaybe<Holidays_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "holidays" */
export type Holidays_Arr_Rel_Insert_Input = {
  data: Array<Holidays_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Holidays_On_Conflict>;
};

/** aggregate avg on columns */
export type Holidays_Avg_Fields = {
  __typename?: 'holidays_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  holidays_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "holidays" */
export type Holidays_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  holidays_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "holidays". All fields are combined with a logical 'AND'. */
export type Holidays_Bool_Exp = {
  _and?: InputMaybe<Array<Holidays_Bool_Exp>>;
  _not?: InputMaybe<Holidays_Bool_Exp>;
  _or?: InputMaybe<Array<Holidays_Bool_Exp>>;
  account?: InputMaybe<Accounts_Bool_Exp>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  date?: InputMaybe<Date_Comparison_Exp>;
  date_runn?: InputMaybe<String_Comparison_Exp>;
  holiday_api_uuid?: InputMaybe<Uuid_Comparison_Exp>;
  holidays_group?: InputMaybe<Holidays_Groups_Bool_Exp>;
  holidays_group_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  observed?: InputMaybe<Date_Comparison_Exp>;
  observed_runn?: InputMaybe<String_Comparison_Exp>;
  time_offs?: InputMaybe<Time_Offs_Bool_Exp>;
  time_offs_aggregate?: InputMaybe<Time_Offs_Aggregate_Bool_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "holidays" */
export enum Holidays_Constraint {
  /** unique or primary key constraint on columns "id" */
  HolidaysPkey = 'holidays_pkey',
  /** unique or primary key constraint on columns "account_id", "id" */
  IndexUniqueHolidaysIdAccountId = 'index_unique_holidays_id_account_id'
}

/** columns and relationships of "holidays_groups" */
export type Holidays_Groups = {
  __typename?: 'holidays_groups';
  /** An object relationship */
  account: Accounts;
  account_id: Scalars['Int']['output'];
  country_code: Scalars['String']['output'];
  country_name?: Maybe<Scalars['String']['output']>;
  created_at: Scalars['timestamp']['output'];
  /** An array relationship */
  holidays: Array<Holidays>;
  /** An aggregate relationship */
  holidays_aggregate: Holidays_Aggregate;
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  /** An array relationship */
  people: Array<People>;
  /** An aggregate relationship */
  people_aggregate: People_Aggregate;
  region_name?: Maybe<Scalars['String']['output']>;
  updated_at: Scalars['timestamp']['output'];
};


/** columns and relationships of "holidays_groups" */
export type Holidays_GroupsHolidaysArgs = {
  distinct_on?: InputMaybe<Array<Holidays_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Holidays_Order_By>>;
  where?: InputMaybe<Holidays_Bool_Exp>;
};


/** columns and relationships of "holidays_groups" */
export type Holidays_GroupsHolidays_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Holidays_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Holidays_Order_By>>;
  where?: InputMaybe<Holidays_Bool_Exp>;
};


/** columns and relationships of "holidays_groups" */
export type Holidays_GroupsPeopleArgs = {
  distinct_on?: InputMaybe<Array<People_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<People_Order_By>>;
  where?: InputMaybe<People_Bool_Exp>;
};


/** columns and relationships of "holidays_groups" */
export type Holidays_GroupsPeople_AggregateArgs = {
  distinct_on?: InputMaybe<Array<People_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<People_Order_By>>;
  where?: InputMaybe<People_Bool_Exp>;
};

/** aggregated selection of "holidays_groups" */
export type Holidays_Groups_Aggregate = {
  __typename?: 'holidays_groups_aggregate';
  aggregate?: Maybe<Holidays_Groups_Aggregate_Fields>;
  nodes: Array<Holidays_Groups>;
};

export type Holidays_Groups_Aggregate_Bool_Exp = {
  count?: InputMaybe<Holidays_Groups_Aggregate_Bool_Exp_Count>;
};

export type Holidays_Groups_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Holidays_Groups_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Holidays_Groups_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "holidays_groups" */
export type Holidays_Groups_Aggregate_Fields = {
  __typename?: 'holidays_groups_aggregate_fields';
  avg?: Maybe<Holidays_Groups_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Holidays_Groups_Max_Fields>;
  min?: Maybe<Holidays_Groups_Min_Fields>;
  stddev?: Maybe<Holidays_Groups_Stddev_Fields>;
  stddev_pop?: Maybe<Holidays_Groups_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Holidays_Groups_Stddev_Samp_Fields>;
  sum?: Maybe<Holidays_Groups_Sum_Fields>;
  var_pop?: Maybe<Holidays_Groups_Var_Pop_Fields>;
  var_samp?: Maybe<Holidays_Groups_Var_Samp_Fields>;
  variance?: Maybe<Holidays_Groups_Variance_Fields>;
};


/** aggregate fields of "holidays_groups" */
export type Holidays_Groups_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Holidays_Groups_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "holidays_groups" */
export type Holidays_Groups_Aggregate_Order_By = {
  avg?: InputMaybe<Holidays_Groups_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Holidays_Groups_Max_Order_By>;
  min?: InputMaybe<Holidays_Groups_Min_Order_By>;
  stddev?: InputMaybe<Holidays_Groups_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Holidays_Groups_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Holidays_Groups_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Holidays_Groups_Sum_Order_By>;
  var_pop?: InputMaybe<Holidays_Groups_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Holidays_Groups_Var_Samp_Order_By>;
  variance?: InputMaybe<Holidays_Groups_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "holidays_groups" */
export type Holidays_Groups_Arr_Rel_Insert_Input = {
  data: Array<Holidays_Groups_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Holidays_Groups_On_Conflict>;
};

/** aggregate avg on columns */
export type Holidays_Groups_Avg_Fields = {
  __typename?: 'holidays_groups_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "holidays_groups" */
export type Holidays_Groups_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "holidays_groups". All fields are combined with a logical 'AND'. */
export type Holidays_Groups_Bool_Exp = {
  _and?: InputMaybe<Array<Holidays_Groups_Bool_Exp>>;
  _not?: InputMaybe<Holidays_Groups_Bool_Exp>;
  _or?: InputMaybe<Array<Holidays_Groups_Bool_Exp>>;
  account?: InputMaybe<Accounts_Bool_Exp>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  country_code?: InputMaybe<String_Comparison_Exp>;
  country_name?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  holidays?: InputMaybe<Holidays_Bool_Exp>;
  holidays_aggregate?: InputMaybe<Holidays_Aggregate_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  people?: InputMaybe<People_Bool_Exp>;
  people_aggregate?: InputMaybe<People_Aggregate_Bool_Exp>;
  region_name?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "holidays_groups" */
export enum Holidays_Groups_Constraint {
  /** unique or primary key constraint on columns "id" */
  HolidaysGroupsPkey = 'holidays_groups_pkey',
  /** unique or primary key constraint on columns "account_id", "id" */
  IndexUniqueHolidaysGroupsIdAccountId = 'index_unique_holidays_groups_id_account_id'
}

/** input type for incrementing numeric columns in table "holidays_groups" */
export type Holidays_Groups_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "holidays_groups" */
export type Holidays_Groups_Insert_Input = {
  account?: InputMaybe<Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['Int']['input']>;
  country_code?: InputMaybe<Scalars['String']['input']>;
  country_name?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  holidays?: InputMaybe<Holidays_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  people?: InputMaybe<People_Arr_Rel_Insert_Input>;
  region_name?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Holidays_Groups_Max_Fields = {
  __typename?: 'holidays_groups_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  country_code?: Maybe<Scalars['String']['output']>;
  country_name?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  region_name?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "holidays_groups" */
export type Holidays_Groups_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  country_code?: InputMaybe<Order_By>;
  country_name?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  region_name?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Holidays_Groups_Min_Fields = {
  __typename?: 'holidays_groups_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  country_code?: Maybe<Scalars['String']['output']>;
  country_name?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  region_name?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "holidays_groups" */
export type Holidays_Groups_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  country_code?: InputMaybe<Order_By>;
  country_name?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  region_name?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "holidays_groups" */
export type Holidays_Groups_Mutation_Response = {
  __typename?: 'holidays_groups_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Holidays_Groups>;
};

/** input type for inserting object relation for remote table "holidays_groups" */
export type Holidays_Groups_Obj_Rel_Insert_Input = {
  data: Holidays_Groups_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Holidays_Groups_On_Conflict>;
};

/** on_conflict condition type for table "holidays_groups" */
export type Holidays_Groups_On_Conflict = {
  constraint: Holidays_Groups_Constraint;
  update_columns?: Array<Holidays_Groups_Update_Column>;
  where?: InputMaybe<Holidays_Groups_Bool_Exp>;
};

/** Ordering options when selecting data from "holidays_groups". */
export type Holidays_Groups_Order_By = {
  account?: InputMaybe<Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  country_code?: InputMaybe<Order_By>;
  country_name?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  holidays_aggregate?: InputMaybe<Holidays_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  people_aggregate?: InputMaybe<People_Aggregate_Order_By>;
  region_name?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: holidays_groups */
export type Holidays_Groups_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "holidays_groups" */
export enum Holidays_Groups_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CountryCode = 'country_code',
  /** column name */
  CountryName = 'country_name',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  RegionName = 'region_name',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "holidays_groups" */
export type Holidays_Groups_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  country_code?: InputMaybe<Scalars['String']['input']>;
  country_name?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  region_name?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Holidays_Groups_Stddev_Fields = {
  __typename?: 'holidays_groups_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "holidays_groups" */
export type Holidays_Groups_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Holidays_Groups_Stddev_Pop_Fields = {
  __typename?: 'holidays_groups_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "holidays_groups" */
export type Holidays_Groups_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Holidays_Groups_Stddev_Samp_Fields = {
  __typename?: 'holidays_groups_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "holidays_groups" */
export type Holidays_Groups_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "holidays_groups" */
export type Holidays_Groups_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Holidays_Groups_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Holidays_Groups_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  country_code?: InputMaybe<Scalars['String']['input']>;
  country_name?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  region_name?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Holidays_Groups_Sum_Fields = {
  __typename?: 'holidays_groups_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "holidays_groups" */
export type Holidays_Groups_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "holidays_groups" */
export enum Holidays_Groups_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CountryCode = 'country_code',
  /** column name */
  CountryName = 'country_name',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  RegionName = 'region_name',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Holidays_Groups_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Holidays_Groups_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Holidays_Groups_Set_Input>;
  /** filter the rows which have to be updated */
  where: Holidays_Groups_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Holidays_Groups_Var_Pop_Fields = {
  __typename?: 'holidays_groups_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "holidays_groups" */
export type Holidays_Groups_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Holidays_Groups_Var_Samp_Fields = {
  __typename?: 'holidays_groups_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "holidays_groups" */
export type Holidays_Groups_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Holidays_Groups_Variance_Fields = {
  __typename?: 'holidays_groups_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "holidays_groups" */
export type Holidays_Groups_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** input type for incrementing numeric columns in table "holidays" */
export type Holidays_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  holidays_group_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "holidays" */
export type Holidays_Insert_Input = {
  account?: InputMaybe<Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  date?: InputMaybe<Scalars['date']['input']>;
  holiday_api_uuid?: InputMaybe<Scalars['uuid']['input']>;
  holidays_group?: InputMaybe<Holidays_Groups_Obj_Rel_Insert_Input>;
  holidays_group_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  observed?: InputMaybe<Scalars['date']['input']>;
  time_offs?: InputMaybe<Time_Offs_Arr_Rel_Insert_Input>;
  type?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Holidays_Max_Fields = {
  __typename?: 'holidays_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  date?: Maybe<Scalars['date']['output']>;
  /** A computed field, executes function "holidays_date_runn" */
  date_runn?: Maybe<Scalars['String']['output']>;
  holiday_api_uuid?: Maybe<Scalars['uuid']['output']>;
  holidays_group_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  observed?: Maybe<Scalars['date']['output']>;
  /** A computed field, executes function "holidays_observed_runn" */
  observed_runn?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "holidays" */
export type Holidays_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  date?: InputMaybe<Order_By>;
  holiday_api_uuid?: InputMaybe<Order_By>;
  holidays_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  observed?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Holidays_Min_Fields = {
  __typename?: 'holidays_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  date?: Maybe<Scalars['date']['output']>;
  /** A computed field, executes function "holidays_date_runn" */
  date_runn?: Maybe<Scalars['String']['output']>;
  holiday_api_uuid?: Maybe<Scalars['uuid']['output']>;
  holidays_group_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  observed?: Maybe<Scalars['date']['output']>;
  /** A computed field, executes function "holidays_observed_runn" */
  observed_runn?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "holidays" */
export type Holidays_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  date?: InputMaybe<Order_By>;
  holiday_api_uuid?: InputMaybe<Order_By>;
  holidays_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  observed?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "holidays" */
export type Holidays_Mutation_Response = {
  __typename?: 'holidays_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Holidays>;
};

/** input type for inserting object relation for remote table "holidays" */
export type Holidays_Obj_Rel_Insert_Input = {
  data: Holidays_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Holidays_On_Conflict>;
};

/** on_conflict condition type for table "holidays" */
export type Holidays_On_Conflict = {
  constraint: Holidays_Constraint;
  update_columns?: Array<Holidays_Update_Column>;
  where?: InputMaybe<Holidays_Bool_Exp>;
};

/** Ordering options when selecting data from "holidays". */
export type Holidays_Order_By = {
  account?: InputMaybe<Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  date?: InputMaybe<Order_By>;
  date_runn?: InputMaybe<Order_By>;
  holiday_api_uuid?: InputMaybe<Order_By>;
  holidays_group?: InputMaybe<Holidays_Groups_Order_By>;
  holidays_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  observed?: InputMaybe<Order_By>;
  observed_runn?: InputMaybe<Order_By>;
  time_offs_aggregate?: InputMaybe<Time_Offs_Aggregate_Order_By>;
  type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: holidays */
export type Holidays_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "holidays" */
export enum Holidays_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Date = 'date',
  /** column name */
  HolidayApiUuid = 'holiday_api_uuid',
  /** column name */
  HolidaysGroupId = 'holidays_group_id',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  Observed = 'observed',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "holidays" */
export type Holidays_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  date?: InputMaybe<Scalars['date']['input']>;
  holiday_api_uuid?: InputMaybe<Scalars['uuid']['input']>;
  holidays_group_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  observed?: InputMaybe<Scalars['date']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Holidays_Stddev_Fields = {
  __typename?: 'holidays_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  holidays_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "holidays" */
export type Holidays_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  holidays_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Holidays_Stddev_Pop_Fields = {
  __typename?: 'holidays_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  holidays_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "holidays" */
export type Holidays_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  holidays_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Holidays_Stddev_Samp_Fields = {
  __typename?: 'holidays_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  holidays_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "holidays" */
export type Holidays_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  holidays_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "holidays" */
export type Holidays_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Holidays_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Holidays_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  date?: InputMaybe<Scalars['date']['input']>;
  holiday_api_uuid?: InputMaybe<Scalars['uuid']['input']>;
  holidays_group_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  observed?: InputMaybe<Scalars['date']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Holidays_Sum_Fields = {
  __typename?: 'holidays_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  holidays_group_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "holidays" */
export type Holidays_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  holidays_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "holidays" */
export enum Holidays_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Date = 'date',
  /** column name */
  HolidayApiUuid = 'holiday_api_uuid',
  /** column name */
  HolidaysGroupId = 'holidays_group_id',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  Observed = 'observed',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Holidays_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Holidays_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Holidays_Set_Input>;
  /** filter the rows which have to be updated */
  where: Holidays_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Holidays_Var_Pop_Fields = {
  __typename?: 'holidays_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  holidays_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "holidays" */
export type Holidays_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  holidays_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Holidays_Var_Samp_Fields = {
  __typename?: 'holidays_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  holidays_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "holidays" */
export type Holidays_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  holidays_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Holidays_Variance_Fields = {
  __typename?: 'holidays_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  holidays_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "holidays" */
export type Holidays_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  holidays_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to compare columns of type "inet". All fields are combined with logical 'AND'. */
export type Inet_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['inet']['input']>;
  _gt?: InputMaybe<Scalars['inet']['input']>;
  _gte?: InputMaybe<Scalars['inet']['input']>;
  _in?: InputMaybe<Array<Scalars['inet']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['inet']['input']>;
  _lte?: InputMaybe<Scalars['inet']['input']>;
  _neq?: InputMaybe<Scalars['inet']['input']>;
  _nin?: InputMaybe<Array<Scalars['inet']['input']>>;
};

/** columns and relationships of "integration" */
export type Integration = {
  __typename?: 'integration';
  /** An object relationship */
  account: Accounts;
  account_id: Scalars['Int']['output'];
  active: Scalars['Boolean']['output'];
  category: Scalars['String']['output'];
  config?: Maybe<Scalars['jsonb']['output']>;
  created_at: Scalars['timestamp']['output'];
  /** An array relationship */
  ext_people: Array<Ext_Person>;
  /** An aggregate relationship */
  ext_people_aggregate: Ext_Person_Aggregate;
  /** An array relationship */
  ext_time_offs: Array<Ext_Time_Off>;
  /** An aggregate relationship */
  ext_time_offs_aggregate: Ext_Time_Off_Aggregate;
  external_id?: Maybe<Scalars['String']['output']>;
  id: Scalars['Int']['output'];
  /** An object relationship */
  integration_service: Integration_Service;
  integration_service_id: Scalars['Int']['output'];
  /** An array relationship */
  integration_syncs: Array<Integration_Sync>;
  /** An aggregate relationship */
  integration_syncs_aggregate: Integration_Sync_Aggregate;
  last_sync_at?: Maybe<Scalars['timestamptz']['output']>;
  merge: MergeIntegration;
  next_sync_at?: Maybe<Scalars['timestamptz']['output']>;
  state: Scalars['String']['output'];
  sync_interval_minutes: Scalars['Int']['output'];
  token?: Maybe<Scalars['String']['output']>;
  updated_at: Scalars['timestamp']['output'];
};


/** columns and relationships of "integration" */
export type IntegrationConfigArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** columns and relationships of "integration" */
export type IntegrationExt_PeopleArgs = {
  distinct_on?: InputMaybe<Array<Ext_Person_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Person_Order_By>>;
  where?: InputMaybe<Ext_Person_Bool_Exp>;
};


/** columns and relationships of "integration" */
export type IntegrationExt_People_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ext_Person_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Person_Order_By>>;
  where?: InputMaybe<Ext_Person_Bool_Exp>;
};


/** columns and relationships of "integration" */
export type IntegrationExt_Time_OffsArgs = {
  distinct_on?: InputMaybe<Array<Ext_Time_Off_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Time_Off_Order_By>>;
  where?: InputMaybe<Ext_Time_Off_Bool_Exp>;
};


/** columns and relationships of "integration" */
export type IntegrationExt_Time_Offs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ext_Time_Off_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Time_Off_Order_By>>;
  where?: InputMaybe<Ext_Time_Off_Bool_Exp>;
};


/** columns and relationships of "integration" */
export type IntegrationIntegration_SyncsArgs = {
  distinct_on?: InputMaybe<Array<Integration_Sync_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Integration_Sync_Order_By>>;
  where?: InputMaybe<Integration_Sync_Bool_Exp>;
};


/** columns and relationships of "integration" */
export type IntegrationIntegration_Syncs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Integration_Sync_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Integration_Sync_Order_By>>;
  where?: InputMaybe<Integration_Sync_Bool_Exp>;
};


/** columns and relationships of "integration" */
export type IntegrationMergeArgs = {
  account_id: Scalars['Int']['input'];
  user_id: Scalars['Int']['input'];
};

/** aggregated selection of "integration" */
export type Integration_Aggregate = {
  __typename?: 'integration_aggregate';
  aggregate?: Maybe<Integration_Aggregate_Fields>;
  nodes: Array<Integration>;
};

export type Integration_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Integration_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Integration_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Integration_Aggregate_Bool_Exp_Count>;
};

export type Integration_Aggregate_Bool_Exp_Bool_And = {
  arguments: Integration_Select_Column_Integration_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Integration_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Integration_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Integration_Select_Column_Integration_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Integration_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Integration_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Integration_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Integration_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "integration" */
export type Integration_Aggregate_Fields = {
  __typename?: 'integration_aggregate_fields';
  avg?: Maybe<Integration_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Integration_Max_Fields>;
  min?: Maybe<Integration_Min_Fields>;
  stddev?: Maybe<Integration_Stddev_Fields>;
  stddev_pop?: Maybe<Integration_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Integration_Stddev_Samp_Fields>;
  sum?: Maybe<Integration_Sum_Fields>;
  var_pop?: Maybe<Integration_Var_Pop_Fields>;
  var_samp?: Maybe<Integration_Var_Samp_Fields>;
  variance?: Maybe<Integration_Variance_Fields>;
};


/** aggregate fields of "integration" */
export type Integration_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Integration_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "integration" */
export type Integration_Aggregate_Order_By = {
  avg?: InputMaybe<Integration_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Integration_Max_Order_By>;
  min?: InputMaybe<Integration_Min_Order_By>;
  stddev?: InputMaybe<Integration_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Integration_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Integration_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Integration_Sum_Order_By>;
  var_pop?: InputMaybe<Integration_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Integration_Var_Samp_Order_By>;
  variance?: InputMaybe<Integration_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Integration_Append_Input = {
  config?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "integration" */
export type Integration_Arr_Rel_Insert_Input = {
  data: Array<Integration_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Integration_On_Conflict>;
};

/** aggregate avg on columns */
export type Integration_Avg_Fields = {
  __typename?: 'integration_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_service_id?: Maybe<Scalars['Float']['output']>;
  sync_interval_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "integration" */
export type Integration_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_service_id?: InputMaybe<Order_By>;
  sync_interval_minutes?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "integration". All fields are combined with a logical 'AND'. */
export type Integration_Bool_Exp = {
  _and?: InputMaybe<Array<Integration_Bool_Exp>>;
  _not?: InputMaybe<Integration_Bool_Exp>;
  _or?: InputMaybe<Array<Integration_Bool_Exp>>;
  account?: InputMaybe<Accounts_Bool_Exp>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  active?: InputMaybe<Boolean_Comparison_Exp>;
  category?: InputMaybe<String_Comparison_Exp>;
  config?: InputMaybe<Jsonb_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  ext_people?: InputMaybe<Ext_Person_Bool_Exp>;
  ext_people_aggregate?: InputMaybe<Ext_Person_Aggregate_Bool_Exp>;
  ext_time_offs?: InputMaybe<Ext_Time_Off_Bool_Exp>;
  ext_time_offs_aggregate?: InputMaybe<Ext_Time_Off_Aggregate_Bool_Exp>;
  external_id?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  integration_service?: InputMaybe<Integration_Service_Bool_Exp>;
  integration_service_id?: InputMaybe<Int_Comparison_Exp>;
  integration_syncs?: InputMaybe<Integration_Sync_Bool_Exp>;
  integration_syncs_aggregate?: InputMaybe<Integration_Sync_Aggregate_Bool_Exp>;
  last_sync_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  next_sync_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  state?: InputMaybe<String_Comparison_Exp>;
  sync_interval_minutes?: InputMaybe<Int_Comparison_Exp>;
  token?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "integration" */
export enum Integration_Constraint {
  /** unique or primary key constraint on columns "id" */
  IntegrationPkey = 'integration_pkey',
  /** unique or primary key constraint on columns "account_id", "id" */
  IntegrationTenant = 'integration_tenant',
  /** unique or primary key constraint on columns "account_id", "external_id" */
  IntegrationUniqueAccountIdExternalId = 'integration_unique_account_id_external_id'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Integration_Delete_At_Path_Input = {
  config?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Integration_Delete_Elem_Input = {
  config?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Integration_Delete_Key_Input = {
  config?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "integration" */
export type Integration_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  integration_service_id?: InputMaybe<Scalars['Int']['input']>;
  sync_interval_minutes?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "integration" */
export type Integration_Insert_Input = {
  account?: InputMaybe<Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['Int']['input']>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  category?: InputMaybe<Scalars['String']['input']>;
  config?: InputMaybe<Scalars['jsonb']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  ext_people?: InputMaybe<Ext_Person_Arr_Rel_Insert_Input>;
  ext_time_offs?: InputMaybe<Ext_Time_Off_Arr_Rel_Insert_Input>;
  external_id?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  integration_service?: InputMaybe<Integration_Service_Obj_Rel_Insert_Input>;
  integration_service_id?: InputMaybe<Scalars['Int']['input']>;
  integration_syncs?: InputMaybe<Integration_Sync_Arr_Rel_Insert_Input>;
  last_sync_at?: InputMaybe<Scalars['timestamptz']['input']>;
  next_sync_at?: InputMaybe<Scalars['timestamptz']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  sync_interval_minutes?: InputMaybe<Scalars['Int']['input']>;
  token?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Integration_Max_Fields = {
  __typename?: 'integration_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  category?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  external_id?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  integration_service_id?: Maybe<Scalars['Int']['output']>;
  last_sync_at?: Maybe<Scalars['timestamptz']['output']>;
  next_sync_at?: Maybe<Scalars['timestamptz']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  sync_interval_minutes?: Maybe<Scalars['Int']['output']>;
  token?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "integration" */
export type Integration_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  category?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  external_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_service_id?: InputMaybe<Order_By>;
  last_sync_at?: InputMaybe<Order_By>;
  next_sync_at?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  sync_interval_minutes?: InputMaybe<Order_By>;
  token?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Integration_Min_Fields = {
  __typename?: 'integration_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  category?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  external_id?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  integration_service_id?: Maybe<Scalars['Int']['output']>;
  last_sync_at?: Maybe<Scalars['timestamptz']['output']>;
  next_sync_at?: Maybe<Scalars['timestamptz']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  sync_interval_minutes?: Maybe<Scalars['Int']['output']>;
  token?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "integration" */
export type Integration_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  category?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  external_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_service_id?: InputMaybe<Order_By>;
  last_sync_at?: InputMaybe<Order_By>;
  next_sync_at?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  sync_interval_minutes?: InputMaybe<Order_By>;
  token?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "integration" */
export type Integration_Mutation_Response = {
  __typename?: 'integration_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Integration>;
};

/** input type for inserting object relation for remote table "integration" */
export type Integration_Obj_Rel_Insert_Input = {
  data: Integration_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Integration_On_Conflict>;
};

/** on_conflict condition type for table "integration" */
export type Integration_On_Conflict = {
  constraint: Integration_Constraint;
  update_columns?: Array<Integration_Update_Column>;
  where?: InputMaybe<Integration_Bool_Exp>;
};

/** Ordering options when selecting data from "integration". */
export type Integration_Order_By = {
  account?: InputMaybe<Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  active?: InputMaybe<Order_By>;
  category?: InputMaybe<Order_By>;
  config?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  ext_people_aggregate?: InputMaybe<Ext_Person_Aggregate_Order_By>;
  ext_time_offs_aggregate?: InputMaybe<Ext_Time_Off_Aggregate_Order_By>;
  external_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_service?: InputMaybe<Integration_Service_Order_By>;
  integration_service_id?: InputMaybe<Order_By>;
  integration_syncs_aggregate?: InputMaybe<Integration_Sync_Aggregate_Order_By>;
  last_sync_at?: InputMaybe<Order_By>;
  next_sync_at?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  sync_interval_minutes?: InputMaybe<Order_By>;
  token?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: integration */
export type Integration_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Integration_Prepend_Input = {
  config?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "integration" */
export enum Integration_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Active = 'active',
  /** column name */
  Category = 'category',
  /** column name */
  Config = 'config',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  ExternalId = 'external_id',
  /** column name */
  Id = 'id',
  /** column name */
  IntegrationServiceId = 'integration_service_id',
  /** column name */
  LastSyncAt = 'last_sync_at',
  /** column name */
  NextSyncAt = 'next_sync_at',
  /** column name */
  State = 'state',
  /** column name */
  SyncIntervalMinutes = 'sync_interval_minutes',
  /** column name */
  Token = 'token',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** select "integration_aggregate_bool_exp_bool_and_arguments_columns" columns of table "integration" */
export enum Integration_Select_Column_Integration_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  Active = 'active'
}

/** select "integration_aggregate_bool_exp_bool_or_arguments_columns" columns of table "integration" */
export enum Integration_Select_Column_Integration_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  Active = 'active'
}

/** columns and relationships of "integration_service" */
export type Integration_Service = {
  __typename?: 'integration_service';
  active: Scalars['Boolean']['output'];
  categories: Scalars['_text']['output'];
  color?: Maybe<Scalars['String']['output']>;
  created_at: Scalars['timestamp']['output'];
  id: Scalars['Int']['output'];
  image_url?: Maybe<Scalars['String']['output']>;
  /** An array relationship */
  integrations: Array<Integration>;
  /** An aggregate relationship */
  integrations_aggregate: Integration_Aggregate;
  models: Scalars['_text']['output'];
  name: Scalars['String']['output'];
  platform: Scalars['String']['output'];
  slug: Scalars['String']['output'];
  square_image_url?: Maybe<Scalars['String']['output']>;
  updated_at: Scalars['timestamp']['output'];
};


/** columns and relationships of "integration_service" */
export type Integration_ServiceIntegrationsArgs = {
  distinct_on?: InputMaybe<Array<Integration_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Integration_Order_By>>;
  where?: InputMaybe<Integration_Bool_Exp>;
};


/** columns and relationships of "integration_service" */
export type Integration_ServiceIntegrations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Integration_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Integration_Order_By>>;
  where?: InputMaybe<Integration_Bool_Exp>;
};

/** aggregated selection of "integration_service" */
export type Integration_Service_Aggregate = {
  __typename?: 'integration_service_aggregate';
  aggregate?: Maybe<Integration_Service_Aggregate_Fields>;
  nodes: Array<Integration_Service>;
};

/** aggregate fields of "integration_service" */
export type Integration_Service_Aggregate_Fields = {
  __typename?: 'integration_service_aggregate_fields';
  avg?: Maybe<Integration_Service_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Integration_Service_Max_Fields>;
  min?: Maybe<Integration_Service_Min_Fields>;
  stddev?: Maybe<Integration_Service_Stddev_Fields>;
  stddev_pop?: Maybe<Integration_Service_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Integration_Service_Stddev_Samp_Fields>;
  sum?: Maybe<Integration_Service_Sum_Fields>;
  var_pop?: Maybe<Integration_Service_Var_Pop_Fields>;
  var_samp?: Maybe<Integration_Service_Var_Samp_Fields>;
  variance?: Maybe<Integration_Service_Variance_Fields>;
};


/** aggregate fields of "integration_service" */
export type Integration_Service_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Integration_Service_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Integration_Service_Avg_Fields = {
  __typename?: 'integration_service_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "integration_service". All fields are combined with a logical 'AND'. */
export type Integration_Service_Bool_Exp = {
  _and?: InputMaybe<Array<Integration_Service_Bool_Exp>>;
  _not?: InputMaybe<Integration_Service_Bool_Exp>;
  _or?: InputMaybe<Array<Integration_Service_Bool_Exp>>;
  active?: InputMaybe<Boolean_Comparison_Exp>;
  categories?: InputMaybe<_Text_Comparison_Exp>;
  color?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  image_url?: InputMaybe<String_Comparison_Exp>;
  integrations?: InputMaybe<Integration_Bool_Exp>;
  integrations_aggregate?: InputMaybe<Integration_Aggregate_Bool_Exp>;
  models?: InputMaybe<_Text_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  platform?: InputMaybe<String_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  square_image_url?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "integration_service" */
export enum Integration_Service_Constraint {
  /** unique or primary key constraint on columns "id" */
  IntegrationServicePkey = 'integration_service_pkey',
  /** unique or primary key constraint on columns "slug", "platform" */
  IntegrationServiceUniquePlatformSlug = 'integration_service_unique_platform_slug'
}

/** input type for incrementing numeric columns in table "integration_service" */
export type Integration_Service_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "integration_service" */
export type Integration_Service_Insert_Input = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  categories?: InputMaybe<Scalars['_text']['input']>;
  color?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  image_url?: InputMaybe<Scalars['String']['input']>;
  integrations?: InputMaybe<Integration_Arr_Rel_Insert_Input>;
  models?: InputMaybe<Scalars['_text']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  platform?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  square_image_url?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Integration_Service_Max_Fields = {
  __typename?: 'integration_service_max_fields';
  color?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  image_url?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  platform?: Maybe<Scalars['String']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  square_image_url?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** aggregate min on columns */
export type Integration_Service_Min_Fields = {
  __typename?: 'integration_service_min_fields';
  color?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  image_url?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  platform?: Maybe<Scalars['String']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  square_image_url?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** response of any mutation on the table "integration_service" */
export type Integration_Service_Mutation_Response = {
  __typename?: 'integration_service_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Integration_Service>;
};

/** input type for inserting object relation for remote table "integration_service" */
export type Integration_Service_Obj_Rel_Insert_Input = {
  data: Integration_Service_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Integration_Service_On_Conflict>;
};

/** on_conflict condition type for table "integration_service" */
export type Integration_Service_On_Conflict = {
  constraint: Integration_Service_Constraint;
  update_columns?: Array<Integration_Service_Update_Column>;
  where?: InputMaybe<Integration_Service_Bool_Exp>;
};

/** Ordering options when selecting data from "integration_service". */
export type Integration_Service_Order_By = {
  active?: InputMaybe<Order_By>;
  categories?: InputMaybe<Order_By>;
  color?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_url?: InputMaybe<Order_By>;
  integrations_aggregate?: InputMaybe<Integration_Aggregate_Order_By>;
  models?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  platform?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  square_image_url?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: integration_service */
export type Integration_Service_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "integration_service" */
export enum Integration_Service_Select_Column {
  /** column name */
  Active = 'active',
  /** column name */
  Categories = 'categories',
  /** column name */
  Color = 'color',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  ImageUrl = 'image_url',
  /** column name */
  Models = 'models',
  /** column name */
  Name = 'name',
  /** column name */
  Platform = 'platform',
  /** column name */
  Slug = 'slug',
  /** column name */
  SquareImageUrl = 'square_image_url',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "integration_service" */
export type Integration_Service_Set_Input = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  categories?: InputMaybe<Scalars['_text']['input']>;
  color?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  image_url?: InputMaybe<Scalars['String']['input']>;
  models?: InputMaybe<Scalars['_text']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  platform?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  square_image_url?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Integration_Service_Stddev_Fields = {
  __typename?: 'integration_service_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Integration_Service_Stddev_Pop_Fields = {
  __typename?: 'integration_service_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Integration_Service_Stddev_Samp_Fields = {
  __typename?: 'integration_service_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "integration_service" */
export type Integration_Service_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Integration_Service_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Integration_Service_Stream_Cursor_Value_Input = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  categories?: InputMaybe<Scalars['_text']['input']>;
  color?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  image_url?: InputMaybe<Scalars['String']['input']>;
  models?: InputMaybe<Scalars['_text']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  platform?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  square_image_url?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Integration_Service_Sum_Fields = {
  __typename?: 'integration_service_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "integration_service" */
export enum Integration_Service_Update_Column {
  /** column name */
  Active = 'active',
  /** column name */
  Categories = 'categories',
  /** column name */
  Color = 'color',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  ImageUrl = 'image_url',
  /** column name */
  Models = 'models',
  /** column name */
  Name = 'name',
  /** column name */
  Platform = 'platform',
  /** column name */
  Slug = 'slug',
  /** column name */
  SquareImageUrl = 'square_image_url',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Integration_Service_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Integration_Service_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Integration_Service_Set_Input>;
  /** filter the rows which have to be updated */
  where: Integration_Service_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Integration_Service_Var_Pop_Fields = {
  __typename?: 'integration_service_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Integration_Service_Var_Samp_Fields = {
  __typename?: 'integration_service_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Integration_Service_Variance_Fields = {
  __typename?: 'integration_service_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** input type for updating data in table "integration" */
export type Integration_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  category?: InputMaybe<Scalars['String']['input']>;
  config?: InputMaybe<Scalars['jsonb']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  external_id?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  integration_service_id?: InputMaybe<Scalars['Int']['input']>;
  last_sync_at?: InputMaybe<Scalars['timestamptz']['input']>;
  next_sync_at?: InputMaybe<Scalars['timestamptz']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  sync_interval_minutes?: InputMaybe<Scalars['Int']['input']>;
  token?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Integration_Stddev_Fields = {
  __typename?: 'integration_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_service_id?: Maybe<Scalars['Float']['output']>;
  sync_interval_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "integration" */
export type Integration_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_service_id?: InputMaybe<Order_By>;
  sync_interval_minutes?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Integration_Stddev_Pop_Fields = {
  __typename?: 'integration_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_service_id?: Maybe<Scalars['Float']['output']>;
  sync_interval_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "integration" */
export type Integration_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_service_id?: InputMaybe<Order_By>;
  sync_interval_minutes?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Integration_Stddev_Samp_Fields = {
  __typename?: 'integration_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_service_id?: Maybe<Scalars['Float']['output']>;
  sync_interval_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "integration" */
export type Integration_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_service_id?: InputMaybe<Order_By>;
  sync_interval_minutes?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "integration" */
export type Integration_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Integration_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Integration_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  category?: InputMaybe<Scalars['String']['input']>;
  config?: InputMaybe<Scalars['jsonb']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  external_id?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  integration_service_id?: InputMaybe<Scalars['Int']['input']>;
  last_sync_at?: InputMaybe<Scalars['timestamptz']['input']>;
  next_sync_at?: InputMaybe<Scalars['timestamptz']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  sync_interval_minutes?: InputMaybe<Scalars['Int']['input']>;
  token?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Integration_Sum_Fields = {
  __typename?: 'integration_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  integration_service_id?: Maybe<Scalars['Int']['output']>;
  sync_interval_minutes?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "integration" */
export type Integration_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_service_id?: InputMaybe<Order_By>;
  sync_interval_minutes?: InputMaybe<Order_By>;
};

/** columns and relationships of "integration_sync" */
export type Integration_Sync = {
  __typename?: 'integration_sync';
  /** An object relationship */
  account: Accounts;
  account_id: Scalars['Int']['output'];
  created_at: Scalars['timestamp']['output'];
  error_messages: Scalars['_text']['output'];
  finished_at?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['Int']['output'];
  info_messages: Scalars['_text']['output'];
  /** An object relationship */
  integration?: Maybe<Integration>;
  integration_id: Scalars['Int']['output'];
  started_at: Scalars['timestamptz']['output'];
  state: Scalars['String']['output'];
  updated_at: Scalars['timestamp']['output'];
};

/** columns and relationships of "integration_sync_action" */
export type Integration_Sync_Action = {
  __typename?: 'integration_sync_action';
  account_id: Scalars['Int']['output'];
  action: Scalars['String']['output'];
  created_at: Scalars['timestamp']['output'];
  error_message?: Maybe<Scalars['String']['output']>;
  fields?: Maybe<Scalars['jsonb']['output']>;
  finished_at?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['Int']['output'];
  integration_sync_id: Scalars['Int']['output'];
  model_id?: Maybe<Scalars['Int']['output']>;
  model_name: Scalars['String']['output'];
  source_model_id: Scalars['Int']['output'];
  source_model_name: Scalars['String']['output'];
  started_at?: Maybe<Scalars['timestamptz']['output']>;
  state: Scalars['String']['output'];
  updated_at: Scalars['timestamp']['output'];
};


/** columns and relationships of "integration_sync_action" */
export type Integration_Sync_ActionFieldsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "integration_sync_action" */
export type Integration_Sync_Action_Aggregate = {
  __typename?: 'integration_sync_action_aggregate';
  aggregate?: Maybe<Integration_Sync_Action_Aggregate_Fields>;
  nodes: Array<Integration_Sync_Action>;
};

/** aggregate fields of "integration_sync_action" */
export type Integration_Sync_Action_Aggregate_Fields = {
  __typename?: 'integration_sync_action_aggregate_fields';
  avg?: Maybe<Integration_Sync_Action_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Integration_Sync_Action_Max_Fields>;
  min?: Maybe<Integration_Sync_Action_Min_Fields>;
  stddev?: Maybe<Integration_Sync_Action_Stddev_Fields>;
  stddev_pop?: Maybe<Integration_Sync_Action_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Integration_Sync_Action_Stddev_Samp_Fields>;
  sum?: Maybe<Integration_Sync_Action_Sum_Fields>;
  var_pop?: Maybe<Integration_Sync_Action_Var_Pop_Fields>;
  var_samp?: Maybe<Integration_Sync_Action_Var_Samp_Fields>;
  variance?: Maybe<Integration_Sync_Action_Variance_Fields>;
};


/** aggregate fields of "integration_sync_action" */
export type Integration_Sync_Action_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Integration_Sync_Action_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Integration_Sync_Action_Append_Input = {
  fields?: InputMaybe<Scalars['jsonb']['input']>;
};

/** aggregate avg on columns */
export type Integration_Sync_Action_Avg_Fields = {
  __typename?: 'integration_sync_action_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_sync_id?: Maybe<Scalars['Float']['output']>;
  model_id?: Maybe<Scalars['Float']['output']>;
  source_model_id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "integration_sync_action". All fields are combined with a logical 'AND'. */
export type Integration_Sync_Action_Bool_Exp = {
  _and?: InputMaybe<Array<Integration_Sync_Action_Bool_Exp>>;
  _not?: InputMaybe<Integration_Sync_Action_Bool_Exp>;
  _or?: InputMaybe<Array<Integration_Sync_Action_Bool_Exp>>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  action?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  error_message?: InputMaybe<String_Comparison_Exp>;
  fields?: InputMaybe<Jsonb_Comparison_Exp>;
  finished_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  integration_sync_id?: InputMaybe<Int_Comparison_Exp>;
  model_id?: InputMaybe<Int_Comparison_Exp>;
  model_name?: InputMaybe<String_Comparison_Exp>;
  source_model_id?: InputMaybe<Int_Comparison_Exp>;
  source_model_name?: InputMaybe<String_Comparison_Exp>;
  started_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  state?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "integration_sync_action" */
export enum Integration_Sync_Action_Constraint {
  /** unique or primary key constraint on columns "id" */
  IntegrationSyncActionPkey = 'integration_sync_action_pkey',
  /** unique or primary key constraint on columns "account_id", "id" */
  IntegrationSyncActionTenant = 'integration_sync_action_tenant'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Integration_Sync_Action_Delete_At_Path_Input = {
  fields?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Integration_Sync_Action_Delete_Elem_Input = {
  fields?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Integration_Sync_Action_Delete_Key_Input = {
  fields?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "integration_sync_action" */
export type Integration_Sync_Action_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  integration_sync_id?: InputMaybe<Scalars['Int']['input']>;
  model_id?: InputMaybe<Scalars['Int']['input']>;
  source_model_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "integration_sync_action" */
export type Integration_Sync_Action_Insert_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  action?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  error_message?: InputMaybe<Scalars['String']['input']>;
  fields?: InputMaybe<Scalars['jsonb']['input']>;
  finished_at?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  integration_sync_id?: InputMaybe<Scalars['Int']['input']>;
  model_id?: InputMaybe<Scalars['Int']['input']>;
  model_name?: InputMaybe<Scalars['String']['input']>;
  source_model_id?: InputMaybe<Scalars['Int']['input']>;
  source_model_name?: InputMaybe<Scalars['String']['input']>;
  started_at?: InputMaybe<Scalars['timestamptz']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Integration_Sync_Action_Max_Fields = {
  __typename?: 'integration_sync_action_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  action?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  error_message?: Maybe<Scalars['String']['output']>;
  finished_at?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  integration_sync_id?: Maybe<Scalars['Int']['output']>;
  model_id?: Maybe<Scalars['Int']['output']>;
  model_name?: Maybe<Scalars['String']['output']>;
  source_model_id?: Maybe<Scalars['Int']['output']>;
  source_model_name?: Maybe<Scalars['String']['output']>;
  started_at?: Maybe<Scalars['timestamptz']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** aggregate min on columns */
export type Integration_Sync_Action_Min_Fields = {
  __typename?: 'integration_sync_action_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  action?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  error_message?: Maybe<Scalars['String']['output']>;
  finished_at?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  integration_sync_id?: Maybe<Scalars['Int']['output']>;
  model_id?: Maybe<Scalars['Int']['output']>;
  model_name?: Maybe<Scalars['String']['output']>;
  source_model_id?: Maybe<Scalars['Int']['output']>;
  source_model_name?: Maybe<Scalars['String']['output']>;
  started_at?: Maybe<Scalars['timestamptz']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** response of any mutation on the table "integration_sync_action" */
export type Integration_Sync_Action_Mutation_Response = {
  __typename?: 'integration_sync_action_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Integration_Sync_Action>;
};

/** on_conflict condition type for table "integration_sync_action" */
export type Integration_Sync_Action_On_Conflict = {
  constraint: Integration_Sync_Action_Constraint;
  update_columns?: Array<Integration_Sync_Action_Update_Column>;
  where?: InputMaybe<Integration_Sync_Action_Bool_Exp>;
};

/** Ordering options when selecting data from "integration_sync_action". */
export type Integration_Sync_Action_Order_By = {
  account_id?: InputMaybe<Order_By>;
  action?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  error_message?: InputMaybe<Order_By>;
  fields?: InputMaybe<Order_By>;
  finished_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_sync_id?: InputMaybe<Order_By>;
  model_id?: InputMaybe<Order_By>;
  model_name?: InputMaybe<Order_By>;
  source_model_id?: InputMaybe<Order_By>;
  source_model_name?: InputMaybe<Order_By>;
  started_at?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: integration_sync_action */
export type Integration_Sync_Action_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Integration_Sync_Action_Prepend_Input = {
  fields?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "integration_sync_action" */
export enum Integration_Sync_Action_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Action = 'action',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  ErrorMessage = 'error_message',
  /** column name */
  Fields = 'fields',
  /** column name */
  FinishedAt = 'finished_at',
  /** column name */
  Id = 'id',
  /** column name */
  IntegrationSyncId = 'integration_sync_id',
  /** column name */
  ModelId = 'model_id',
  /** column name */
  ModelName = 'model_name',
  /** column name */
  SourceModelId = 'source_model_id',
  /** column name */
  SourceModelName = 'source_model_name',
  /** column name */
  StartedAt = 'started_at',
  /** column name */
  State = 'state',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "integration_sync_action" */
export type Integration_Sync_Action_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  action?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  error_message?: InputMaybe<Scalars['String']['input']>;
  fields?: InputMaybe<Scalars['jsonb']['input']>;
  finished_at?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  integration_sync_id?: InputMaybe<Scalars['Int']['input']>;
  model_id?: InputMaybe<Scalars['Int']['input']>;
  model_name?: InputMaybe<Scalars['String']['input']>;
  source_model_id?: InputMaybe<Scalars['Int']['input']>;
  source_model_name?: InputMaybe<Scalars['String']['input']>;
  started_at?: InputMaybe<Scalars['timestamptz']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Integration_Sync_Action_Stddev_Fields = {
  __typename?: 'integration_sync_action_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_sync_id?: Maybe<Scalars['Float']['output']>;
  model_id?: Maybe<Scalars['Float']['output']>;
  source_model_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Integration_Sync_Action_Stddev_Pop_Fields = {
  __typename?: 'integration_sync_action_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_sync_id?: Maybe<Scalars['Float']['output']>;
  model_id?: Maybe<Scalars['Float']['output']>;
  source_model_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Integration_Sync_Action_Stddev_Samp_Fields = {
  __typename?: 'integration_sync_action_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_sync_id?: Maybe<Scalars['Float']['output']>;
  model_id?: Maybe<Scalars['Float']['output']>;
  source_model_id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "integration_sync_action" */
export type Integration_Sync_Action_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Integration_Sync_Action_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Integration_Sync_Action_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  action?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  error_message?: InputMaybe<Scalars['String']['input']>;
  fields?: InputMaybe<Scalars['jsonb']['input']>;
  finished_at?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  integration_sync_id?: InputMaybe<Scalars['Int']['input']>;
  model_id?: InputMaybe<Scalars['Int']['input']>;
  model_name?: InputMaybe<Scalars['String']['input']>;
  source_model_id?: InputMaybe<Scalars['Int']['input']>;
  source_model_name?: InputMaybe<Scalars['String']['input']>;
  started_at?: InputMaybe<Scalars['timestamptz']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Integration_Sync_Action_Sum_Fields = {
  __typename?: 'integration_sync_action_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  integration_sync_id?: Maybe<Scalars['Int']['output']>;
  model_id?: Maybe<Scalars['Int']['output']>;
  source_model_id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "integration_sync_action" */
export enum Integration_Sync_Action_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Action = 'action',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  ErrorMessage = 'error_message',
  /** column name */
  Fields = 'fields',
  /** column name */
  FinishedAt = 'finished_at',
  /** column name */
  Id = 'id',
  /** column name */
  IntegrationSyncId = 'integration_sync_id',
  /** column name */
  ModelId = 'model_id',
  /** column name */
  ModelName = 'model_name',
  /** column name */
  SourceModelId = 'source_model_id',
  /** column name */
  SourceModelName = 'source_model_name',
  /** column name */
  StartedAt = 'started_at',
  /** column name */
  State = 'state',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Integration_Sync_Action_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Integration_Sync_Action_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Integration_Sync_Action_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Integration_Sync_Action_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Integration_Sync_Action_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Integration_Sync_Action_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Integration_Sync_Action_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Integration_Sync_Action_Set_Input>;
  /** filter the rows which have to be updated */
  where: Integration_Sync_Action_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Integration_Sync_Action_Var_Pop_Fields = {
  __typename?: 'integration_sync_action_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_sync_id?: Maybe<Scalars['Float']['output']>;
  model_id?: Maybe<Scalars['Float']['output']>;
  source_model_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Integration_Sync_Action_Var_Samp_Fields = {
  __typename?: 'integration_sync_action_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_sync_id?: Maybe<Scalars['Float']['output']>;
  model_id?: Maybe<Scalars['Float']['output']>;
  source_model_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Integration_Sync_Action_Variance_Fields = {
  __typename?: 'integration_sync_action_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_sync_id?: Maybe<Scalars['Float']['output']>;
  model_id?: Maybe<Scalars['Float']['output']>;
  source_model_id?: Maybe<Scalars['Float']['output']>;
};

/** aggregated selection of "integration_sync" */
export type Integration_Sync_Aggregate = {
  __typename?: 'integration_sync_aggregate';
  aggregate?: Maybe<Integration_Sync_Aggregate_Fields>;
  nodes: Array<Integration_Sync>;
};

export type Integration_Sync_Aggregate_Bool_Exp = {
  count?: InputMaybe<Integration_Sync_Aggregate_Bool_Exp_Count>;
};

export type Integration_Sync_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Integration_Sync_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Integration_Sync_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "integration_sync" */
export type Integration_Sync_Aggregate_Fields = {
  __typename?: 'integration_sync_aggregate_fields';
  avg?: Maybe<Integration_Sync_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Integration_Sync_Max_Fields>;
  min?: Maybe<Integration_Sync_Min_Fields>;
  stddev?: Maybe<Integration_Sync_Stddev_Fields>;
  stddev_pop?: Maybe<Integration_Sync_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Integration_Sync_Stddev_Samp_Fields>;
  sum?: Maybe<Integration_Sync_Sum_Fields>;
  var_pop?: Maybe<Integration_Sync_Var_Pop_Fields>;
  var_samp?: Maybe<Integration_Sync_Var_Samp_Fields>;
  variance?: Maybe<Integration_Sync_Variance_Fields>;
};


/** aggregate fields of "integration_sync" */
export type Integration_Sync_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Integration_Sync_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "integration_sync" */
export type Integration_Sync_Aggregate_Order_By = {
  avg?: InputMaybe<Integration_Sync_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Integration_Sync_Max_Order_By>;
  min?: InputMaybe<Integration_Sync_Min_Order_By>;
  stddev?: InputMaybe<Integration_Sync_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Integration_Sync_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Integration_Sync_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Integration_Sync_Sum_Order_By>;
  var_pop?: InputMaybe<Integration_Sync_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Integration_Sync_Var_Samp_Order_By>;
  variance?: InputMaybe<Integration_Sync_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "integration_sync" */
export type Integration_Sync_Arr_Rel_Insert_Input = {
  data: Array<Integration_Sync_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Integration_Sync_On_Conflict>;
};

/** aggregate avg on columns */
export type Integration_Sync_Avg_Fields = {
  __typename?: 'integration_sync_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "integration_sync" */
export type Integration_Sync_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "integration_sync". All fields are combined with a logical 'AND'. */
export type Integration_Sync_Bool_Exp = {
  _and?: InputMaybe<Array<Integration_Sync_Bool_Exp>>;
  _not?: InputMaybe<Integration_Sync_Bool_Exp>;
  _or?: InputMaybe<Array<Integration_Sync_Bool_Exp>>;
  account?: InputMaybe<Accounts_Bool_Exp>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  error_messages?: InputMaybe<_Text_Comparison_Exp>;
  finished_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  info_messages?: InputMaybe<_Text_Comparison_Exp>;
  integration?: InputMaybe<Integration_Bool_Exp>;
  integration_id?: InputMaybe<Int_Comparison_Exp>;
  started_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  state?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "integration_sync" */
export enum Integration_Sync_Constraint {
  /** unique or primary key constraint on columns "integration_id" */
  IntegrationSyncOnlyOneNullFinishedAtPerIntegrationId = 'integration_sync_only_one_null_finished_at_per_integration_id',
  /** unique or primary key constraint on columns "id" */
  IntegrationSyncPkey = 'integration_sync_pkey',
  /** unique or primary key constraint on columns "account_id", "id" */
  IntegrationSyncTenant = 'integration_sync_tenant'
}

/** input type for incrementing numeric columns in table "integration_sync" */
export type Integration_Sync_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  integration_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "integration_sync" */
export type Integration_Sync_Insert_Input = {
  account?: InputMaybe<Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  error_messages?: InputMaybe<Scalars['_text']['input']>;
  finished_at?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  info_messages?: InputMaybe<Scalars['_text']['input']>;
  integration?: InputMaybe<Integration_Obj_Rel_Insert_Input>;
  integration_id?: InputMaybe<Scalars['Int']['input']>;
  started_at?: InputMaybe<Scalars['timestamptz']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Integration_Sync_Max_Fields = {
  __typename?: 'integration_sync_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  finished_at?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  integration_id?: Maybe<Scalars['Int']['output']>;
  started_at?: Maybe<Scalars['timestamptz']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "integration_sync" */
export type Integration_Sync_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  finished_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
  started_at?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Integration_Sync_Min_Fields = {
  __typename?: 'integration_sync_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  finished_at?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  integration_id?: Maybe<Scalars['Int']['output']>;
  started_at?: Maybe<Scalars['timestamptz']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "integration_sync" */
export type Integration_Sync_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  finished_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
  started_at?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "integration_sync" */
export type Integration_Sync_Mutation_Response = {
  __typename?: 'integration_sync_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Integration_Sync>;
};

/** on_conflict condition type for table "integration_sync" */
export type Integration_Sync_On_Conflict = {
  constraint: Integration_Sync_Constraint;
  update_columns?: Array<Integration_Sync_Update_Column>;
  where?: InputMaybe<Integration_Sync_Bool_Exp>;
};

/** Ordering options when selecting data from "integration_sync". */
export type Integration_Sync_Order_By = {
  account?: InputMaybe<Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  error_messages?: InputMaybe<Order_By>;
  finished_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  info_messages?: InputMaybe<Order_By>;
  integration?: InputMaybe<Integration_Order_By>;
  integration_id?: InputMaybe<Order_By>;
  started_at?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: integration_sync */
export type Integration_Sync_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "integration_sync" */
export enum Integration_Sync_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  ErrorMessages = 'error_messages',
  /** column name */
  FinishedAt = 'finished_at',
  /** column name */
  Id = 'id',
  /** column name */
  InfoMessages = 'info_messages',
  /** column name */
  IntegrationId = 'integration_id',
  /** column name */
  StartedAt = 'started_at',
  /** column name */
  State = 'state',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "integration_sync" */
export type Integration_Sync_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  error_messages?: InputMaybe<Scalars['_text']['input']>;
  finished_at?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  info_messages?: InputMaybe<Scalars['_text']['input']>;
  integration_id?: InputMaybe<Scalars['Int']['input']>;
  started_at?: InputMaybe<Scalars['timestamptz']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Integration_Sync_Stddev_Fields = {
  __typename?: 'integration_sync_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "integration_sync" */
export type Integration_Sync_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Integration_Sync_Stddev_Pop_Fields = {
  __typename?: 'integration_sync_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "integration_sync" */
export type Integration_Sync_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Integration_Sync_Stddev_Samp_Fields = {
  __typename?: 'integration_sync_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "integration_sync" */
export type Integration_Sync_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "integration_sync" */
export type Integration_Sync_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Integration_Sync_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Integration_Sync_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  error_messages?: InputMaybe<Scalars['_text']['input']>;
  finished_at?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  info_messages?: InputMaybe<Scalars['_text']['input']>;
  integration_id?: InputMaybe<Scalars['Int']['input']>;
  started_at?: InputMaybe<Scalars['timestamptz']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Integration_Sync_Sum_Fields = {
  __typename?: 'integration_sync_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  integration_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "integration_sync" */
export type Integration_Sync_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
};

/** update columns of table "integration_sync" */
export enum Integration_Sync_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  ErrorMessages = 'error_messages',
  /** column name */
  FinishedAt = 'finished_at',
  /** column name */
  Id = 'id',
  /** column name */
  InfoMessages = 'info_messages',
  /** column name */
  IntegrationId = 'integration_id',
  /** column name */
  StartedAt = 'started_at',
  /** column name */
  State = 'state',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Integration_Sync_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Integration_Sync_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Integration_Sync_Set_Input>;
  /** filter the rows which have to be updated */
  where: Integration_Sync_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Integration_Sync_Var_Pop_Fields = {
  __typename?: 'integration_sync_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "integration_sync" */
export type Integration_Sync_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Integration_Sync_Var_Samp_Fields = {
  __typename?: 'integration_sync_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "integration_sync" */
export type Integration_Sync_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Integration_Sync_Variance_Fields = {
  __typename?: 'integration_sync_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "integration_sync" */
export type Integration_Sync_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_id?: InputMaybe<Order_By>;
};

/** update columns of table "integration" */
export enum Integration_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Active = 'active',
  /** column name */
  Category = 'category',
  /** column name */
  Config = 'config',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  ExternalId = 'external_id',
  /** column name */
  Id = 'id',
  /** column name */
  IntegrationServiceId = 'integration_service_id',
  /** column name */
  LastSyncAt = 'last_sync_at',
  /** column name */
  NextSyncAt = 'next_sync_at',
  /** column name */
  State = 'state',
  /** column name */
  SyncIntervalMinutes = 'sync_interval_minutes',
  /** column name */
  Token = 'token',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Integration_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Integration_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Integration_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Integration_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Integration_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Integration_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Integration_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Integration_Set_Input>;
  /** filter the rows which have to be updated */
  where: Integration_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Integration_Var_Pop_Fields = {
  __typename?: 'integration_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_service_id?: Maybe<Scalars['Float']['output']>;
  sync_interval_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "integration" */
export type Integration_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_service_id?: InputMaybe<Order_By>;
  sync_interval_minutes?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Integration_Var_Samp_Fields = {
  __typename?: 'integration_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_service_id?: Maybe<Scalars['Float']['output']>;
  sync_interval_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "integration" */
export type Integration_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_service_id?: InputMaybe<Order_By>;
  sync_interval_minutes?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Integration_Variance_Fields = {
  __typename?: 'integration_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  integration_service_id?: Maybe<Scalars['Float']['output']>;
  sync_interval_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "integration" */
export type Integration_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  integration_service_id?: InputMaybe<Order_By>;
  sync_interval_minutes?: InputMaybe<Order_By>;
};

/** columns and relationships of "invitations" */
export type Invitations = {
  __typename?: 'invitations';
  /** An object relationship */
  account: Accounts;
  account_id: Scalars['Int']['output'];
  created_at: Scalars['timestamp']['output'];
  digest?: Maybe<Scalars['String']['output']>;
  editor_projects_permission: Scalars['String']['output'];
  email?: Maybe<Scalars['String']['output']>;
  expires_at: Scalars['timestamptz']['output'];
  fin_permission: Scalars['String']['output'];
  from_user_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  updated_at: Scalars['timestamp']['output'];
  user_type: Scalars['String']['output'];
  uuid?: Maybe<Scalars['String']['output']>;
};

/** aggregated selection of "invitations" */
export type Invitations_Aggregate = {
  __typename?: 'invitations_aggregate';
  aggregate?: Maybe<Invitations_Aggregate_Fields>;
  nodes: Array<Invitations>;
};

export type Invitations_Aggregate_Bool_Exp = {
  count?: InputMaybe<Invitations_Aggregate_Bool_Exp_Count>;
};

export type Invitations_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Invitations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Invitations_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "invitations" */
export type Invitations_Aggregate_Fields = {
  __typename?: 'invitations_aggregate_fields';
  avg?: Maybe<Invitations_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Invitations_Max_Fields>;
  min?: Maybe<Invitations_Min_Fields>;
  stddev?: Maybe<Invitations_Stddev_Fields>;
  stddev_pop?: Maybe<Invitations_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Invitations_Stddev_Samp_Fields>;
  sum?: Maybe<Invitations_Sum_Fields>;
  var_pop?: Maybe<Invitations_Var_Pop_Fields>;
  var_samp?: Maybe<Invitations_Var_Samp_Fields>;
  variance?: Maybe<Invitations_Variance_Fields>;
};


/** aggregate fields of "invitations" */
export type Invitations_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Invitations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "invitations" */
export type Invitations_Aggregate_Order_By = {
  avg?: InputMaybe<Invitations_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Invitations_Max_Order_By>;
  min?: InputMaybe<Invitations_Min_Order_By>;
  stddev?: InputMaybe<Invitations_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Invitations_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Invitations_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Invitations_Sum_Order_By>;
  var_pop?: InputMaybe<Invitations_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Invitations_Var_Samp_Order_By>;
  variance?: InputMaybe<Invitations_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "invitations" */
export type Invitations_Arr_Rel_Insert_Input = {
  data: Array<Invitations_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Invitations_On_Conflict>;
};

/** aggregate avg on columns */
export type Invitations_Avg_Fields = {
  __typename?: 'invitations_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  from_user_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "invitations" */
export type Invitations_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  from_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "invitations". All fields are combined with a logical 'AND'. */
export type Invitations_Bool_Exp = {
  _and?: InputMaybe<Array<Invitations_Bool_Exp>>;
  _not?: InputMaybe<Invitations_Bool_Exp>;
  _or?: InputMaybe<Array<Invitations_Bool_Exp>>;
  account?: InputMaybe<Accounts_Bool_Exp>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  digest?: InputMaybe<String_Comparison_Exp>;
  editor_projects_permission?: InputMaybe<String_Comparison_Exp>;
  email?: InputMaybe<String_Comparison_Exp>;
  expires_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  fin_permission?: InputMaybe<String_Comparison_Exp>;
  from_user_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
  user_type?: InputMaybe<String_Comparison_Exp>;
  uuid?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "invitations" */
export enum Invitations_Constraint {
  /** unique or primary key constraint on columns "account_id", "id" */
  IndexUniqueInvitationsIdAccountId = 'index_unique_invitations_id_account_id',
  /** unique or primary key constraint on columns "id" */
  InvitationsPkey = 'invitations_pkey'
}

/** input type for incrementing numeric columns in table "invitations" */
export type Invitations_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  from_user_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "invitations" */
export type Invitations_Insert_Input = {
  account?: InputMaybe<Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  digest?: InputMaybe<Scalars['String']['input']>;
  editor_projects_permission?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  expires_at?: InputMaybe<Scalars['timestamptz']['input']>;
  fin_permission?: InputMaybe<Scalars['String']['input']>;
  from_user_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  user_type?: InputMaybe<Scalars['String']['input']>;
  uuid?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Invitations_Max_Fields = {
  __typename?: 'invitations_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  digest?: Maybe<Scalars['String']['output']>;
  editor_projects_permission?: Maybe<Scalars['String']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  expires_at?: Maybe<Scalars['timestamptz']['output']>;
  fin_permission?: Maybe<Scalars['String']['output']>;
  from_user_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
  user_type?: Maybe<Scalars['String']['output']>;
  uuid?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "invitations" */
export type Invitations_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  digest?: InputMaybe<Order_By>;
  editor_projects_permission?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  expires_at?: InputMaybe<Order_By>;
  fin_permission?: InputMaybe<Order_By>;
  from_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_type?: InputMaybe<Order_By>;
  uuid?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Invitations_Min_Fields = {
  __typename?: 'invitations_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  digest?: Maybe<Scalars['String']['output']>;
  editor_projects_permission?: Maybe<Scalars['String']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  expires_at?: Maybe<Scalars['timestamptz']['output']>;
  fin_permission?: Maybe<Scalars['String']['output']>;
  from_user_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
  user_type?: Maybe<Scalars['String']['output']>;
  uuid?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "invitations" */
export type Invitations_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  digest?: InputMaybe<Order_By>;
  editor_projects_permission?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  expires_at?: InputMaybe<Order_By>;
  fin_permission?: InputMaybe<Order_By>;
  from_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_type?: InputMaybe<Order_By>;
  uuid?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "invitations" */
export type Invitations_Mutation_Response = {
  __typename?: 'invitations_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Invitations>;
};

/** on_conflict condition type for table "invitations" */
export type Invitations_On_Conflict = {
  constraint: Invitations_Constraint;
  update_columns?: Array<Invitations_Update_Column>;
  where?: InputMaybe<Invitations_Bool_Exp>;
};

/** Ordering options when selecting data from "invitations". */
export type Invitations_Order_By = {
  account?: InputMaybe<Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  digest?: InputMaybe<Order_By>;
  editor_projects_permission?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  expires_at?: InputMaybe<Order_By>;
  fin_permission?: InputMaybe<Order_By>;
  from_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_type?: InputMaybe<Order_By>;
  uuid?: InputMaybe<Order_By>;
};

/** primary key columns input for table: invitations */
export type Invitations_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "invitations" */
export enum Invitations_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Digest = 'digest',
  /** column name */
  EditorProjectsPermission = 'editor_projects_permission',
  /** column name */
  Email = 'email',
  /** column name */
  ExpiresAt = 'expires_at',
  /** column name */
  FinPermission = 'fin_permission',
  /** column name */
  FromUserId = 'from_user_id',
  /** column name */
  Id = 'id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserType = 'user_type',
  /** column name */
  Uuid = 'uuid'
}

/** input type for updating data in table "invitations" */
export type Invitations_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  digest?: InputMaybe<Scalars['String']['input']>;
  editor_projects_permission?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  expires_at?: InputMaybe<Scalars['timestamptz']['input']>;
  fin_permission?: InputMaybe<Scalars['String']['input']>;
  from_user_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  user_type?: InputMaybe<Scalars['String']['input']>;
  uuid?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Invitations_Stddev_Fields = {
  __typename?: 'invitations_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  from_user_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "invitations" */
export type Invitations_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  from_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Invitations_Stddev_Pop_Fields = {
  __typename?: 'invitations_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  from_user_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "invitations" */
export type Invitations_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  from_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Invitations_Stddev_Samp_Fields = {
  __typename?: 'invitations_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  from_user_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "invitations" */
export type Invitations_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  from_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "invitations" */
export type Invitations_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Invitations_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Invitations_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  digest?: InputMaybe<Scalars['String']['input']>;
  editor_projects_permission?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  expires_at?: InputMaybe<Scalars['timestamptz']['input']>;
  fin_permission?: InputMaybe<Scalars['String']['input']>;
  from_user_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  user_type?: InputMaybe<Scalars['String']['input']>;
  uuid?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Invitations_Sum_Fields = {
  __typename?: 'invitations_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  from_user_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "invitations" */
export type Invitations_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  from_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "invitations" */
export enum Invitations_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Digest = 'digest',
  /** column name */
  EditorProjectsPermission = 'editor_projects_permission',
  /** column name */
  Email = 'email',
  /** column name */
  ExpiresAt = 'expires_at',
  /** column name */
  FinPermission = 'fin_permission',
  /** column name */
  FromUserId = 'from_user_id',
  /** column name */
  Id = 'id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserType = 'user_type',
  /** column name */
  Uuid = 'uuid'
}

export type Invitations_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Invitations_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Invitations_Set_Input>;
  /** filter the rows which have to be updated */
  where: Invitations_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Invitations_Var_Pop_Fields = {
  __typename?: 'invitations_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  from_user_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "invitations" */
export type Invitations_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  from_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Invitations_Var_Samp_Fields = {
  __typename?: 'invitations_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  from_user_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "invitations" */
export type Invitations_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  from_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Invitations_Variance_Fields = {
  __typename?: 'invitations_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  from_user_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "invitations" */
export type Invitations_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  from_user_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to compare columns of type "json". All fields are combined with logical 'AND'. */
export type Json_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['json']['input']>;
  _gt?: InputMaybe<Scalars['json']['input']>;
  _gte?: InputMaybe<Scalars['json']['input']>;
  _in?: InputMaybe<Array<Scalars['json']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['json']['input']>;
  _lte?: InputMaybe<Scalars['json']['input']>;
  _neq?: InputMaybe<Scalars['json']['input']>;
  _nin?: InputMaybe<Array<Scalars['json']['input']>>;
};

export type Jsonb_Cast_Exp = {
  String?: InputMaybe<String_Comparison_Exp>;
};

/** Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'. */
export type Jsonb_Comparison_Exp = {
  _cast?: InputMaybe<Jsonb_Cast_Exp>;
  /** is the column contained in the given json value */
  _contained_in?: InputMaybe<Scalars['jsonb']['input']>;
  /** does the column contain the given json value at the top level */
  _contains?: InputMaybe<Scalars['jsonb']['input']>;
  _eq?: InputMaybe<Scalars['jsonb']['input']>;
  _gt?: InputMaybe<Scalars['jsonb']['input']>;
  _gte?: InputMaybe<Scalars['jsonb']['input']>;
  /** does the string exist as a top-level key in the column */
  _has_key?: InputMaybe<Scalars['String']['input']>;
  /** do all of these strings exist as top-level keys in the column */
  _has_keys_all?: InputMaybe<Array<Scalars['String']['input']>>;
  /** do any of these strings exist as top-level keys in the column */
  _has_keys_any?: InputMaybe<Array<Scalars['String']['input']>>;
  _in?: InputMaybe<Array<Scalars['jsonb']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['jsonb']['input']>;
  _lte?: InputMaybe<Scalars['jsonb']['input']>;
  _neq?: InputMaybe<Scalars['jsonb']['input']>;
  _nin?: InputMaybe<Array<Scalars['jsonb']['input']>>;
};

/** columns and relationships of "milestones" */
export type Milestones = {
  __typename?: 'milestones';
  account_id: Scalars['Int']['output'];
  created_at: Scalars['timestamp']['output'];
  date?: Maybe<Scalars['date']['output']>;
  date_runn?: Maybe<Scalars['String']['output']>;
  icon?: Maybe<Scalars['String']['output']>;
  id: Scalars['Int']['output'];
  note?: Maybe<Scalars['String']['output']>;
  /** An object relationship */
  project: Projects;
  project_id: Scalars['Int']['output'];
  title?: Maybe<Scalars['String']['output']>;
  updated_at: Scalars['timestamp']['output'];
};

/** aggregated selection of "milestones" */
export type Milestones_Aggregate = {
  __typename?: 'milestones_aggregate';
  aggregate?: Maybe<Milestones_Aggregate_Fields>;
  nodes: Array<Milestones>;
};

export type Milestones_Aggregate_Bool_Exp = {
  count?: InputMaybe<Milestones_Aggregate_Bool_Exp_Count>;
};

export type Milestones_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Milestones_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Milestones_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "milestones" */
export type Milestones_Aggregate_Fields = {
  __typename?: 'milestones_aggregate_fields';
  avg?: Maybe<Milestones_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Milestones_Max_Fields>;
  min?: Maybe<Milestones_Min_Fields>;
  stddev?: Maybe<Milestones_Stddev_Fields>;
  stddev_pop?: Maybe<Milestones_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Milestones_Stddev_Samp_Fields>;
  sum?: Maybe<Milestones_Sum_Fields>;
  var_pop?: Maybe<Milestones_Var_Pop_Fields>;
  var_samp?: Maybe<Milestones_Var_Samp_Fields>;
  variance?: Maybe<Milestones_Variance_Fields>;
};


/** aggregate fields of "milestones" */
export type Milestones_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Milestones_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "milestones" */
export type Milestones_Aggregate_Order_By = {
  avg?: InputMaybe<Milestones_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Milestones_Max_Order_By>;
  min?: InputMaybe<Milestones_Min_Order_By>;
  stddev?: InputMaybe<Milestones_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Milestones_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Milestones_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Milestones_Sum_Order_By>;
  var_pop?: InputMaybe<Milestones_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Milestones_Var_Samp_Order_By>;
  variance?: InputMaybe<Milestones_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "milestones" */
export type Milestones_Arr_Rel_Insert_Input = {
  data: Array<Milestones_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Milestones_On_Conflict>;
};

/** aggregate avg on columns */
export type Milestones_Avg_Fields = {
  __typename?: 'milestones_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "milestones" */
export type Milestones_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "milestones". All fields are combined with a logical 'AND'. */
export type Milestones_Bool_Exp = {
  _and?: InputMaybe<Array<Milestones_Bool_Exp>>;
  _not?: InputMaybe<Milestones_Bool_Exp>;
  _or?: InputMaybe<Array<Milestones_Bool_Exp>>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  date?: InputMaybe<Date_Comparison_Exp>;
  date_runn?: InputMaybe<String_Comparison_Exp>;
  icon?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  note?: InputMaybe<String_Comparison_Exp>;
  project?: InputMaybe<Projects_Bool_Exp>;
  project_id?: InputMaybe<Int_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "milestones" */
export enum Milestones_Constraint {
  /** unique or primary key constraint on columns "account_id", "id" */
  IndexUniqueMilestonesIdAccountId = 'index_unique_milestones_id_account_id',
  /** unique or primary key constraint on columns "id" */
  MilestonesPkey = 'milestones_pkey'
}

/** input type for incrementing numeric columns in table "milestones" */
export type Milestones_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "milestones" */
export type Milestones_Insert_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  date?: InputMaybe<Scalars['date']['input']>;
  icon?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  project?: InputMaybe<Projects_Obj_Rel_Insert_Input>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Milestones_Max_Fields = {
  __typename?: 'milestones_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  date?: Maybe<Scalars['date']['output']>;
  date_runn?: Maybe<Scalars['String']['output']>;
  icon?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  title?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "milestones" */
export type Milestones_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  date?: InputMaybe<Order_By>;
  icon?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Milestones_Min_Fields = {
  __typename?: 'milestones_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  date?: Maybe<Scalars['date']['output']>;
  date_runn?: Maybe<Scalars['String']['output']>;
  icon?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  title?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "milestones" */
export type Milestones_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  date?: InputMaybe<Order_By>;
  icon?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "milestones" */
export type Milestones_Mutation_Response = {
  __typename?: 'milestones_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Milestones>;
};

/** on_conflict condition type for table "milestones" */
export type Milestones_On_Conflict = {
  constraint: Milestones_Constraint;
  update_columns?: Array<Milestones_Update_Column>;
  where?: InputMaybe<Milestones_Bool_Exp>;
};

/** Ordering options when selecting data from "milestones". */
export type Milestones_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  date?: InputMaybe<Order_By>;
  date_runn?: InputMaybe<Order_By>;
  icon?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  project?: InputMaybe<Projects_Order_By>;
  project_id?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: milestones */
export type Milestones_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "milestones" */
export enum Milestones_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Date = 'date',
  /** column name */
  Icon = 'icon',
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "milestones" */
export type Milestones_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  date?: InputMaybe<Scalars['date']['input']>;
  icon?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Milestones_Stddev_Fields = {
  __typename?: 'milestones_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "milestones" */
export type Milestones_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Milestones_Stddev_Pop_Fields = {
  __typename?: 'milestones_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "milestones" */
export type Milestones_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Milestones_Stddev_Samp_Fields = {
  __typename?: 'milestones_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "milestones" */
export type Milestones_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "milestones" */
export type Milestones_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Milestones_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Milestones_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  date?: InputMaybe<Scalars['date']['input']>;
  icon?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Milestones_Sum_Fields = {
  __typename?: 'milestones_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "milestones" */
export type Milestones_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** update columns of table "milestones" */
export enum Milestones_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Date = 'date',
  /** column name */
  Icon = 'icon',
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Milestones_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Milestones_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Milestones_Set_Input>;
  /** filter the rows which have to be updated */
  where: Milestones_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Milestones_Var_Pop_Fields = {
  __typename?: 'milestones_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "milestones" */
export type Milestones_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Milestones_Var_Samp_Fields = {
  __typename?: 'milestones_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "milestones" */
export type Milestones_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Milestones_Variance_Fields = {
  __typename?: 'milestones_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "milestones" */
export type Milestones_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** mutation root */
export type Mutation_Root = {
  __typename?: 'mutation_root';
  action_actual_bulk_changes?: Maybe<Array<Maybe<ActualBulkChangesOutput>>>;
  action_assignment_bulk_changes?: Maybe<Array<Maybe<AssignmentBulkChangesOutput>>>;
  action_ext_person_link_update?: Maybe<ExtPersonLinkUpdateOutput>;
  action_holidays_bulk_update?: Maybe<HolidaysBulkUpdateOutput>;
  action_holidays_time_off_bulk_create?: Maybe<HolidaysTimeOffBulkCreateOutput>;
  action_holidays_time_off_bulk_delete?: Maybe<HolidaysTimeOffBulkDeleteOutput>;
  /** Create a new Integration */
  action_integration_create: IntegrationCreateOutput;
  /** Delete an existing integration */
  action_integration_delete: IntegrationDeleteOutput;
  /** Sync an integration now */
  action_integration_sync: IntegrationSyncOutput;
  /** Toggle the active state of an existing integation */
  action_integration_update: IntegrationUpdateOutput;
  /** action_invitation_renew */
  action_invitation_renew: InvitationRenewOutput;
  action_other_cost_bulk_create: OtherCostBulkCreateOutput;
  action_other_cost_bulk_update?: Maybe<OtherCostBulkUpdateOutput>;
  action_person_bulk_create?: Maybe<Array<Maybe<PersonBulkCreateOutput>>>;
  action_person_bulk_update?: Maybe<PersonBulkUpdateOutput>;
  action_person_create?: Maybe<PersonCreateOutput>;
  /** Delete a person */
  action_person_delete: PersonDeleteOutput;
  /** Create person note */
  action_person_note_create: PersonNoteCreateOutput;
  /** action_person_note_update */
  action_person_note_update: PersonNoteUpdateOutput;
  action_person_update?: Maybe<PersonUpdateOutput>;
  /** action_placeholder_bulk_create */
  action_placeholder_bulk_create?: Maybe<Array<Maybe<PlaceholderBulkCreateOutput>>>;
  /** placeholder_delete */
  action_placeholder_delete?: Maybe<PlaceholderDeleteOutput>;
  action_placeholder_update?: Maybe<PlaceholderUpdateOutput>;
  action_planner_change_date?: Maybe<PlannerChangeDateOutput>;
  action_project_budget_update?: Maybe<ProjectBudgetUpdateOutput>;
  action_project_bulk_create?: Maybe<Array<Maybe<ProjectBulkCreateOutput>>>;
  /** action_project_bulk_update */
  action_project_bulk_update?: Maybe<Array<Maybe<ProjectBulkUpdateOutput>>>;
  action_project_create?: Maybe<ProjectCreateOutput>;
  action_project_duplicate: ProjectDuplicateOutput;
  action_project_member_bulk_create?: Maybe<Array<Maybe<ProjectMemberBulkCreateOutput>>>;
  /** action_project_member_delete */
  action_project_member_delete?: Maybe<ProjectMemberDeleteOutput>;
  /** Create project note */
  action_project_note_create: ProjectNoteCreateOutput;
  /** action_project_note_update */
  action_project_note_update: ProjectNoteUpdateOutput;
  action_project_reschedule: ProjectRescheduleOutput;
  action_project_update?: Maybe<ProjectUpdateOutput>;
  action_rate_card_create: RateCardCreateOutput;
  action_rate_card_update: RateCardUpdateOutput;
  action_role_create: RoleCreateOutput;
  action_role_update: RoleUpdateOutput;
  action_subscription_update?: Maybe<SubscriptionUpdateOutput>;
  action_tag_bulk_create?: Maybe<TagBulkCreateOutput>;
  /** Update roles in bulk */
  bulkUpdateRole: RoleBulkUpdateResult;
  /** Delete a project */
  deleteProject: DeleteProjectResult;
  /** delete data from the table: "accounts" */
  delete_accounts?: Maybe<Accounts_Mutation_Response>;
  /** delete single row from the table: "accounts" */
  delete_accounts_by_pk?: Maybe<Accounts>;
  /** delete data from the table: "actuals" */
  delete_actuals?: Maybe<Actuals_Mutation_Response>;
  /** delete single row from the table: "actuals" */
  delete_actuals_by_pk?: Maybe<Actuals>;
  /** delete data from the table: "api_tokens" */
  delete_api_tokens?: Maybe<Api_Tokens_Mutation_Response>;
  /** delete single row from the table: "api_tokens" */
  delete_api_tokens_by_pk?: Maybe<Api_Tokens>;
  /** delete data from the table: "assignments" */
  delete_assignments?: Maybe<Assignments_Mutation_Response>;
  /** delete single row from the table: "assignments" */
  delete_assignments_by_pk?: Maybe<Assignments>;
  /** delete data from the table: "audit.logged_actions" */
  delete_audit_logged_actions?: Maybe<Audit_Logged_Actions_Mutation_Response>;
  /** delete single row from the table: "audit.logged_actions" */
  delete_audit_logged_actions_by_pk?: Maybe<Audit_Logged_Actions>;
  /** delete data from the table: "audit.recently_logged_actions" */
  delete_audit_recently_logged_actions?: Maybe<Audit_Recently_Logged_Actions_Mutation_Response>;
  /** delete data from the table: "cancel_reasons" */
  delete_cancel_reasons?: Maybe<Cancel_Reasons_Mutation_Response>;
  /** delete single row from the table: "cancel_reasons" */
  delete_cancel_reasons_by_pk?: Maybe<Cancel_Reasons>;
  /** delete data from the table: "clients" */
  delete_clients?: Maybe<Clients_Mutation_Response>;
  /** delete single row from the table: "clients" */
  delete_clients_by_pk?: Maybe<Clients>;
  /** delete data from the table: "competencies" */
  delete_competencies?: Maybe<Competencies_Mutation_Response>;
  /** delete single row from the table: "competencies" */
  delete_competencies_by_pk?: Maybe<Competencies>;
  /** delete data from the table: "contracts" */
  delete_contracts?: Maybe<Contracts_Mutation_Response>;
  /** delete single row from the table: "contracts" */
  delete_contracts_by_pk?: Maybe<Contracts>;
  /** delete data from the table: "custom_select_options" */
  delete_custom_select_options?: Maybe<Custom_Select_Options_Mutation_Response>;
  /** delete single row from the table: "custom_select_options" */
  delete_custom_select_options_by_pk?: Maybe<Custom_Select_Options>;
  /** delete data from the table: "custom_select_types" */
  delete_custom_select_types?: Maybe<Custom_Select_Types_Mutation_Response>;
  /** delete single row from the table: "custom_select_types" */
  delete_custom_select_types_by_pk?: Maybe<Custom_Select_Types>;
  /** delete data from the table: "custom_select_values" */
  delete_custom_select_values?: Maybe<Custom_Select_Values_Mutation_Response>;
  /** delete single row from the table: "custom_select_values" */
  delete_custom_select_values_by_pk?: Maybe<Custom_Select_Values>;
  /** delete data from the table: "custom_text_types" */
  delete_custom_text_types?: Maybe<Custom_Text_Types_Mutation_Response>;
  /** delete single row from the table: "custom_text_types" */
  delete_custom_text_types_by_pk?: Maybe<Custom_Text_Types>;
  /** delete data from the table: "custom_text_values" */
  delete_custom_text_values?: Maybe<Custom_Text_Values_Mutation_Response>;
  /** delete single row from the table: "custom_text_values" */
  delete_custom_text_values_by_pk?: Maybe<Custom_Text_Values>;
  /** delete data from the table: "ext_contract" */
  delete_ext_contract?: Maybe<Ext_Contract_Mutation_Response>;
  /** delete single row from the table: "ext_contract" */
  delete_ext_contract_by_pk?: Maybe<Ext_Contract>;
  /** delete data from the table: "ext_person" */
  delete_ext_person?: Maybe<Ext_Person_Mutation_Response>;
  /** delete single row from the table: "ext_person" */
  delete_ext_person_by_pk?: Maybe<Ext_Person>;
  /** delete data from the table: "ext_person_link" */
  delete_ext_person_link?: Maybe<Ext_Person_Link_Mutation_Response>;
  /** delete single row from the table: "ext_person_link" */
  delete_ext_person_link_by_pk?: Maybe<Ext_Person_Link>;
  /** delete data from the table: "ext_role" */
  delete_ext_role?: Maybe<Ext_Role_Mutation_Response>;
  /** delete single row from the table: "ext_role" */
  delete_ext_role_by_pk?: Maybe<Ext_Role>;
  /** delete data from the table: "ext_team" */
  delete_ext_team?: Maybe<Ext_Team_Mutation_Response>;
  /** delete single row from the table: "ext_team" */
  delete_ext_team_by_pk?: Maybe<Ext_Team>;
  /** delete data from the table: "ext_time_off" */
  delete_ext_time_off?: Maybe<Ext_Time_Off_Mutation_Response>;
  /** delete single row from the table: "ext_time_off" */
  delete_ext_time_off_by_pk?: Maybe<Ext_Time_Off>;
  /** delete data from the table: "ext_time_off_link" */
  delete_ext_time_off_link?: Maybe<Ext_Time_Off_Link_Mutation_Response>;
  /** delete single row from the table: "ext_time_off_link" */
  delete_ext_time_off_link_by_pk?: Maybe<Ext_Time_Off_Link>;
  /** delete data from the table: "features" */
  delete_features?: Maybe<Features_Mutation_Response>;
  /** delete data from the table: "features_accounts" */
  delete_features_accounts?: Maybe<Features_Accounts_Mutation_Response>;
  /** delete single row from the table: "features_accounts" */
  delete_features_accounts_by_pk?: Maybe<Features_Accounts>;
  /** delete single row from the table: "features" */
  delete_features_by_pk?: Maybe<Features>;
  /** delete data from the table: "holidays" */
  delete_holidays?: Maybe<Holidays_Mutation_Response>;
  /** delete single row from the table: "holidays" */
  delete_holidays_by_pk?: Maybe<Holidays>;
  /** delete data from the table: "holidays_groups" */
  delete_holidays_groups?: Maybe<Holidays_Groups_Mutation_Response>;
  /** delete single row from the table: "holidays_groups" */
  delete_holidays_groups_by_pk?: Maybe<Holidays_Groups>;
  /** delete data from the table: "integration" */
  delete_integration?: Maybe<Integration_Mutation_Response>;
  /** delete single row from the table: "integration" */
  delete_integration_by_pk?: Maybe<Integration>;
  /** delete data from the table: "integration_service" */
  delete_integration_service?: Maybe<Integration_Service_Mutation_Response>;
  /** delete single row from the table: "integration_service" */
  delete_integration_service_by_pk?: Maybe<Integration_Service>;
  /** delete data from the table: "integration_sync" */
  delete_integration_sync?: Maybe<Integration_Sync_Mutation_Response>;
  /** delete data from the table: "integration_sync_action" */
  delete_integration_sync_action?: Maybe<Integration_Sync_Action_Mutation_Response>;
  /** delete single row from the table: "integration_sync_action" */
  delete_integration_sync_action_by_pk?: Maybe<Integration_Sync_Action>;
  /** delete single row from the table: "integration_sync" */
  delete_integration_sync_by_pk?: Maybe<Integration_Sync>;
  /** delete data from the table: "invitations" */
  delete_invitations?: Maybe<Invitations_Mutation_Response>;
  /** delete single row from the table: "invitations" */
  delete_invitations_by_pk?: Maybe<Invitations>;
  /** delete data from the table: "milestones" */
  delete_milestones?: Maybe<Milestones_Mutation_Response>;
  /** delete single row from the table: "milestones" */
  delete_milestones_by_pk?: Maybe<Milestones>;
  /** delete data from the table: "notes" */
  delete_notes?: Maybe<Notes_Mutation_Response>;
  /** delete single row from the table: "notes" */
  delete_notes_by_pk?: Maybe<Notes>;
  /** delete data from the table: "other_costs" */
  delete_other_costs?: Maybe<Other_Costs_Mutation_Response>;
  /** delete single row from the table: "other_costs" */
  delete_other_costs_by_pk?: Maybe<Other_Costs>;
  /** delete data from the table: "people" */
  delete_people?: Maybe<People_Mutation_Response>;
  /** delete single row from the table: "people" */
  delete_people_by_pk?: Maybe<People>;
  /** delete data from the table: "people_notes" */
  delete_people_notes?: Maybe<People_Notes_Mutation_Response>;
  /** delete single row from the table: "people_notes" */
  delete_people_notes_by_pk?: Maybe<People_Notes>;
  /** delete data from the table: "person_requests" */
  delete_person_requests?: Maybe<Person_Requests_Mutation_Response>;
  /** delete single row from the table: "person_requests" */
  delete_person_requests_by_pk?: Maybe<Person_Requests>;
  /** delete data from the table: "phases" */
  delete_phases?: Maybe<Phases_Mutation_Response>;
  /** delete single row from the table: "phases" */
  delete_phases_by_pk?: Maybe<Phases>;
  /** delete data from the table: "project_editors" */
  delete_project_editors?: Maybe<Project_Editors_Mutation_Response>;
  /** delete single row from the table: "project_editors" */
  delete_project_editors_by_pk?: Maybe<Project_Editors>;
  /** delete data from the table: "project_members" */
  delete_project_members?: Maybe<Project_Members_Mutation_Response>;
  /** delete single row from the table: "project_members" */
  delete_project_members_by_pk?: Maybe<Project_Members>;
  /** delete data from the table: "project_rates" */
  delete_project_rates?: Maybe<Project_Rates_Mutation_Response>;
  /** delete single row from the table: "project_rates" */
  delete_project_rates_by_pk?: Maybe<Project_Rates>;
  /** delete data from the table: "project_roles" */
  delete_project_roles?: Maybe<Project_Roles_Mutation_Response>;
  /** delete single row from the table: "project_roles" */
  delete_project_roles_by_pk?: Maybe<Project_Roles>;
  /** delete data from the table: "project_tags" */
  delete_project_tags?: Maybe<Project_Tags_Mutation_Response>;
  /** delete single row from the table: "project_tags" */
  delete_project_tags_by_pk?: Maybe<Project_Tags>;
  /** delete data from the table: "projects" */
  delete_projects?: Maybe<Projects_Mutation_Response>;
  /** delete single row from the table: "projects" */
  delete_projects_by_pk?: Maybe<Projects>;
  /** delete data from the table: "rate_cards" */
  delete_rate_cards?: Maybe<Rate_Cards_Mutation_Response>;
  /** delete single row from the table: "rate_cards" */
  delete_rate_cards_by_pk?: Maybe<Rate_Cards>;
  /** delete data from the table: "role_charge_out_rates" */
  delete_role_charge_out_rates?: Maybe<Role_Charge_Out_Rates_Mutation_Response>;
  /** delete single row from the table: "role_charge_out_rates" */
  delete_role_charge_out_rates_by_pk?: Maybe<Role_Charge_Out_Rates>;
  /** delete data from the table: "roles" */
  delete_roles?: Maybe<Roles_Mutation_Response>;
  /** delete single row from the table: "roles" */
  delete_roles_by_pk?: Maybe<Roles>;
  /** delete data from the table: "skills" */
  delete_skills?: Maybe<Skills_Mutation_Response>;
  /** delete single row from the table: "skills" */
  delete_skills_by_pk?: Maybe<Skills>;
  /** delete data from the table: "tags" */
  delete_tags?: Maybe<Tags_Mutation_Response>;
  /** delete single row from the table: "tags" */
  delete_tags_by_pk?: Maybe<Tags>;
  /** delete data from the table: "teams" */
  delete_teams?: Maybe<Teams_Mutation_Response>;
  /** delete single row from the table: "teams" */
  delete_teams_by_pk?: Maybe<Teams>;
  /** delete data from the table: "time_offs" */
  delete_time_offs?: Maybe<Time_Offs_Mutation_Response>;
  /** delete single row from the table: "time_offs" */
  delete_time_offs_by_pk?: Maybe<Time_Offs>;
  /** delete data from the table: "type_schedule_totals" */
  delete_type_schedule_totals?: Maybe<Type_Schedule_Totals_Mutation_Response>;
  /** delete single row from the table: "type_schedule_totals" */
  delete_type_schedule_totals_by_pk?: Maybe<Type_Schedule_Totals>;
  /** delete data from the table: "type_schedule_totals_roles" */
  delete_type_schedule_totals_roles?: Maybe<Type_Schedule_Totals_Roles_Mutation_Response>;
  /** delete single row from the table: "type_schedule_totals_roles" */
  delete_type_schedule_totals_roles_by_pk?: Maybe<Type_Schedule_Totals_Roles>;
  /** delete data from the table: "user_filter_sets" */
  delete_user_filter_sets?: Maybe<User_Filter_Sets_Mutation_Response>;
  /** delete single row from the table: "user_filter_sets" */
  delete_user_filter_sets_by_pk?: Maybe<User_Filter_Sets>;
  /** delete data from the table: "users" */
  delete_users?: Maybe<Users_Mutation_Response>;
  /** delete single row from the table: "users" */
  delete_users_by_pk?: Maybe<Users>;
  /** delete data from the table: "views" */
  delete_views?: Maybe<Views_Mutation_Response>;
  /** delete single row from the table: "views" */
  delete_views_by_pk?: Maybe<Views>;
  /** Create an api token */
  generateApiToken: CreateApiTokenResult;
  /** insert data into the table: "accounts" */
  insert_accounts?: Maybe<Accounts_Mutation_Response>;
  /** insert a single row into the table: "accounts" */
  insert_accounts_one?: Maybe<Accounts>;
  /** insert data into the table: "actuals" */
  insert_actuals?: Maybe<Actuals_Mutation_Response>;
  /** insert a single row into the table: "actuals" */
  insert_actuals_one?: Maybe<Actuals>;
  /** insert data into the table: "api_tokens" */
  insert_api_tokens?: Maybe<Api_Tokens_Mutation_Response>;
  /** insert a single row into the table: "api_tokens" */
  insert_api_tokens_one?: Maybe<Api_Tokens>;
  /** insert data into the table: "assignments" */
  insert_assignments?: Maybe<Assignments_Mutation_Response>;
  /** insert a single row into the table: "assignments" */
  insert_assignments_one?: Maybe<Assignments>;
  /** insert data into the table: "audit.logged_actions" */
  insert_audit_logged_actions?: Maybe<Audit_Logged_Actions_Mutation_Response>;
  /** insert a single row into the table: "audit.logged_actions" */
  insert_audit_logged_actions_one?: Maybe<Audit_Logged_Actions>;
  /** insert data into the table: "audit.recently_logged_actions" */
  insert_audit_recently_logged_actions?: Maybe<Audit_Recently_Logged_Actions_Mutation_Response>;
  /** insert a single row into the table: "audit.recently_logged_actions" */
  insert_audit_recently_logged_actions_one?: Maybe<Audit_Recently_Logged_Actions>;
  /** insert data into the table: "cancel_reasons" */
  insert_cancel_reasons?: Maybe<Cancel_Reasons_Mutation_Response>;
  /** insert a single row into the table: "cancel_reasons" */
  insert_cancel_reasons_one?: Maybe<Cancel_Reasons>;
  /** insert data into the table: "clients" */
  insert_clients?: Maybe<Clients_Mutation_Response>;
  /** insert a single row into the table: "clients" */
  insert_clients_one?: Maybe<Clients>;
  /** insert data into the table: "competencies" */
  insert_competencies?: Maybe<Competencies_Mutation_Response>;
  /** insert a single row into the table: "competencies" */
  insert_competencies_one?: Maybe<Competencies>;
  /** insert data into the table: "contracts" */
  insert_contracts?: Maybe<Contracts_Mutation_Response>;
  /** insert a single row into the table: "contracts" */
  insert_contracts_one?: Maybe<Contracts>;
  /** insert data into the table: "custom_select_options" */
  insert_custom_select_options?: Maybe<Custom_Select_Options_Mutation_Response>;
  /** insert a single row into the table: "custom_select_options" */
  insert_custom_select_options_one?: Maybe<Custom_Select_Options>;
  /** insert data into the table: "custom_select_types" */
  insert_custom_select_types?: Maybe<Custom_Select_Types_Mutation_Response>;
  /** insert a single row into the table: "custom_select_types" */
  insert_custom_select_types_one?: Maybe<Custom_Select_Types>;
  /** insert data into the table: "custom_select_values" */
  insert_custom_select_values?: Maybe<Custom_Select_Values_Mutation_Response>;
  /** insert a single row into the table: "custom_select_values" */
  insert_custom_select_values_one?: Maybe<Custom_Select_Values>;
  /** insert data into the table: "custom_text_types" */
  insert_custom_text_types?: Maybe<Custom_Text_Types_Mutation_Response>;
  /** insert a single row into the table: "custom_text_types" */
  insert_custom_text_types_one?: Maybe<Custom_Text_Types>;
  /** insert data into the table: "custom_text_values" */
  insert_custom_text_values?: Maybe<Custom_Text_Values_Mutation_Response>;
  /** insert a single row into the table: "custom_text_values" */
  insert_custom_text_values_one?: Maybe<Custom_Text_Values>;
  /** insert data into the table: "ext_contract" */
  insert_ext_contract?: Maybe<Ext_Contract_Mutation_Response>;
  /** insert a single row into the table: "ext_contract" */
  insert_ext_contract_one?: Maybe<Ext_Contract>;
  /** insert data into the table: "ext_person" */
  insert_ext_person?: Maybe<Ext_Person_Mutation_Response>;
  /** insert data into the table: "ext_person_link" */
  insert_ext_person_link?: Maybe<Ext_Person_Link_Mutation_Response>;
  /** insert a single row into the table: "ext_person_link" */
  insert_ext_person_link_one?: Maybe<Ext_Person_Link>;
  /** insert a single row into the table: "ext_person" */
  insert_ext_person_one?: Maybe<Ext_Person>;
  /** insert data into the table: "ext_role" */
  insert_ext_role?: Maybe<Ext_Role_Mutation_Response>;
  /** insert a single row into the table: "ext_role" */
  insert_ext_role_one?: Maybe<Ext_Role>;
  /** insert data into the table: "ext_team" */
  insert_ext_team?: Maybe<Ext_Team_Mutation_Response>;
  /** insert a single row into the table: "ext_team" */
  insert_ext_team_one?: Maybe<Ext_Team>;
  /** insert data into the table: "ext_time_off" */
  insert_ext_time_off?: Maybe<Ext_Time_Off_Mutation_Response>;
  /** insert data into the table: "ext_time_off_link" */
  insert_ext_time_off_link?: Maybe<Ext_Time_Off_Link_Mutation_Response>;
  /** insert a single row into the table: "ext_time_off_link" */
  insert_ext_time_off_link_one?: Maybe<Ext_Time_Off_Link>;
  /** insert a single row into the table: "ext_time_off" */
  insert_ext_time_off_one?: Maybe<Ext_Time_Off>;
  /** insert data into the table: "features" */
  insert_features?: Maybe<Features_Mutation_Response>;
  /** insert data into the table: "features_accounts" */
  insert_features_accounts?: Maybe<Features_Accounts_Mutation_Response>;
  /** insert a single row into the table: "features_accounts" */
  insert_features_accounts_one?: Maybe<Features_Accounts>;
  /** insert a single row into the table: "features" */
  insert_features_one?: Maybe<Features>;
  /** insert data into the table: "holidays" */
  insert_holidays?: Maybe<Holidays_Mutation_Response>;
  /** insert data into the table: "holidays_groups" */
  insert_holidays_groups?: Maybe<Holidays_Groups_Mutation_Response>;
  /** insert a single row into the table: "holidays_groups" */
  insert_holidays_groups_one?: Maybe<Holidays_Groups>;
  /** insert a single row into the table: "holidays" */
  insert_holidays_one?: Maybe<Holidays>;
  /** insert data into the table: "integration" */
  insert_integration?: Maybe<Integration_Mutation_Response>;
  /** insert a single row into the table: "integration" */
  insert_integration_one?: Maybe<Integration>;
  /** insert data into the table: "integration_service" */
  insert_integration_service?: Maybe<Integration_Service_Mutation_Response>;
  /** insert a single row into the table: "integration_service" */
  insert_integration_service_one?: Maybe<Integration_Service>;
  /** insert data into the table: "integration_sync" */
  insert_integration_sync?: Maybe<Integration_Sync_Mutation_Response>;
  /** insert data into the table: "integration_sync_action" */
  insert_integration_sync_action?: Maybe<Integration_Sync_Action_Mutation_Response>;
  /** insert a single row into the table: "integration_sync_action" */
  insert_integration_sync_action_one?: Maybe<Integration_Sync_Action>;
  /** insert a single row into the table: "integration_sync" */
  insert_integration_sync_one?: Maybe<Integration_Sync>;
  /** insert data into the table: "invitations" */
  insert_invitations?: Maybe<Invitations_Mutation_Response>;
  /** insert a single row into the table: "invitations" */
  insert_invitations_one?: Maybe<Invitations>;
  /** insert data into the table: "milestones" */
  insert_milestones?: Maybe<Milestones_Mutation_Response>;
  /** insert a single row into the table: "milestones" */
  insert_milestones_one?: Maybe<Milestones>;
  /** insert data into the table: "notes" */
  insert_notes?: Maybe<Notes_Mutation_Response>;
  /** insert a single row into the table: "notes" */
  insert_notes_one?: Maybe<Notes>;
  /** insert data into the table: "other_costs" */
  insert_other_costs?: Maybe<Other_Costs_Mutation_Response>;
  /** insert a single row into the table: "other_costs" */
  insert_other_costs_one?: Maybe<Other_Costs>;
  /** insert data into the table: "people" */
  insert_people?: Maybe<People_Mutation_Response>;
  /** insert data into the table: "people_notes" */
  insert_people_notes?: Maybe<People_Notes_Mutation_Response>;
  /** insert a single row into the table: "people_notes" */
  insert_people_notes_one?: Maybe<People_Notes>;
  /** insert a single row into the table: "people" */
  insert_people_one?: Maybe<People>;
  /** insert data into the table: "person_requests" */
  insert_person_requests?: Maybe<Person_Requests_Mutation_Response>;
  /** insert a single row into the table: "person_requests" */
  insert_person_requests_one?: Maybe<Person_Requests>;
  /** insert data into the table: "phases" */
  insert_phases?: Maybe<Phases_Mutation_Response>;
  /** insert a single row into the table: "phases" */
  insert_phases_one?: Maybe<Phases>;
  /** insert data into the table: "project_editors" */
  insert_project_editors?: Maybe<Project_Editors_Mutation_Response>;
  /** insert a single row into the table: "project_editors" */
  insert_project_editors_one?: Maybe<Project_Editors>;
  /** insert data into the table: "project_members" */
  insert_project_members?: Maybe<Project_Members_Mutation_Response>;
  /** insert a single row into the table: "project_members" */
  insert_project_members_one?: Maybe<Project_Members>;
  /** insert data into the table: "project_rates" */
  insert_project_rates?: Maybe<Project_Rates_Mutation_Response>;
  /** insert a single row into the table: "project_rates" */
  insert_project_rates_one?: Maybe<Project_Rates>;
  /** insert data into the table: "project_roles" */
  insert_project_roles?: Maybe<Project_Roles_Mutation_Response>;
  /** insert a single row into the table: "project_roles" */
  insert_project_roles_one?: Maybe<Project_Roles>;
  /** insert data into the table: "project_tags" */
  insert_project_tags?: Maybe<Project_Tags_Mutation_Response>;
  /** insert a single row into the table: "project_tags" */
  insert_project_tags_one?: Maybe<Project_Tags>;
  /** insert data into the table: "projects" */
  insert_projects?: Maybe<Projects_Mutation_Response>;
  /** insert a single row into the table: "projects" */
  insert_projects_one?: Maybe<Projects>;
  /** insert data into the table: "rate_cards" */
  insert_rate_cards?: Maybe<Rate_Cards_Mutation_Response>;
  /** insert a single row into the table: "rate_cards" */
  insert_rate_cards_one?: Maybe<Rate_Cards>;
  /** insert data into the table: "role_charge_out_rates" */
  insert_role_charge_out_rates?: Maybe<Role_Charge_Out_Rates_Mutation_Response>;
  /** insert a single row into the table: "role_charge_out_rates" */
  insert_role_charge_out_rates_one?: Maybe<Role_Charge_Out_Rates>;
  /** insert data into the table: "roles" */
  insert_roles?: Maybe<Roles_Mutation_Response>;
  /** insert a single row into the table: "roles" */
  insert_roles_one?: Maybe<Roles>;
  /** insert data into the table: "skills" */
  insert_skills?: Maybe<Skills_Mutation_Response>;
  /** insert a single row into the table: "skills" */
  insert_skills_one?: Maybe<Skills>;
  /** insert data into the table: "tags" */
  insert_tags?: Maybe<Tags_Mutation_Response>;
  /** insert a single row into the table: "tags" */
  insert_tags_one?: Maybe<Tags>;
  /** insert data into the table: "teams" */
  insert_teams?: Maybe<Teams_Mutation_Response>;
  /** insert a single row into the table: "teams" */
  insert_teams_one?: Maybe<Teams>;
  /** insert data into the table: "time_offs" */
  insert_time_offs?: Maybe<Time_Offs_Mutation_Response>;
  /** insert a single row into the table: "time_offs" */
  insert_time_offs_one?: Maybe<Time_Offs>;
  /** insert data into the table: "type_schedule_totals" */
  insert_type_schedule_totals?: Maybe<Type_Schedule_Totals_Mutation_Response>;
  /** insert a single row into the table: "type_schedule_totals" */
  insert_type_schedule_totals_one?: Maybe<Type_Schedule_Totals>;
  /** insert data into the table: "type_schedule_totals_roles" */
  insert_type_schedule_totals_roles?: Maybe<Type_Schedule_Totals_Roles_Mutation_Response>;
  /** insert a single row into the table: "type_schedule_totals_roles" */
  insert_type_schedule_totals_roles_one?: Maybe<Type_Schedule_Totals_Roles>;
  /** insert data into the table: "user_filter_sets" */
  insert_user_filter_sets?: Maybe<User_Filter_Sets_Mutation_Response>;
  /** insert a single row into the table: "user_filter_sets" */
  insert_user_filter_sets_one?: Maybe<User_Filter_Sets>;
  /** insert data into the table: "users" */
  insert_users?: Maybe<Users_Mutation_Response>;
  /** insert a single row into the table: "users" */
  insert_users_one?: Maybe<Users>;
  /** insert data into the table: "views" */
  insert_views?: Maybe<Views_Mutation_Response>;
  /** insert a single row into the table: "views" */
  insert_views_one?: Maybe<Views>;
  /** Revoke an api token */
  revokeApiToken: RevokeApiTokenResult;
  /** Update a custom select field */
  updateCustomSelectField: UpdateCustomSelectFieldResult;
  /** update data of the table: "accounts" */
  update_accounts?: Maybe<Accounts_Mutation_Response>;
  /** update single row of the table: "accounts" */
  update_accounts_by_pk?: Maybe<Accounts>;
  /** update multiples rows of table: "accounts" */
  update_accounts_many?: Maybe<Array<Maybe<Accounts_Mutation_Response>>>;
  /** update data of the table: "actuals" */
  update_actuals?: Maybe<Actuals_Mutation_Response>;
  /** update single row of the table: "actuals" */
  update_actuals_by_pk?: Maybe<Actuals>;
  /** update multiples rows of table: "actuals" */
  update_actuals_many?: Maybe<Array<Maybe<Actuals_Mutation_Response>>>;
  /** update data of the table: "api_tokens" */
  update_api_tokens?: Maybe<Api_Tokens_Mutation_Response>;
  /** update single row of the table: "api_tokens" */
  update_api_tokens_by_pk?: Maybe<Api_Tokens>;
  /** update multiples rows of table: "api_tokens" */
  update_api_tokens_many?: Maybe<Array<Maybe<Api_Tokens_Mutation_Response>>>;
  /** update data of the table: "assignments" */
  update_assignments?: Maybe<Assignments_Mutation_Response>;
  /** update single row of the table: "assignments" */
  update_assignments_by_pk?: Maybe<Assignments>;
  /** update multiples rows of table: "assignments" */
  update_assignments_many?: Maybe<Array<Maybe<Assignments_Mutation_Response>>>;
  /** update data of the table: "audit.logged_actions" */
  update_audit_logged_actions?: Maybe<Audit_Logged_Actions_Mutation_Response>;
  /** update single row of the table: "audit.logged_actions" */
  update_audit_logged_actions_by_pk?: Maybe<Audit_Logged_Actions>;
  /** update multiples rows of table: "audit.logged_actions" */
  update_audit_logged_actions_many?: Maybe<Array<Maybe<Audit_Logged_Actions_Mutation_Response>>>;
  /** update data of the table: "audit.recently_logged_actions" */
  update_audit_recently_logged_actions?: Maybe<Audit_Recently_Logged_Actions_Mutation_Response>;
  /** update multiples rows of table: "audit.recently_logged_actions" */
  update_audit_recently_logged_actions_many?: Maybe<Array<Maybe<Audit_Recently_Logged_Actions_Mutation_Response>>>;
  /** update data of the table: "cancel_reasons" */
  update_cancel_reasons?: Maybe<Cancel_Reasons_Mutation_Response>;
  /** update single row of the table: "cancel_reasons" */
  update_cancel_reasons_by_pk?: Maybe<Cancel_Reasons>;
  /** update multiples rows of table: "cancel_reasons" */
  update_cancel_reasons_many?: Maybe<Array<Maybe<Cancel_Reasons_Mutation_Response>>>;
  /** update data of the table: "clients" */
  update_clients?: Maybe<Clients_Mutation_Response>;
  /** update single row of the table: "clients" */
  update_clients_by_pk?: Maybe<Clients>;
  /** update multiples rows of table: "clients" */
  update_clients_many?: Maybe<Array<Maybe<Clients_Mutation_Response>>>;
  /** update data of the table: "competencies" */
  update_competencies?: Maybe<Competencies_Mutation_Response>;
  /** update single row of the table: "competencies" */
  update_competencies_by_pk?: Maybe<Competencies>;
  /** update multiples rows of table: "competencies" */
  update_competencies_many?: Maybe<Array<Maybe<Competencies_Mutation_Response>>>;
  /** update data of the table: "contracts" */
  update_contracts?: Maybe<Contracts_Mutation_Response>;
  /** update single row of the table: "contracts" */
  update_contracts_by_pk?: Maybe<Contracts>;
  /** update multiples rows of table: "contracts" */
  update_contracts_many?: Maybe<Array<Maybe<Contracts_Mutation_Response>>>;
  /** update data of the table: "custom_select_options" */
  update_custom_select_options?: Maybe<Custom_Select_Options_Mutation_Response>;
  /** update single row of the table: "custom_select_options" */
  update_custom_select_options_by_pk?: Maybe<Custom_Select_Options>;
  /** update multiples rows of table: "custom_select_options" */
  update_custom_select_options_many?: Maybe<Array<Maybe<Custom_Select_Options_Mutation_Response>>>;
  /** update data of the table: "custom_select_types" */
  update_custom_select_types?: Maybe<Custom_Select_Types_Mutation_Response>;
  /** update single row of the table: "custom_select_types" */
  update_custom_select_types_by_pk?: Maybe<Custom_Select_Types>;
  /** update multiples rows of table: "custom_select_types" */
  update_custom_select_types_many?: Maybe<Array<Maybe<Custom_Select_Types_Mutation_Response>>>;
  /** update data of the table: "custom_select_values" */
  update_custom_select_values?: Maybe<Custom_Select_Values_Mutation_Response>;
  /** update single row of the table: "custom_select_values" */
  update_custom_select_values_by_pk?: Maybe<Custom_Select_Values>;
  /** update multiples rows of table: "custom_select_values" */
  update_custom_select_values_many?: Maybe<Array<Maybe<Custom_Select_Values_Mutation_Response>>>;
  /** update data of the table: "custom_text_types" */
  update_custom_text_types?: Maybe<Custom_Text_Types_Mutation_Response>;
  /** update single row of the table: "custom_text_types" */
  update_custom_text_types_by_pk?: Maybe<Custom_Text_Types>;
  /** update multiples rows of table: "custom_text_types" */
  update_custom_text_types_many?: Maybe<Array<Maybe<Custom_Text_Types_Mutation_Response>>>;
  /** update data of the table: "custom_text_values" */
  update_custom_text_values?: Maybe<Custom_Text_Values_Mutation_Response>;
  /** update single row of the table: "custom_text_values" */
  update_custom_text_values_by_pk?: Maybe<Custom_Text_Values>;
  /** update multiples rows of table: "custom_text_values" */
  update_custom_text_values_many?: Maybe<Array<Maybe<Custom_Text_Values_Mutation_Response>>>;
  /** update data of the table: "ext_contract" */
  update_ext_contract?: Maybe<Ext_Contract_Mutation_Response>;
  /** update single row of the table: "ext_contract" */
  update_ext_contract_by_pk?: Maybe<Ext_Contract>;
  /** update multiples rows of table: "ext_contract" */
  update_ext_contract_many?: Maybe<Array<Maybe<Ext_Contract_Mutation_Response>>>;
  /** update data of the table: "ext_person" */
  update_ext_person?: Maybe<Ext_Person_Mutation_Response>;
  /** update single row of the table: "ext_person" */
  update_ext_person_by_pk?: Maybe<Ext_Person>;
  /** update data of the table: "ext_person_link" */
  update_ext_person_link?: Maybe<Ext_Person_Link_Mutation_Response>;
  /** update single row of the table: "ext_person_link" */
  update_ext_person_link_by_pk?: Maybe<Ext_Person_Link>;
  /** update multiples rows of table: "ext_person_link" */
  update_ext_person_link_many?: Maybe<Array<Maybe<Ext_Person_Link_Mutation_Response>>>;
  /** update multiples rows of table: "ext_person" */
  update_ext_person_many?: Maybe<Array<Maybe<Ext_Person_Mutation_Response>>>;
  /** update data of the table: "ext_role" */
  update_ext_role?: Maybe<Ext_Role_Mutation_Response>;
  /** update single row of the table: "ext_role" */
  update_ext_role_by_pk?: Maybe<Ext_Role>;
  /** update multiples rows of table: "ext_role" */
  update_ext_role_many?: Maybe<Array<Maybe<Ext_Role_Mutation_Response>>>;
  /** update data of the table: "ext_team" */
  update_ext_team?: Maybe<Ext_Team_Mutation_Response>;
  /** update single row of the table: "ext_team" */
  update_ext_team_by_pk?: Maybe<Ext_Team>;
  /** update multiples rows of table: "ext_team" */
  update_ext_team_many?: Maybe<Array<Maybe<Ext_Team_Mutation_Response>>>;
  /** update data of the table: "ext_time_off" */
  update_ext_time_off?: Maybe<Ext_Time_Off_Mutation_Response>;
  /** update single row of the table: "ext_time_off" */
  update_ext_time_off_by_pk?: Maybe<Ext_Time_Off>;
  /** update data of the table: "ext_time_off_link" */
  update_ext_time_off_link?: Maybe<Ext_Time_Off_Link_Mutation_Response>;
  /** update single row of the table: "ext_time_off_link" */
  update_ext_time_off_link_by_pk?: Maybe<Ext_Time_Off_Link>;
  /** update multiples rows of table: "ext_time_off_link" */
  update_ext_time_off_link_many?: Maybe<Array<Maybe<Ext_Time_Off_Link_Mutation_Response>>>;
  /** update multiples rows of table: "ext_time_off" */
  update_ext_time_off_many?: Maybe<Array<Maybe<Ext_Time_Off_Mutation_Response>>>;
  /** update data of the table: "features" */
  update_features?: Maybe<Features_Mutation_Response>;
  /** update data of the table: "features_accounts" */
  update_features_accounts?: Maybe<Features_Accounts_Mutation_Response>;
  /** update single row of the table: "features_accounts" */
  update_features_accounts_by_pk?: Maybe<Features_Accounts>;
  /** update multiples rows of table: "features_accounts" */
  update_features_accounts_many?: Maybe<Array<Maybe<Features_Accounts_Mutation_Response>>>;
  /** update single row of the table: "features" */
  update_features_by_pk?: Maybe<Features>;
  /** update multiples rows of table: "features" */
  update_features_many?: Maybe<Array<Maybe<Features_Mutation_Response>>>;
  /** update data of the table: "holidays" */
  update_holidays?: Maybe<Holidays_Mutation_Response>;
  /** update single row of the table: "holidays" */
  update_holidays_by_pk?: Maybe<Holidays>;
  /** update data of the table: "holidays_groups" */
  update_holidays_groups?: Maybe<Holidays_Groups_Mutation_Response>;
  /** update single row of the table: "holidays_groups" */
  update_holidays_groups_by_pk?: Maybe<Holidays_Groups>;
  /** update multiples rows of table: "holidays_groups" */
  update_holidays_groups_many?: Maybe<Array<Maybe<Holidays_Groups_Mutation_Response>>>;
  /** update multiples rows of table: "holidays" */
  update_holidays_many?: Maybe<Array<Maybe<Holidays_Mutation_Response>>>;
  /** update data of the table: "integration" */
  update_integration?: Maybe<Integration_Mutation_Response>;
  /** update single row of the table: "integration" */
  update_integration_by_pk?: Maybe<Integration>;
  /** update multiples rows of table: "integration" */
  update_integration_many?: Maybe<Array<Maybe<Integration_Mutation_Response>>>;
  /** update data of the table: "integration_service" */
  update_integration_service?: Maybe<Integration_Service_Mutation_Response>;
  /** update single row of the table: "integration_service" */
  update_integration_service_by_pk?: Maybe<Integration_Service>;
  /** update multiples rows of table: "integration_service" */
  update_integration_service_many?: Maybe<Array<Maybe<Integration_Service_Mutation_Response>>>;
  /** update data of the table: "integration_sync" */
  update_integration_sync?: Maybe<Integration_Sync_Mutation_Response>;
  /** update data of the table: "integration_sync_action" */
  update_integration_sync_action?: Maybe<Integration_Sync_Action_Mutation_Response>;
  /** update single row of the table: "integration_sync_action" */
  update_integration_sync_action_by_pk?: Maybe<Integration_Sync_Action>;
  /** update multiples rows of table: "integration_sync_action" */
  update_integration_sync_action_many?: Maybe<Array<Maybe<Integration_Sync_Action_Mutation_Response>>>;
  /** update single row of the table: "integration_sync" */
  update_integration_sync_by_pk?: Maybe<Integration_Sync>;
  /** update multiples rows of table: "integration_sync" */
  update_integration_sync_many?: Maybe<Array<Maybe<Integration_Sync_Mutation_Response>>>;
  /** update data of the table: "invitations" */
  update_invitations?: Maybe<Invitations_Mutation_Response>;
  /** update single row of the table: "invitations" */
  update_invitations_by_pk?: Maybe<Invitations>;
  /** update multiples rows of table: "invitations" */
  update_invitations_many?: Maybe<Array<Maybe<Invitations_Mutation_Response>>>;
  /** update data of the table: "milestones" */
  update_milestones?: Maybe<Milestones_Mutation_Response>;
  /** update single row of the table: "milestones" */
  update_milestones_by_pk?: Maybe<Milestones>;
  /** update multiples rows of table: "milestones" */
  update_milestones_many?: Maybe<Array<Maybe<Milestones_Mutation_Response>>>;
  /** update data of the table: "notes" */
  update_notes?: Maybe<Notes_Mutation_Response>;
  /** update single row of the table: "notes" */
  update_notes_by_pk?: Maybe<Notes>;
  /** update multiples rows of table: "notes" */
  update_notes_many?: Maybe<Array<Maybe<Notes_Mutation_Response>>>;
  /** update data of the table: "other_costs" */
  update_other_costs?: Maybe<Other_Costs_Mutation_Response>;
  /** update single row of the table: "other_costs" */
  update_other_costs_by_pk?: Maybe<Other_Costs>;
  /** update multiples rows of table: "other_costs" */
  update_other_costs_many?: Maybe<Array<Maybe<Other_Costs_Mutation_Response>>>;
  /** update data of the table: "people" */
  update_people?: Maybe<People_Mutation_Response>;
  /** update single row of the table: "people" */
  update_people_by_pk?: Maybe<People>;
  /** update multiples rows of table: "people" */
  update_people_many?: Maybe<Array<Maybe<People_Mutation_Response>>>;
  /** update data of the table: "people_notes" */
  update_people_notes?: Maybe<People_Notes_Mutation_Response>;
  /** update single row of the table: "people_notes" */
  update_people_notes_by_pk?: Maybe<People_Notes>;
  /** update multiples rows of table: "people_notes" */
  update_people_notes_many?: Maybe<Array<Maybe<People_Notes_Mutation_Response>>>;
  /** update data of the table: "person_requests" */
  update_person_requests?: Maybe<Person_Requests_Mutation_Response>;
  /** update single row of the table: "person_requests" */
  update_person_requests_by_pk?: Maybe<Person_Requests>;
  /** update multiples rows of table: "person_requests" */
  update_person_requests_many?: Maybe<Array<Maybe<Person_Requests_Mutation_Response>>>;
  /** update data of the table: "phases" */
  update_phases?: Maybe<Phases_Mutation_Response>;
  /** update single row of the table: "phases" */
  update_phases_by_pk?: Maybe<Phases>;
  /** update multiples rows of table: "phases" */
  update_phases_many?: Maybe<Array<Maybe<Phases_Mutation_Response>>>;
  /** update data of the table: "project_editors" */
  update_project_editors?: Maybe<Project_Editors_Mutation_Response>;
  /** update single row of the table: "project_editors" */
  update_project_editors_by_pk?: Maybe<Project_Editors>;
  /** update multiples rows of table: "project_editors" */
  update_project_editors_many?: Maybe<Array<Maybe<Project_Editors_Mutation_Response>>>;
  /** update data of the table: "project_members" */
  update_project_members?: Maybe<Project_Members_Mutation_Response>;
  /** update single row of the table: "project_members" */
  update_project_members_by_pk?: Maybe<Project_Members>;
  /** update multiples rows of table: "project_members" */
  update_project_members_many?: Maybe<Array<Maybe<Project_Members_Mutation_Response>>>;
  /** update data of the table: "project_rates" */
  update_project_rates?: Maybe<Project_Rates_Mutation_Response>;
  /** update single row of the table: "project_rates" */
  update_project_rates_by_pk?: Maybe<Project_Rates>;
  /** update multiples rows of table: "project_rates" */
  update_project_rates_many?: Maybe<Array<Maybe<Project_Rates_Mutation_Response>>>;
  /** update data of the table: "project_roles" */
  update_project_roles?: Maybe<Project_Roles_Mutation_Response>;
  /** update single row of the table: "project_roles" */
  update_project_roles_by_pk?: Maybe<Project_Roles>;
  /** update multiples rows of table: "project_roles" */
  update_project_roles_many?: Maybe<Array<Maybe<Project_Roles_Mutation_Response>>>;
  /** update data of the table: "project_tags" */
  update_project_tags?: Maybe<Project_Tags_Mutation_Response>;
  /** update single row of the table: "project_tags" */
  update_project_tags_by_pk?: Maybe<Project_Tags>;
  /** update multiples rows of table: "project_tags" */
  update_project_tags_many?: Maybe<Array<Maybe<Project_Tags_Mutation_Response>>>;
  /** update data of the table: "projects" */
  update_projects?: Maybe<Projects_Mutation_Response>;
  /** update single row of the table: "projects" */
  update_projects_by_pk?: Maybe<Projects>;
  /** update multiples rows of table: "projects" */
  update_projects_many?: Maybe<Array<Maybe<Projects_Mutation_Response>>>;
  /** update data of the table: "rate_cards" */
  update_rate_cards?: Maybe<Rate_Cards_Mutation_Response>;
  /** update single row of the table: "rate_cards" */
  update_rate_cards_by_pk?: Maybe<Rate_Cards>;
  /** update multiples rows of table: "rate_cards" */
  update_rate_cards_many?: Maybe<Array<Maybe<Rate_Cards_Mutation_Response>>>;
  /** update data of the table: "role_charge_out_rates" */
  update_role_charge_out_rates?: Maybe<Role_Charge_Out_Rates_Mutation_Response>;
  /** update single row of the table: "role_charge_out_rates" */
  update_role_charge_out_rates_by_pk?: Maybe<Role_Charge_Out_Rates>;
  /** update multiples rows of table: "role_charge_out_rates" */
  update_role_charge_out_rates_many?: Maybe<Array<Maybe<Role_Charge_Out_Rates_Mutation_Response>>>;
  /** update data of the table: "roles" */
  update_roles?: Maybe<Roles_Mutation_Response>;
  /** update single row of the table: "roles" */
  update_roles_by_pk?: Maybe<Roles>;
  /** update multiples rows of table: "roles" */
  update_roles_many?: Maybe<Array<Maybe<Roles_Mutation_Response>>>;
  /** update data of the table: "skills" */
  update_skills?: Maybe<Skills_Mutation_Response>;
  /** update single row of the table: "skills" */
  update_skills_by_pk?: Maybe<Skills>;
  /** update multiples rows of table: "skills" */
  update_skills_many?: Maybe<Array<Maybe<Skills_Mutation_Response>>>;
  /** update data of the table: "tags" */
  update_tags?: Maybe<Tags_Mutation_Response>;
  /** update single row of the table: "tags" */
  update_tags_by_pk?: Maybe<Tags>;
  /** update multiples rows of table: "tags" */
  update_tags_many?: Maybe<Array<Maybe<Tags_Mutation_Response>>>;
  /** update data of the table: "teams" */
  update_teams?: Maybe<Teams_Mutation_Response>;
  /** update single row of the table: "teams" */
  update_teams_by_pk?: Maybe<Teams>;
  /** update multiples rows of table: "teams" */
  update_teams_many?: Maybe<Array<Maybe<Teams_Mutation_Response>>>;
  /** update data of the table: "time_offs" */
  update_time_offs?: Maybe<Time_Offs_Mutation_Response>;
  /** update single row of the table: "time_offs" */
  update_time_offs_by_pk?: Maybe<Time_Offs>;
  /** update multiples rows of table: "time_offs" */
  update_time_offs_many?: Maybe<Array<Maybe<Time_Offs_Mutation_Response>>>;
  /** update data of the table: "type_schedule_totals" */
  update_type_schedule_totals?: Maybe<Type_Schedule_Totals_Mutation_Response>;
  /** update single row of the table: "type_schedule_totals" */
  update_type_schedule_totals_by_pk?: Maybe<Type_Schedule_Totals>;
  /** update multiples rows of table: "type_schedule_totals" */
  update_type_schedule_totals_many?: Maybe<Array<Maybe<Type_Schedule_Totals_Mutation_Response>>>;
  /** update data of the table: "type_schedule_totals_roles" */
  update_type_schedule_totals_roles?: Maybe<Type_Schedule_Totals_Roles_Mutation_Response>;
  /** update single row of the table: "type_schedule_totals_roles" */
  update_type_schedule_totals_roles_by_pk?: Maybe<Type_Schedule_Totals_Roles>;
  /** update multiples rows of table: "type_schedule_totals_roles" */
  update_type_schedule_totals_roles_many?: Maybe<Array<Maybe<Type_Schedule_Totals_Roles_Mutation_Response>>>;
  /** update data of the table: "user_filter_sets" */
  update_user_filter_sets?: Maybe<User_Filter_Sets_Mutation_Response>;
  /** update single row of the table: "user_filter_sets" */
  update_user_filter_sets_by_pk?: Maybe<User_Filter_Sets>;
  /** update multiples rows of table: "user_filter_sets" */
  update_user_filter_sets_many?: Maybe<Array<Maybe<User_Filter_Sets_Mutation_Response>>>;
  /** update data of the table: "users" */
  update_users?: Maybe<Users_Mutation_Response>;
  /** update single row of the table: "users" */
  update_users_by_pk?: Maybe<Users>;
  /** update multiples rows of table: "users" */
  update_users_many?: Maybe<Array<Maybe<Users_Mutation_Response>>>;
  /** update data of the table: "views" */
  update_views?: Maybe<Views_Mutation_Response>;
  /** update single row of the table: "views" */
  update_views_by_pk?: Maybe<Views>;
  /** update multiples rows of table: "views" */
  update_views_many?: Maybe<Array<Maybe<Views_Mutation_Response>>>;
};


/** mutation root */
export type Mutation_RootAction_Actual_Bulk_ChangesArgs = {
  input?: InputMaybe<ActualBulkChangesInput>;
};


/** mutation root */
export type Mutation_RootAction_Assignment_Bulk_ChangesArgs = {
  input: AssignmentBulkChangesInput;
};


/** mutation root */
export type Mutation_RootAction_Ext_Person_Link_UpdateArgs = {
  input: ExtPersonLinkUpdateInput;
};


/** mutation root */
export type Mutation_RootAction_Holidays_Bulk_UpdateArgs = {
  input: HolidaysBulkUpdateInput;
};


/** mutation root */
export type Mutation_RootAction_Holidays_Time_Off_Bulk_CreateArgs = {
  input: HolidaysTimeOffBulkCreateInput;
};


/** mutation root */
export type Mutation_RootAction_Holidays_Time_Off_Bulk_DeleteArgs = {
  input: HolidaysTimeOffBulkDeleteInput;
};


/** mutation root */
export type Mutation_RootAction_Integration_CreateArgs = {
  input: IntegrationCreateInput;
};


/** mutation root */
export type Mutation_RootAction_Integration_DeleteArgs = {
  input: IntegrationDeleteInput;
};


/** mutation root */
export type Mutation_RootAction_Integration_SyncArgs = {
  input: IntegrationSyncInput;
};


/** mutation root */
export type Mutation_RootAction_Integration_UpdateArgs = {
  input: IntegrationUpdateInput;
};


/** mutation root */
export type Mutation_RootAction_Invitation_RenewArgs = {
  input: InvitationRenewInput;
};


/** mutation root */
export type Mutation_RootAction_Other_Cost_Bulk_CreateArgs = {
  input: Array<OtherCostBulkCreateInput>;
  project_id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootAction_Other_Cost_Bulk_UpdateArgs = {
  input: Array<OtherCostBulkUpdateInput>;
  project_id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootAction_Person_Bulk_CreateArgs = {
  input: PersonBulkCreateInput;
};


/** mutation root */
export type Mutation_RootAction_Person_Bulk_UpdateArgs = {
  input: PersonBulkUpdateInput;
};


/** mutation root */
export type Mutation_RootAction_Person_CreateArgs = {
  input: PersonCreateInput;
};


/** mutation root */
export type Mutation_RootAction_Person_DeleteArgs = {
  input: PersonDeleteInput;
};


/** mutation root */
export type Mutation_RootAction_Person_Note_CreateArgs = {
  input: PersonNoteCreateInput;
};


/** mutation root */
export type Mutation_RootAction_Person_Note_UpdateArgs = {
  input: PersonNoteUpdateInput;
};


/** mutation root */
export type Mutation_RootAction_Person_UpdateArgs = {
  input: PersonUpdateInput;
};


/** mutation root */
export type Mutation_RootAction_Placeholder_Bulk_CreateArgs = {
  input: PlaceholderBulkCreateInput;
};


/** mutation root */
export type Mutation_RootAction_Placeholder_DeleteArgs = {
  input: PlaceholderDeleteInput;
};


/** mutation root */
export type Mutation_RootAction_Placeholder_UpdateArgs = {
  input: PlaceholderUpdateInput;
};


/** mutation root */
export type Mutation_RootAction_Project_Budget_UpdateArgs = {
  input: ProjectBudgetUpdateInput;
};


/** mutation root */
export type Mutation_RootAction_Project_Bulk_CreateArgs = {
  input: ProjectBulkCreateInput;
};


/** mutation root */
export type Mutation_RootAction_Project_Bulk_UpdateArgs = {
  input: ProjectBulkUpdateInput;
};


/** mutation root */
export type Mutation_RootAction_Project_CreateArgs = {
  input: ProjectCreateInput;
};


/** mutation root */
export type Mutation_RootAction_Project_DuplicateArgs = {
  input: ProjectDuplicateInput;
};


/** mutation root */
export type Mutation_RootAction_Project_Member_Bulk_CreateArgs = {
  input: ProjectMemberBulkCreateInput;
};


/** mutation root */
export type Mutation_RootAction_Project_Member_DeleteArgs = {
  input: ProjectMember;
};


/** mutation root */
export type Mutation_RootAction_Project_Note_CreateArgs = {
  input: ProjectNoteCreateInput;
};


/** mutation root */
export type Mutation_RootAction_Project_Note_UpdateArgs = {
  input: ProjectNoteUpdateInput;
};


/** mutation root */
export type Mutation_RootAction_Project_RescheduleArgs = {
  input: ProjectRescheduleInput;
};


/** mutation root */
export type Mutation_RootAction_Project_UpdateArgs = {
  input: ProjectUpdateInput;
};


/** mutation root */
export type Mutation_RootAction_Rate_Card_CreateArgs = {
  input: RateCardCreateInput;
};


/** mutation root */
export type Mutation_RootAction_Rate_Card_UpdateArgs = {
  input: RateCardUpdateInput;
};


/** mutation root */
export type Mutation_RootAction_Role_CreateArgs = {
  input: RoleCreateInput;
};


/** mutation root */
export type Mutation_RootAction_Role_UpdateArgs = {
  input: RoleUpdateInput;
};


/** mutation root */
export type Mutation_RootAction_Subscription_UpdateArgs = {
  input: SubscriptionUpdateInput;
};


/** mutation root */
export type Mutation_RootAction_Tag_Bulk_CreateArgs = {
  input: TagBulkCreateInput;
};


/** mutation root */
export type Mutation_RootBulkUpdateRoleArgs = {
  input: RoleBulkUpdateInput;
};


/** mutation root */
export type Mutation_RootDeleteProjectArgs = {
  projectId: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_AccountsArgs = {
  where: Accounts_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Accounts_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_ActualsArgs = {
  where: Actuals_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Actuals_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Api_TokensArgs = {
  where: Api_Tokens_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Api_Tokens_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_AssignmentsArgs = {
  where: Assignments_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Assignments_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Audit_Logged_ActionsArgs = {
  where: Audit_Logged_Actions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Audit_Logged_Actions_By_PkArgs = {
  event_id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Audit_Recently_Logged_ActionsArgs = {
  where: Audit_Recently_Logged_Actions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Cancel_ReasonsArgs = {
  where: Cancel_Reasons_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Cancel_Reasons_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_ClientsArgs = {
  where: Clients_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Clients_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_CompetenciesArgs = {
  where: Competencies_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Competencies_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_ContractsArgs = {
  where: Contracts_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Contracts_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Custom_Select_OptionsArgs = {
  where: Custom_Select_Options_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Custom_Select_Options_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Custom_Select_TypesArgs = {
  where: Custom_Select_Types_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Custom_Select_Types_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Custom_Select_ValuesArgs = {
  where: Custom_Select_Values_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Custom_Select_Values_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Custom_Text_TypesArgs = {
  where: Custom_Text_Types_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Custom_Text_Types_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Custom_Text_ValuesArgs = {
  where: Custom_Text_Values_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Custom_Text_Values_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Ext_ContractArgs = {
  where: Ext_Contract_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Ext_Contract_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Ext_PersonArgs = {
  where: Ext_Person_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Ext_Person_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Ext_Person_LinkArgs = {
  where: Ext_Person_Link_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Ext_Person_Link_By_PkArgs = {
  ext_person_id: Scalars['Int']['input'];
  person_id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Ext_RoleArgs = {
  where: Ext_Role_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Ext_Role_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Ext_TeamArgs = {
  where: Ext_Team_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Ext_Team_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Ext_Time_OffArgs = {
  where: Ext_Time_Off_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Ext_Time_Off_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Ext_Time_Off_LinkArgs = {
  where: Ext_Time_Off_Link_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Ext_Time_Off_Link_By_PkArgs = {
  ext_time_off_id: Scalars['Int']['input'];
  time_off_id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_FeaturesArgs = {
  where: Features_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Features_AccountsArgs = {
  where: Features_Accounts_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Features_Accounts_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Features_By_PkArgs = {
  id: Scalars['String']['input'];
};


/** mutation root */
export type Mutation_RootDelete_HolidaysArgs = {
  where: Holidays_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Holidays_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Holidays_GroupsArgs = {
  where: Holidays_Groups_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Holidays_Groups_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_IntegrationArgs = {
  where: Integration_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Integration_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Integration_ServiceArgs = {
  where: Integration_Service_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Integration_Service_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Integration_SyncArgs = {
  where: Integration_Sync_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Integration_Sync_ActionArgs = {
  where: Integration_Sync_Action_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Integration_Sync_Action_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Integration_Sync_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_InvitationsArgs = {
  where: Invitations_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Invitations_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_MilestonesArgs = {
  where: Milestones_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Milestones_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_NotesArgs = {
  where: Notes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Notes_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Other_CostsArgs = {
  where: Other_Costs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Other_Costs_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_PeopleArgs = {
  where: People_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_People_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_People_NotesArgs = {
  where: People_Notes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_People_Notes_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Person_RequestsArgs = {
  where: Person_Requests_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Person_Requests_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_PhasesArgs = {
  where: Phases_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Phases_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Project_EditorsArgs = {
  where: Project_Editors_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Project_Editors_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Project_MembersArgs = {
  where: Project_Members_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Project_Members_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Project_RatesArgs = {
  where: Project_Rates_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Project_Rates_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Project_RolesArgs = {
  where: Project_Roles_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Project_Roles_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Project_TagsArgs = {
  where: Project_Tags_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Project_Tags_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_ProjectsArgs = {
  where: Projects_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Projects_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Rate_CardsArgs = {
  where: Rate_Cards_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Rate_Cards_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Role_Charge_Out_RatesArgs = {
  where: Role_Charge_Out_Rates_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Role_Charge_Out_Rates_By_PkArgs = {
  rate_card_id: Scalars['Int']['input'];
  role_id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_RolesArgs = {
  where: Roles_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Roles_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_SkillsArgs = {
  where: Skills_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Skills_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_TagsArgs = {
  where: Tags_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Tags_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_TeamsArgs = {
  where: Teams_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Teams_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Time_OffsArgs = {
  where: Time_Offs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Time_Offs_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Type_Schedule_TotalsArgs = {
  where: Type_Schedule_Totals_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Type_Schedule_Totals_By_PkArgs = {
  project_id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Type_Schedule_Totals_RolesArgs = {
  where: Type_Schedule_Totals_Roles_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Type_Schedule_Totals_Roles_By_PkArgs = {
  project_id: Scalars['Int']['input'];
  role_id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_User_Filter_SetsArgs = {
  where: User_Filter_Sets_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_User_Filter_Sets_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_UsersArgs = {
  where: Users_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Users_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_ViewsArgs = {
  where: Views_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Views_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootGenerateApiTokenArgs = {
  expires: Scalars['String']['input'];
  name: Scalars['String']['input'];
  permissions: Array<ApiTokenPermission>;
};


/** mutation root */
export type Mutation_RootInsert_AccountsArgs = {
  objects: Array<Accounts_Insert_Input>;
  on_conflict?: InputMaybe<Accounts_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Accounts_OneArgs = {
  object: Accounts_Insert_Input;
  on_conflict?: InputMaybe<Accounts_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ActualsArgs = {
  objects: Array<Actuals_Insert_Input>;
  on_conflict?: InputMaybe<Actuals_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Actuals_OneArgs = {
  object: Actuals_Insert_Input;
  on_conflict?: InputMaybe<Actuals_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Api_TokensArgs = {
  objects: Array<Api_Tokens_Insert_Input>;
  on_conflict?: InputMaybe<Api_Tokens_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Api_Tokens_OneArgs = {
  object: Api_Tokens_Insert_Input;
  on_conflict?: InputMaybe<Api_Tokens_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_AssignmentsArgs = {
  objects: Array<Assignments_Insert_Input>;
  on_conflict?: InputMaybe<Assignments_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Assignments_OneArgs = {
  object: Assignments_Insert_Input;
  on_conflict?: InputMaybe<Assignments_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Audit_Logged_ActionsArgs = {
  objects: Array<Audit_Logged_Actions_Insert_Input>;
  on_conflict?: InputMaybe<Audit_Logged_Actions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Audit_Logged_Actions_OneArgs = {
  object: Audit_Logged_Actions_Insert_Input;
  on_conflict?: InputMaybe<Audit_Logged_Actions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Audit_Recently_Logged_ActionsArgs = {
  objects: Array<Audit_Recently_Logged_Actions_Insert_Input>;
};


/** mutation root */
export type Mutation_RootInsert_Audit_Recently_Logged_Actions_OneArgs = {
  object: Audit_Recently_Logged_Actions_Insert_Input;
};


/** mutation root */
export type Mutation_RootInsert_Cancel_ReasonsArgs = {
  objects: Array<Cancel_Reasons_Insert_Input>;
  on_conflict?: InputMaybe<Cancel_Reasons_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Cancel_Reasons_OneArgs = {
  object: Cancel_Reasons_Insert_Input;
  on_conflict?: InputMaybe<Cancel_Reasons_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ClientsArgs = {
  objects: Array<Clients_Insert_Input>;
  on_conflict?: InputMaybe<Clients_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Clients_OneArgs = {
  object: Clients_Insert_Input;
  on_conflict?: InputMaybe<Clients_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_CompetenciesArgs = {
  objects: Array<Competencies_Insert_Input>;
  on_conflict?: InputMaybe<Competencies_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Competencies_OneArgs = {
  object: Competencies_Insert_Input;
  on_conflict?: InputMaybe<Competencies_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ContractsArgs = {
  objects: Array<Contracts_Insert_Input>;
  on_conflict?: InputMaybe<Contracts_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Contracts_OneArgs = {
  object: Contracts_Insert_Input;
  on_conflict?: InputMaybe<Contracts_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Custom_Select_OptionsArgs = {
  objects: Array<Custom_Select_Options_Insert_Input>;
  on_conflict?: InputMaybe<Custom_Select_Options_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Custom_Select_Options_OneArgs = {
  object: Custom_Select_Options_Insert_Input;
  on_conflict?: InputMaybe<Custom_Select_Options_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Custom_Select_TypesArgs = {
  objects: Array<Custom_Select_Types_Insert_Input>;
  on_conflict?: InputMaybe<Custom_Select_Types_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Custom_Select_Types_OneArgs = {
  object: Custom_Select_Types_Insert_Input;
  on_conflict?: InputMaybe<Custom_Select_Types_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Custom_Select_ValuesArgs = {
  objects: Array<Custom_Select_Values_Insert_Input>;
  on_conflict?: InputMaybe<Custom_Select_Values_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Custom_Select_Values_OneArgs = {
  object: Custom_Select_Values_Insert_Input;
  on_conflict?: InputMaybe<Custom_Select_Values_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Custom_Text_TypesArgs = {
  objects: Array<Custom_Text_Types_Insert_Input>;
  on_conflict?: InputMaybe<Custom_Text_Types_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Custom_Text_Types_OneArgs = {
  object: Custom_Text_Types_Insert_Input;
  on_conflict?: InputMaybe<Custom_Text_Types_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Custom_Text_ValuesArgs = {
  objects: Array<Custom_Text_Values_Insert_Input>;
  on_conflict?: InputMaybe<Custom_Text_Values_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Custom_Text_Values_OneArgs = {
  object: Custom_Text_Values_Insert_Input;
  on_conflict?: InputMaybe<Custom_Text_Values_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Ext_ContractArgs = {
  objects: Array<Ext_Contract_Insert_Input>;
  on_conflict?: InputMaybe<Ext_Contract_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Ext_Contract_OneArgs = {
  object: Ext_Contract_Insert_Input;
  on_conflict?: InputMaybe<Ext_Contract_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Ext_PersonArgs = {
  objects: Array<Ext_Person_Insert_Input>;
  on_conflict?: InputMaybe<Ext_Person_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Ext_Person_LinkArgs = {
  objects: Array<Ext_Person_Link_Insert_Input>;
  on_conflict?: InputMaybe<Ext_Person_Link_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Ext_Person_Link_OneArgs = {
  object: Ext_Person_Link_Insert_Input;
  on_conflict?: InputMaybe<Ext_Person_Link_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Ext_Person_OneArgs = {
  object: Ext_Person_Insert_Input;
  on_conflict?: InputMaybe<Ext_Person_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Ext_RoleArgs = {
  objects: Array<Ext_Role_Insert_Input>;
  on_conflict?: InputMaybe<Ext_Role_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Ext_Role_OneArgs = {
  object: Ext_Role_Insert_Input;
  on_conflict?: InputMaybe<Ext_Role_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Ext_TeamArgs = {
  objects: Array<Ext_Team_Insert_Input>;
  on_conflict?: InputMaybe<Ext_Team_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Ext_Team_OneArgs = {
  object: Ext_Team_Insert_Input;
  on_conflict?: InputMaybe<Ext_Team_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Ext_Time_OffArgs = {
  objects: Array<Ext_Time_Off_Insert_Input>;
  on_conflict?: InputMaybe<Ext_Time_Off_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Ext_Time_Off_LinkArgs = {
  objects: Array<Ext_Time_Off_Link_Insert_Input>;
  on_conflict?: InputMaybe<Ext_Time_Off_Link_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Ext_Time_Off_Link_OneArgs = {
  object: Ext_Time_Off_Link_Insert_Input;
  on_conflict?: InputMaybe<Ext_Time_Off_Link_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Ext_Time_Off_OneArgs = {
  object: Ext_Time_Off_Insert_Input;
  on_conflict?: InputMaybe<Ext_Time_Off_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_FeaturesArgs = {
  objects: Array<Features_Insert_Input>;
  on_conflict?: InputMaybe<Features_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Features_AccountsArgs = {
  objects: Array<Features_Accounts_Insert_Input>;
  on_conflict?: InputMaybe<Features_Accounts_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Features_Accounts_OneArgs = {
  object: Features_Accounts_Insert_Input;
  on_conflict?: InputMaybe<Features_Accounts_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Features_OneArgs = {
  object: Features_Insert_Input;
  on_conflict?: InputMaybe<Features_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_HolidaysArgs = {
  objects: Array<Holidays_Insert_Input>;
  on_conflict?: InputMaybe<Holidays_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Holidays_GroupsArgs = {
  objects: Array<Holidays_Groups_Insert_Input>;
  on_conflict?: InputMaybe<Holidays_Groups_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Holidays_Groups_OneArgs = {
  object: Holidays_Groups_Insert_Input;
  on_conflict?: InputMaybe<Holidays_Groups_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Holidays_OneArgs = {
  object: Holidays_Insert_Input;
  on_conflict?: InputMaybe<Holidays_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_IntegrationArgs = {
  objects: Array<Integration_Insert_Input>;
  on_conflict?: InputMaybe<Integration_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Integration_OneArgs = {
  object: Integration_Insert_Input;
  on_conflict?: InputMaybe<Integration_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Integration_ServiceArgs = {
  objects: Array<Integration_Service_Insert_Input>;
  on_conflict?: InputMaybe<Integration_Service_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Integration_Service_OneArgs = {
  object: Integration_Service_Insert_Input;
  on_conflict?: InputMaybe<Integration_Service_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Integration_SyncArgs = {
  objects: Array<Integration_Sync_Insert_Input>;
  on_conflict?: InputMaybe<Integration_Sync_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Integration_Sync_ActionArgs = {
  objects: Array<Integration_Sync_Action_Insert_Input>;
  on_conflict?: InputMaybe<Integration_Sync_Action_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Integration_Sync_Action_OneArgs = {
  object: Integration_Sync_Action_Insert_Input;
  on_conflict?: InputMaybe<Integration_Sync_Action_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Integration_Sync_OneArgs = {
  object: Integration_Sync_Insert_Input;
  on_conflict?: InputMaybe<Integration_Sync_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_InvitationsArgs = {
  objects: Array<Invitations_Insert_Input>;
  on_conflict?: InputMaybe<Invitations_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Invitations_OneArgs = {
  object: Invitations_Insert_Input;
  on_conflict?: InputMaybe<Invitations_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_MilestonesArgs = {
  objects: Array<Milestones_Insert_Input>;
  on_conflict?: InputMaybe<Milestones_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Milestones_OneArgs = {
  object: Milestones_Insert_Input;
  on_conflict?: InputMaybe<Milestones_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_NotesArgs = {
  objects: Array<Notes_Insert_Input>;
  on_conflict?: InputMaybe<Notes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Notes_OneArgs = {
  object: Notes_Insert_Input;
  on_conflict?: InputMaybe<Notes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Other_CostsArgs = {
  objects: Array<Other_Costs_Insert_Input>;
  on_conflict?: InputMaybe<Other_Costs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Other_Costs_OneArgs = {
  object: Other_Costs_Insert_Input;
  on_conflict?: InputMaybe<Other_Costs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_PeopleArgs = {
  objects: Array<People_Insert_Input>;
  on_conflict?: InputMaybe<People_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_People_NotesArgs = {
  objects: Array<People_Notes_Insert_Input>;
  on_conflict?: InputMaybe<People_Notes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_People_Notes_OneArgs = {
  object: People_Notes_Insert_Input;
  on_conflict?: InputMaybe<People_Notes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_People_OneArgs = {
  object: People_Insert_Input;
  on_conflict?: InputMaybe<People_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Person_RequestsArgs = {
  objects: Array<Person_Requests_Insert_Input>;
  on_conflict?: InputMaybe<Person_Requests_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Person_Requests_OneArgs = {
  object: Person_Requests_Insert_Input;
  on_conflict?: InputMaybe<Person_Requests_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_PhasesArgs = {
  objects: Array<Phases_Insert_Input>;
  on_conflict?: InputMaybe<Phases_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Phases_OneArgs = {
  object: Phases_Insert_Input;
  on_conflict?: InputMaybe<Phases_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Project_EditorsArgs = {
  objects: Array<Project_Editors_Insert_Input>;
  on_conflict?: InputMaybe<Project_Editors_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Project_Editors_OneArgs = {
  object: Project_Editors_Insert_Input;
  on_conflict?: InputMaybe<Project_Editors_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Project_MembersArgs = {
  objects: Array<Project_Members_Insert_Input>;
  on_conflict?: InputMaybe<Project_Members_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Project_Members_OneArgs = {
  object: Project_Members_Insert_Input;
  on_conflict?: InputMaybe<Project_Members_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Project_RatesArgs = {
  objects: Array<Project_Rates_Insert_Input>;
  on_conflict?: InputMaybe<Project_Rates_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Project_Rates_OneArgs = {
  object: Project_Rates_Insert_Input;
  on_conflict?: InputMaybe<Project_Rates_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Project_RolesArgs = {
  objects: Array<Project_Roles_Insert_Input>;
  on_conflict?: InputMaybe<Project_Roles_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Project_Roles_OneArgs = {
  object: Project_Roles_Insert_Input;
  on_conflict?: InputMaybe<Project_Roles_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Project_TagsArgs = {
  objects: Array<Project_Tags_Insert_Input>;
  on_conflict?: InputMaybe<Project_Tags_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Project_Tags_OneArgs = {
  object: Project_Tags_Insert_Input;
  on_conflict?: InputMaybe<Project_Tags_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ProjectsArgs = {
  objects: Array<Projects_Insert_Input>;
  on_conflict?: InputMaybe<Projects_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Projects_OneArgs = {
  object: Projects_Insert_Input;
  on_conflict?: InputMaybe<Projects_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Rate_CardsArgs = {
  objects: Array<Rate_Cards_Insert_Input>;
  on_conflict?: InputMaybe<Rate_Cards_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Rate_Cards_OneArgs = {
  object: Rate_Cards_Insert_Input;
  on_conflict?: InputMaybe<Rate_Cards_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Role_Charge_Out_RatesArgs = {
  objects: Array<Role_Charge_Out_Rates_Insert_Input>;
  on_conflict?: InputMaybe<Role_Charge_Out_Rates_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Role_Charge_Out_Rates_OneArgs = {
  object: Role_Charge_Out_Rates_Insert_Input;
  on_conflict?: InputMaybe<Role_Charge_Out_Rates_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_RolesArgs = {
  objects: Array<Roles_Insert_Input>;
  on_conflict?: InputMaybe<Roles_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Roles_OneArgs = {
  object: Roles_Insert_Input;
  on_conflict?: InputMaybe<Roles_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_SkillsArgs = {
  objects: Array<Skills_Insert_Input>;
  on_conflict?: InputMaybe<Skills_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Skills_OneArgs = {
  object: Skills_Insert_Input;
  on_conflict?: InputMaybe<Skills_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_TagsArgs = {
  objects: Array<Tags_Insert_Input>;
  on_conflict?: InputMaybe<Tags_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Tags_OneArgs = {
  object: Tags_Insert_Input;
  on_conflict?: InputMaybe<Tags_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_TeamsArgs = {
  objects: Array<Teams_Insert_Input>;
  on_conflict?: InputMaybe<Teams_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Teams_OneArgs = {
  object: Teams_Insert_Input;
  on_conflict?: InputMaybe<Teams_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Time_OffsArgs = {
  objects: Array<Time_Offs_Insert_Input>;
  on_conflict?: InputMaybe<Time_Offs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Time_Offs_OneArgs = {
  object: Time_Offs_Insert_Input;
  on_conflict?: InputMaybe<Time_Offs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Type_Schedule_TotalsArgs = {
  objects: Array<Type_Schedule_Totals_Insert_Input>;
  on_conflict?: InputMaybe<Type_Schedule_Totals_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Type_Schedule_Totals_OneArgs = {
  object: Type_Schedule_Totals_Insert_Input;
  on_conflict?: InputMaybe<Type_Schedule_Totals_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Type_Schedule_Totals_RolesArgs = {
  objects: Array<Type_Schedule_Totals_Roles_Insert_Input>;
  on_conflict?: InputMaybe<Type_Schedule_Totals_Roles_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Type_Schedule_Totals_Roles_OneArgs = {
  object: Type_Schedule_Totals_Roles_Insert_Input;
  on_conflict?: InputMaybe<Type_Schedule_Totals_Roles_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_User_Filter_SetsArgs = {
  objects: Array<User_Filter_Sets_Insert_Input>;
  on_conflict?: InputMaybe<User_Filter_Sets_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_User_Filter_Sets_OneArgs = {
  object: User_Filter_Sets_Insert_Input;
  on_conflict?: InputMaybe<User_Filter_Sets_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_UsersArgs = {
  objects: Array<Users_Insert_Input>;
  on_conflict?: InputMaybe<Users_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Users_OneArgs = {
  object: Users_Insert_Input;
  on_conflict?: InputMaybe<Users_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ViewsArgs = {
  objects: Array<Views_Insert_Input>;
  on_conflict?: InputMaybe<Views_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Views_OneArgs = {
  object: Views_Insert_Input;
  on_conflict?: InputMaybe<Views_On_Conflict>;
};


/** mutation root */
export type Mutation_RootRevokeApiTokenArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootUpdateCustomSelectFieldArgs = {
  input: CustomFieldSelectUpdateInput;
};


/** mutation root */
export type Mutation_RootUpdate_AccountsArgs = {
  _append?: InputMaybe<Accounts_Append_Input>;
  _delete_at_path?: InputMaybe<Accounts_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Accounts_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Accounts_Delete_Key_Input>;
  _inc?: InputMaybe<Accounts_Inc_Input>;
  _prepend?: InputMaybe<Accounts_Prepend_Input>;
  _set?: InputMaybe<Accounts_Set_Input>;
  where: Accounts_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Accounts_By_PkArgs = {
  _append?: InputMaybe<Accounts_Append_Input>;
  _delete_at_path?: InputMaybe<Accounts_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Accounts_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Accounts_Delete_Key_Input>;
  _inc?: InputMaybe<Accounts_Inc_Input>;
  _prepend?: InputMaybe<Accounts_Prepend_Input>;
  _set?: InputMaybe<Accounts_Set_Input>;
  pk_columns: Accounts_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Accounts_ManyArgs = {
  updates: Array<Accounts_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_ActualsArgs = {
  _append?: InputMaybe<Actuals_Append_Input>;
  _delete_at_path?: InputMaybe<Actuals_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Actuals_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Actuals_Delete_Key_Input>;
  _inc?: InputMaybe<Actuals_Inc_Input>;
  _prepend?: InputMaybe<Actuals_Prepend_Input>;
  _set?: InputMaybe<Actuals_Set_Input>;
  where: Actuals_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Actuals_By_PkArgs = {
  _append?: InputMaybe<Actuals_Append_Input>;
  _delete_at_path?: InputMaybe<Actuals_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Actuals_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Actuals_Delete_Key_Input>;
  _inc?: InputMaybe<Actuals_Inc_Input>;
  _prepend?: InputMaybe<Actuals_Prepend_Input>;
  _set?: InputMaybe<Actuals_Set_Input>;
  pk_columns: Actuals_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Actuals_ManyArgs = {
  updates: Array<Actuals_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Api_TokensArgs = {
  _inc?: InputMaybe<Api_Tokens_Inc_Input>;
  _set?: InputMaybe<Api_Tokens_Set_Input>;
  where: Api_Tokens_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Api_Tokens_By_PkArgs = {
  _inc?: InputMaybe<Api_Tokens_Inc_Input>;
  _set?: InputMaybe<Api_Tokens_Set_Input>;
  pk_columns: Api_Tokens_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Api_Tokens_ManyArgs = {
  updates: Array<Api_Tokens_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_AssignmentsArgs = {
  _inc?: InputMaybe<Assignments_Inc_Input>;
  _set?: InputMaybe<Assignments_Set_Input>;
  where: Assignments_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Assignments_By_PkArgs = {
  _inc?: InputMaybe<Assignments_Inc_Input>;
  _set?: InputMaybe<Assignments_Set_Input>;
  pk_columns: Assignments_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Assignments_ManyArgs = {
  updates: Array<Assignments_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Audit_Logged_ActionsArgs = {
  _append?: InputMaybe<Audit_Logged_Actions_Append_Input>;
  _delete_at_path?: InputMaybe<Audit_Logged_Actions_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Audit_Logged_Actions_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Audit_Logged_Actions_Delete_Key_Input>;
  _inc?: InputMaybe<Audit_Logged_Actions_Inc_Input>;
  _prepend?: InputMaybe<Audit_Logged_Actions_Prepend_Input>;
  _set?: InputMaybe<Audit_Logged_Actions_Set_Input>;
  where: Audit_Logged_Actions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Audit_Logged_Actions_By_PkArgs = {
  _append?: InputMaybe<Audit_Logged_Actions_Append_Input>;
  _delete_at_path?: InputMaybe<Audit_Logged_Actions_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Audit_Logged_Actions_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Audit_Logged_Actions_Delete_Key_Input>;
  _inc?: InputMaybe<Audit_Logged_Actions_Inc_Input>;
  _prepend?: InputMaybe<Audit_Logged_Actions_Prepend_Input>;
  _set?: InputMaybe<Audit_Logged_Actions_Set_Input>;
  pk_columns: Audit_Logged_Actions_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Audit_Logged_Actions_ManyArgs = {
  updates: Array<Audit_Logged_Actions_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Audit_Recently_Logged_ActionsArgs = {
  _append?: InputMaybe<Audit_Recently_Logged_Actions_Append_Input>;
  _delete_at_path?: InputMaybe<Audit_Recently_Logged_Actions_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Audit_Recently_Logged_Actions_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Audit_Recently_Logged_Actions_Delete_Key_Input>;
  _inc?: InputMaybe<Audit_Recently_Logged_Actions_Inc_Input>;
  _prepend?: InputMaybe<Audit_Recently_Logged_Actions_Prepend_Input>;
  _set?: InputMaybe<Audit_Recently_Logged_Actions_Set_Input>;
  where: Audit_Recently_Logged_Actions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Audit_Recently_Logged_Actions_ManyArgs = {
  updates: Array<Audit_Recently_Logged_Actions_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Cancel_ReasonsArgs = {
  _inc?: InputMaybe<Cancel_Reasons_Inc_Input>;
  _set?: InputMaybe<Cancel_Reasons_Set_Input>;
  where: Cancel_Reasons_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Cancel_Reasons_By_PkArgs = {
  _inc?: InputMaybe<Cancel_Reasons_Inc_Input>;
  _set?: InputMaybe<Cancel_Reasons_Set_Input>;
  pk_columns: Cancel_Reasons_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Cancel_Reasons_ManyArgs = {
  updates: Array<Cancel_Reasons_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_ClientsArgs = {
  _append?: InputMaybe<Clients_Append_Input>;
  _delete_at_path?: InputMaybe<Clients_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Clients_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Clients_Delete_Key_Input>;
  _inc?: InputMaybe<Clients_Inc_Input>;
  _prepend?: InputMaybe<Clients_Prepend_Input>;
  _set?: InputMaybe<Clients_Set_Input>;
  where: Clients_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Clients_By_PkArgs = {
  _append?: InputMaybe<Clients_Append_Input>;
  _delete_at_path?: InputMaybe<Clients_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Clients_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Clients_Delete_Key_Input>;
  _inc?: InputMaybe<Clients_Inc_Input>;
  _prepend?: InputMaybe<Clients_Prepend_Input>;
  _set?: InputMaybe<Clients_Set_Input>;
  pk_columns: Clients_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Clients_ManyArgs = {
  updates: Array<Clients_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_CompetenciesArgs = {
  _inc?: InputMaybe<Competencies_Inc_Input>;
  _set?: InputMaybe<Competencies_Set_Input>;
  where: Competencies_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Competencies_By_PkArgs = {
  _inc?: InputMaybe<Competencies_Inc_Input>;
  _set?: InputMaybe<Competencies_Set_Input>;
  pk_columns: Competencies_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Competencies_ManyArgs = {
  updates: Array<Competencies_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_ContractsArgs = {
  _inc?: InputMaybe<Contracts_Inc_Input>;
  _set?: InputMaybe<Contracts_Set_Input>;
  where: Contracts_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Contracts_By_PkArgs = {
  _inc?: InputMaybe<Contracts_Inc_Input>;
  _set?: InputMaybe<Contracts_Set_Input>;
  pk_columns: Contracts_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Contracts_ManyArgs = {
  updates: Array<Contracts_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Custom_Select_OptionsArgs = {
  _inc?: InputMaybe<Custom_Select_Options_Inc_Input>;
  _set?: InputMaybe<Custom_Select_Options_Set_Input>;
  where: Custom_Select_Options_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Custom_Select_Options_By_PkArgs = {
  _inc?: InputMaybe<Custom_Select_Options_Inc_Input>;
  _set?: InputMaybe<Custom_Select_Options_Set_Input>;
  pk_columns: Custom_Select_Options_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Custom_Select_Options_ManyArgs = {
  updates: Array<Custom_Select_Options_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Custom_Select_TypesArgs = {
  _inc?: InputMaybe<Custom_Select_Types_Inc_Input>;
  _set?: InputMaybe<Custom_Select_Types_Set_Input>;
  where: Custom_Select_Types_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Custom_Select_Types_By_PkArgs = {
  _inc?: InputMaybe<Custom_Select_Types_Inc_Input>;
  _set?: InputMaybe<Custom_Select_Types_Set_Input>;
  pk_columns: Custom_Select_Types_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Custom_Select_Types_ManyArgs = {
  updates: Array<Custom_Select_Types_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Custom_Select_ValuesArgs = {
  _inc?: InputMaybe<Custom_Select_Values_Inc_Input>;
  _set?: InputMaybe<Custom_Select_Values_Set_Input>;
  where: Custom_Select_Values_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Custom_Select_Values_By_PkArgs = {
  _inc?: InputMaybe<Custom_Select_Values_Inc_Input>;
  _set?: InputMaybe<Custom_Select_Values_Set_Input>;
  pk_columns: Custom_Select_Values_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Custom_Select_Values_ManyArgs = {
  updates: Array<Custom_Select_Values_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Custom_Text_TypesArgs = {
  _inc?: InputMaybe<Custom_Text_Types_Inc_Input>;
  _set?: InputMaybe<Custom_Text_Types_Set_Input>;
  where: Custom_Text_Types_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Custom_Text_Types_By_PkArgs = {
  _inc?: InputMaybe<Custom_Text_Types_Inc_Input>;
  _set?: InputMaybe<Custom_Text_Types_Set_Input>;
  pk_columns: Custom_Text_Types_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Custom_Text_Types_ManyArgs = {
  updates: Array<Custom_Text_Types_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Custom_Text_ValuesArgs = {
  _inc?: InputMaybe<Custom_Text_Values_Inc_Input>;
  _set?: InputMaybe<Custom_Text_Values_Set_Input>;
  where: Custom_Text_Values_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Custom_Text_Values_By_PkArgs = {
  _inc?: InputMaybe<Custom_Text_Values_Inc_Input>;
  _set?: InputMaybe<Custom_Text_Values_Set_Input>;
  pk_columns: Custom_Text_Values_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Custom_Text_Values_ManyArgs = {
  updates: Array<Custom_Text_Values_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Ext_ContractArgs = {
  _inc?: InputMaybe<Ext_Contract_Inc_Input>;
  _set?: InputMaybe<Ext_Contract_Set_Input>;
  where: Ext_Contract_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Ext_Contract_By_PkArgs = {
  _inc?: InputMaybe<Ext_Contract_Inc_Input>;
  _set?: InputMaybe<Ext_Contract_Set_Input>;
  pk_columns: Ext_Contract_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Ext_Contract_ManyArgs = {
  updates: Array<Ext_Contract_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Ext_PersonArgs = {
  _append?: InputMaybe<Ext_Person_Append_Input>;
  _delete_at_path?: InputMaybe<Ext_Person_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Ext_Person_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Ext_Person_Delete_Key_Input>;
  _inc?: InputMaybe<Ext_Person_Inc_Input>;
  _prepend?: InputMaybe<Ext_Person_Prepend_Input>;
  _set?: InputMaybe<Ext_Person_Set_Input>;
  where: Ext_Person_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Ext_Person_By_PkArgs = {
  _append?: InputMaybe<Ext_Person_Append_Input>;
  _delete_at_path?: InputMaybe<Ext_Person_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Ext_Person_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Ext_Person_Delete_Key_Input>;
  _inc?: InputMaybe<Ext_Person_Inc_Input>;
  _prepend?: InputMaybe<Ext_Person_Prepend_Input>;
  _set?: InputMaybe<Ext_Person_Set_Input>;
  pk_columns: Ext_Person_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Ext_Person_LinkArgs = {
  _inc?: InputMaybe<Ext_Person_Link_Inc_Input>;
  _set?: InputMaybe<Ext_Person_Link_Set_Input>;
  where: Ext_Person_Link_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Ext_Person_Link_By_PkArgs = {
  _inc?: InputMaybe<Ext_Person_Link_Inc_Input>;
  _set?: InputMaybe<Ext_Person_Link_Set_Input>;
  pk_columns: Ext_Person_Link_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Ext_Person_Link_ManyArgs = {
  updates: Array<Ext_Person_Link_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Ext_Person_ManyArgs = {
  updates: Array<Ext_Person_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Ext_RoleArgs = {
  _inc?: InputMaybe<Ext_Role_Inc_Input>;
  _set?: InputMaybe<Ext_Role_Set_Input>;
  where: Ext_Role_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Ext_Role_By_PkArgs = {
  _inc?: InputMaybe<Ext_Role_Inc_Input>;
  _set?: InputMaybe<Ext_Role_Set_Input>;
  pk_columns: Ext_Role_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Ext_Role_ManyArgs = {
  updates: Array<Ext_Role_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Ext_TeamArgs = {
  _inc?: InputMaybe<Ext_Team_Inc_Input>;
  _set?: InputMaybe<Ext_Team_Set_Input>;
  where: Ext_Team_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Ext_Team_By_PkArgs = {
  _inc?: InputMaybe<Ext_Team_Inc_Input>;
  _set?: InputMaybe<Ext_Team_Set_Input>;
  pk_columns: Ext_Team_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Ext_Team_ManyArgs = {
  updates: Array<Ext_Team_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Ext_Time_OffArgs = {
  _inc?: InputMaybe<Ext_Time_Off_Inc_Input>;
  _set?: InputMaybe<Ext_Time_Off_Set_Input>;
  where: Ext_Time_Off_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Ext_Time_Off_By_PkArgs = {
  _inc?: InputMaybe<Ext_Time_Off_Inc_Input>;
  _set?: InputMaybe<Ext_Time_Off_Set_Input>;
  pk_columns: Ext_Time_Off_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Ext_Time_Off_LinkArgs = {
  _inc?: InputMaybe<Ext_Time_Off_Link_Inc_Input>;
  _set?: InputMaybe<Ext_Time_Off_Link_Set_Input>;
  where: Ext_Time_Off_Link_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Ext_Time_Off_Link_By_PkArgs = {
  _inc?: InputMaybe<Ext_Time_Off_Link_Inc_Input>;
  _set?: InputMaybe<Ext_Time_Off_Link_Set_Input>;
  pk_columns: Ext_Time_Off_Link_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Ext_Time_Off_Link_ManyArgs = {
  updates: Array<Ext_Time_Off_Link_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Ext_Time_Off_ManyArgs = {
  updates: Array<Ext_Time_Off_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_FeaturesArgs = {
  _set?: InputMaybe<Features_Set_Input>;
  where: Features_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Features_AccountsArgs = {
  _inc?: InputMaybe<Features_Accounts_Inc_Input>;
  _set?: InputMaybe<Features_Accounts_Set_Input>;
  where: Features_Accounts_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Features_Accounts_By_PkArgs = {
  _inc?: InputMaybe<Features_Accounts_Inc_Input>;
  _set?: InputMaybe<Features_Accounts_Set_Input>;
  pk_columns: Features_Accounts_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Features_Accounts_ManyArgs = {
  updates: Array<Features_Accounts_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Features_By_PkArgs = {
  _set?: InputMaybe<Features_Set_Input>;
  pk_columns: Features_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Features_ManyArgs = {
  updates: Array<Features_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_HolidaysArgs = {
  _inc?: InputMaybe<Holidays_Inc_Input>;
  _set?: InputMaybe<Holidays_Set_Input>;
  where: Holidays_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Holidays_By_PkArgs = {
  _inc?: InputMaybe<Holidays_Inc_Input>;
  _set?: InputMaybe<Holidays_Set_Input>;
  pk_columns: Holidays_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Holidays_GroupsArgs = {
  _inc?: InputMaybe<Holidays_Groups_Inc_Input>;
  _set?: InputMaybe<Holidays_Groups_Set_Input>;
  where: Holidays_Groups_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Holidays_Groups_By_PkArgs = {
  _inc?: InputMaybe<Holidays_Groups_Inc_Input>;
  _set?: InputMaybe<Holidays_Groups_Set_Input>;
  pk_columns: Holidays_Groups_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Holidays_Groups_ManyArgs = {
  updates: Array<Holidays_Groups_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Holidays_ManyArgs = {
  updates: Array<Holidays_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_IntegrationArgs = {
  _append?: InputMaybe<Integration_Append_Input>;
  _delete_at_path?: InputMaybe<Integration_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Integration_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Integration_Delete_Key_Input>;
  _inc?: InputMaybe<Integration_Inc_Input>;
  _prepend?: InputMaybe<Integration_Prepend_Input>;
  _set?: InputMaybe<Integration_Set_Input>;
  where: Integration_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Integration_By_PkArgs = {
  _append?: InputMaybe<Integration_Append_Input>;
  _delete_at_path?: InputMaybe<Integration_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Integration_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Integration_Delete_Key_Input>;
  _inc?: InputMaybe<Integration_Inc_Input>;
  _prepend?: InputMaybe<Integration_Prepend_Input>;
  _set?: InputMaybe<Integration_Set_Input>;
  pk_columns: Integration_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Integration_ManyArgs = {
  updates: Array<Integration_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Integration_ServiceArgs = {
  _inc?: InputMaybe<Integration_Service_Inc_Input>;
  _set?: InputMaybe<Integration_Service_Set_Input>;
  where: Integration_Service_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Integration_Service_By_PkArgs = {
  _inc?: InputMaybe<Integration_Service_Inc_Input>;
  _set?: InputMaybe<Integration_Service_Set_Input>;
  pk_columns: Integration_Service_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Integration_Service_ManyArgs = {
  updates: Array<Integration_Service_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Integration_SyncArgs = {
  _inc?: InputMaybe<Integration_Sync_Inc_Input>;
  _set?: InputMaybe<Integration_Sync_Set_Input>;
  where: Integration_Sync_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Integration_Sync_ActionArgs = {
  _append?: InputMaybe<Integration_Sync_Action_Append_Input>;
  _delete_at_path?: InputMaybe<Integration_Sync_Action_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Integration_Sync_Action_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Integration_Sync_Action_Delete_Key_Input>;
  _inc?: InputMaybe<Integration_Sync_Action_Inc_Input>;
  _prepend?: InputMaybe<Integration_Sync_Action_Prepend_Input>;
  _set?: InputMaybe<Integration_Sync_Action_Set_Input>;
  where: Integration_Sync_Action_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Integration_Sync_Action_By_PkArgs = {
  _append?: InputMaybe<Integration_Sync_Action_Append_Input>;
  _delete_at_path?: InputMaybe<Integration_Sync_Action_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Integration_Sync_Action_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Integration_Sync_Action_Delete_Key_Input>;
  _inc?: InputMaybe<Integration_Sync_Action_Inc_Input>;
  _prepend?: InputMaybe<Integration_Sync_Action_Prepend_Input>;
  _set?: InputMaybe<Integration_Sync_Action_Set_Input>;
  pk_columns: Integration_Sync_Action_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Integration_Sync_Action_ManyArgs = {
  updates: Array<Integration_Sync_Action_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Integration_Sync_By_PkArgs = {
  _inc?: InputMaybe<Integration_Sync_Inc_Input>;
  _set?: InputMaybe<Integration_Sync_Set_Input>;
  pk_columns: Integration_Sync_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Integration_Sync_ManyArgs = {
  updates: Array<Integration_Sync_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_InvitationsArgs = {
  _inc?: InputMaybe<Invitations_Inc_Input>;
  _set?: InputMaybe<Invitations_Set_Input>;
  where: Invitations_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Invitations_By_PkArgs = {
  _inc?: InputMaybe<Invitations_Inc_Input>;
  _set?: InputMaybe<Invitations_Set_Input>;
  pk_columns: Invitations_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Invitations_ManyArgs = {
  updates: Array<Invitations_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_MilestonesArgs = {
  _inc?: InputMaybe<Milestones_Inc_Input>;
  _set?: InputMaybe<Milestones_Set_Input>;
  where: Milestones_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Milestones_By_PkArgs = {
  _inc?: InputMaybe<Milestones_Inc_Input>;
  _set?: InputMaybe<Milestones_Set_Input>;
  pk_columns: Milestones_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Milestones_ManyArgs = {
  updates: Array<Milestones_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_NotesArgs = {
  _inc?: InputMaybe<Notes_Inc_Input>;
  _set?: InputMaybe<Notes_Set_Input>;
  where: Notes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Notes_By_PkArgs = {
  _inc?: InputMaybe<Notes_Inc_Input>;
  _set?: InputMaybe<Notes_Set_Input>;
  pk_columns: Notes_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Notes_ManyArgs = {
  updates: Array<Notes_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Other_CostsArgs = {
  _inc?: InputMaybe<Other_Costs_Inc_Input>;
  _set?: InputMaybe<Other_Costs_Set_Input>;
  where: Other_Costs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Other_Costs_By_PkArgs = {
  _inc?: InputMaybe<Other_Costs_Inc_Input>;
  _set?: InputMaybe<Other_Costs_Set_Input>;
  pk_columns: Other_Costs_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Other_Costs_ManyArgs = {
  updates: Array<Other_Costs_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_PeopleArgs = {
  _append?: InputMaybe<People_Append_Input>;
  _delete_at_path?: InputMaybe<People_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<People_Delete_Elem_Input>;
  _delete_key?: InputMaybe<People_Delete_Key_Input>;
  _inc?: InputMaybe<People_Inc_Input>;
  _prepend?: InputMaybe<People_Prepend_Input>;
  _set?: InputMaybe<People_Set_Input>;
  where: People_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_People_By_PkArgs = {
  _append?: InputMaybe<People_Append_Input>;
  _delete_at_path?: InputMaybe<People_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<People_Delete_Elem_Input>;
  _delete_key?: InputMaybe<People_Delete_Key_Input>;
  _inc?: InputMaybe<People_Inc_Input>;
  _prepend?: InputMaybe<People_Prepend_Input>;
  _set?: InputMaybe<People_Set_Input>;
  pk_columns: People_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_People_ManyArgs = {
  updates: Array<People_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_People_NotesArgs = {
  _inc?: InputMaybe<People_Notes_Inc_Input>;
  _set?: InputMaybe<People_Notes_Set_Input>;
  where: People_Notes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_People_Notes_By_PkArgs = {
  _inc?: InputMaybe<People_Notes_Inc_Input>;
  _set?: InputMaybe<People_Notes_Set_Input>;
  pk_columns: People_Notes_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_People_Notes_ManyArgs = {
  updates: Array<People_Notes_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Person_RequestsArgs = {
  _inc?: InputMaybe<Person_Requests_Inc_Input>;
  _set?: InputMaybe<Person_Requests_Set_Input>;
  where: Person_Requests_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Person_Requests_By_PkArgs = {
  _inc?: InputMaybe<Person_Requests_Inc_Input>;
  _set?: InputMaybe<Person_Requests_Set_Input>;
  pk_columns: Person_Requests_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Person_Requests_ManyArgs = {
  updates: Array<Person_Requests_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_PhasesArgs = {
  _inc?: InputMaybe<Phases_Inc_Input>;
  _set?: InputMaybe<Phases_Set_Input>;
  where: Phases_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Phases_By_PkArgs = {
  _inc?: InputMaybe<Phases_Inc_Input>;
  _set?: InputMaybe<Phases_Set_Input>;
  pk_columns: Phases_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Phases_ManyArgs = {
  updates: Array<Phases_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Project_EditorsArgs = {
  _inc?: InputMaybe<Project_Editors_Inc_Input>;
  _set?: InputMaybe<Project_Editors_Set_Input>;
  where: Project_Editors_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Project_Editors_By_PkArgs = {
  _inc?: InputMaybe<Project_Editors_Inc_Input>;
  _set?: InputMaybe<Project_Editors_Set_Input>;
  pk_columns: Project_Editors_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Project_Editors_ManyArgs = {
  updates: Array<Project_Editors_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Project_MembersArgs = {
  _inc?: InputMaybe<Project_Members_Inc_Input>;
  _set?: InputMaybe<Project_Members_Set_Input>;
  where: Project_Members_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Project_Members_By_PkArgs = {
  _inc?: InputMaybe<Project_Members_Inc_Input>;
  _set?: InputMaybe<Project_Members_Set_Input>;
  pk_columns: Project_Members_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Project_Members_ManyArgs = {
  updates: Array<Project_Members_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Project_RatesArgs = {
  _inc?: InputMaybe<Project_Rates_Inc_Input>;
  _set?: InputMaybe<Project_Rates_Set_Input>;
  where: Project_Rates_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Project_Rates_By_PkArgs = {
  _inc?: InputMaybe<Project_Rates_Inc_Input>;
  _set?: InputMaybe<Project_Rates_Set_Input>;
  pk_columns: Project_Rates_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Project_Rates_ManyArgs = {
  updates: Array<Project_Rates_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Project_RolesArgs = {
  _inc?: InputMaybe<Project_Roles_Inc_Input>;
  _set?: InputMaybe<Project_Roles_Set_Input>;
  where: Project_Roles_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Project_Roles_By_PkArgs = {
  _inc?: InputMaybe<Project_Roles_Inc_Input>;
  _set?: InputMaybe<Project_Roles_Set_Input>;
  pk_columns: Project_Roles_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Project_Roles_ManyArgs = {
  updates: Array<Project_Roles_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Project_TagsArgs = {
  _inc?: InputMaybe<Project_Tags_Inc_Input>;
  _set?: InputMaybe<Project_Tags_Set_Input>;
  where: Project_Tags_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Project_Tags_By_PkArgs = {
  _inc?: InputMaybe<Project_Tags_Inc_Input>;
  _set?: InputMaybe<Project_Tags_Set_Input>;
  pk_columns: Project_Tags_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Project_Tags_ManyArgs = {
  updates: Array<Project_Tags_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_ProjectsArgs = {
  _append?: InputMaybe<Projects_Append_Input>;
  _delete_at_path?: InputMaybe<Projects_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Projects_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Projects_Delete_Key_Input>;
  _inc?: InputMaybe<Projects_Inc_Input>;
  _prepend?: InputMaybe<Projects_Prepend_Input>;
  _set?: InputMaybe<Projects_Set_Input>;
  where: Projects_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Projects_By_PkArgs = {
  _append?: InputMaybe<Projects_Append_Input>;
  _delete_at_path?: InputMaybe<Projects_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Projects_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Projects_Delete_Key_Input>;
  _inc?: InputMaybe<Projects_Inc_Input>;
  _prepend?: InputMaybe<Projects_Prepend_Input>;
  _set?: InputMaybe<Projects_Set_Input>;
  pk_columns: Projects_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Projects_ManyArgs = {
  updates: Array<Projects_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Rate_CardsArgs = {
  _append?: InputMaybe<Rate_Cards_Append_Input>;
  _delete_at_path?: InputMaybe<Rate_Cards_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Rate_Cards_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Rate_Cards_Delete_Key_Input>;
  _inc?: InputMaybe<Rate_Cards_Inc_Input>;
  _prepend?: InputMaybe<Rate_Cards_Prepend_Input>;
  _set?: InputMaybe<Rate_Cards_Set_Input>;
  where: Rate_Cards_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Rate_Cards_By_PkArgs = {
  _append?: InputMaybe<Rate_Cards_Append_Input>;
  _delete_at_path?: InputMaybe<Rate_Cards_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Rate_Cards_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Rate_Cards_Delete_Key_Input>;
  _inc?: InputMaybe<Rate_Cards_Inc_Input>;
  _prepend?: InputMaybe<Rate_Cards_Prepend_Input>;
  _set?: InputMaybe<Rate_Cards_Set_Input>;
  pk_columns: Rate_Cards_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Rate_Cards_ManyArgs = {
  updates: Array<Rate_Cards_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Role_Charge_Out_RatesArgs = {
  _inc?: InputMaybe<Role_Charge_Out_Rates_Inc_Input>;
  _set?: InputMaybe<Role_Charge_Out_Rates_Set_Input>;
  where: Role_Charge_Out_Rates_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Role_Charge_Out_Rates_By_PkArgs = {
  _inc?: InputMaybe<Role_Charge_Out_Rates_Inc_Input>;
  _set?: InputMaybe<Role_Charge_Out_Rates_Set_Input>;
  pk_columns: Role_Charge_Out_Rates_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Role_Charge_Out_Rates_ManyArgs = {
  updates: Array<Role_Charge_Out_Rates_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_RolesArgs = {
  _append?: InputMaybe<Roles_Append_Input>;
  _delete_at_path?: InputMaybe<Roles_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Roles_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Roles_Delete_Key_Input>;
  _inc?: InputMaybe<Roles_Inc_Input>;
  _prepend?: InputMaybe<Roles_Prepend_Input>;
  _set?: InputMaybe<Roles_Set_Input>;
  where: Roles_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Roles_By_PkArgs = {
  _append?: InputMaybe<Roles_Append_Input>;
  _delete_at_path?: InputMaybe<Roles_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Roles_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Roles_Delete_Key_Input>;
  _inc?: InputMaybe<Roles_Inc_Input>;
  _prepend?: InputMaybe<Roles_Prepend_Input>;
  _set?: InputMaybe<Roles_Set_Input>;
  pk_columns: Roles_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Roles_ManyArgs = {
  updates: Array<Roles_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_SkillsArgs = {
  _inc?: InputMaybe<Skills_Inc_Input>;
  _set?: InputMaybe<Skills_Set_Input>;
  where: Skills_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Skills_By_PkArgs = {
  _inc?: InputMaybe<Skills_Inc_Input>;
  _set?: InputMaybe<Skills_Set_Input>;
  pk_columns: Skills_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Skills_ManyArgs = {
  updates: Array<Skills_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_TagsArgs = {
  _inc?: InputMaybe<Tags_Inc_Input>;
  _set?: InputMaybe<Tags_Set_Input>;
  where: Tags_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Tags_By_PkArgs = {
  _inc?: InputMaybe<Tags_Inc_Input>;
  _set?: InputMaybe<Tags_Set_Input>;
  pk_columns: Tags_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Tags_ManyArgs = {
  updates: Array<Tags_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_TeamsArgs = {
  _inc?: InputMaybe<Teams_Inc_Input>;
  _set?: InputMaybe<Teams_Set_Input>;
  where: Teams_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Teams_By_PkArgs = {
  _inc?: InputMaybe<Teams_Inc_Input>;
  _set?: InputMaybe<Teams_Set_Input>;
  pk_columns: Teams_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Teams_ManyArgs = {
  updates: Array<Teams_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Time_OffsArgs = {
  _inc?: InputMaybe<Time_Offs_Inc_Input>;
  _set?: InputMaybe<Time_Offs_Set_Input>;
  where: Time_Offs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Time_Offs_By_PkArgs = {
  _inc?: InputMaybe<Time_Offs_Inc_Input>;
  _set?: InputMaybe<Time_Offs_Set_Input>;
  pk_columns: Time_Offs_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Time_Offs_ManyArgs = {
  updates: Array<Time_Offs_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Type_Schedule_TotalsArgs = {
  _inc?: InputMaybe<Type_Schedule_Totals_Inc_Input>;
  _set?: InputMaybe<Type_Schedule_Totals_Set_Input>;
  where: Type_Schedule_Totals_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Type_Schedule_Totals_By_PkArgs = {
  _inc?: InputMaybe<Type_Schedule_Totals_Inc_Input>;
  _set?: InputMaybe<Type_Schedule_Totals_Set_Input>;
  pk_columns: Type_Schedule_Totals_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Type_Schedule_Totals_ManyArgs = {
  updates: Array<Type_Schedule_Totals_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Type_Schedule_Totals_RolesArgs = {
  _inc?: InputMaybe<Type_Schedule_Totals_Roles_Inc_Input>;
  _set?: InputMaybe<Type_Schedule_Totals_Roles_Set_Input>;
  where: Type_Schedule_Totals_Roles_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Type_Schedule_Totals_Roles_By_PkArgs = {
  _inc?: InputMaybe<Type_Schedule_Totals_Roles_Inc_Input>;
  _set?: InputMaybe<Type_Schedule_Totals_Roles_Set_Input>;
  pk_columns: Type_Schedule_Totals_Roles_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Type_Schedule_Totals_Roles_ManyArgs = {
  updates: Array<Type_Schedule_Totals_Roles_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_User_Filter_SetsArgs = {
  _inc?: InputMaybe<User_Filter_Sets_Inc_Input>;
  _set?: InputMaybe<User_Filter_Sets_Set_Input>;
  where: User_Filter_Sets_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_User_Filter_Sets_By_PkArgs = {
  _inc?: InputMaybe<User_Filter_Sets_Inc_Input>;
  _set?: InputMaybe<User_Filter_Sets_Set_Input>;
  pk_columns: User_Filter_Sets_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_User_Filter_Sets_ManyArgs = {
  updates: Array<User_Filter_Sets_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_UsersArgs = {
  _append?: InputMaybe<Users_Append_Input>;
  _delete_at_path?: InputMaybe<Users_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Users_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Users_Delete_Key_Input>;
  _inc?: InputMaybe<Users_Inc_Input>;
  _prepend?: InputMaybe<Users_Prepend_Input>;
  _set?: InputMaybe<Users_Set_Input>;
  where: Users_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Users_By_PkArgs = {
  _append?: InputMaybe<Users_Append_Input>;
  _delete_at_path?: InputMaybe<Users_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Users_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Users_Delete_Key_Input>;
  _inc?: InputMaybe<Users_Inc_Input>;
  _prepend?: InputMaybe<Users_Prepend_Input>;
  _set?: InputMaybe<Users_Set_Input>;
  pk_columns: Users_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Users_ManyArgs = {
  updates: Array<Users_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_ViewsArgs = {
  _append?: InputMaybe<Views_Append_Input>;
  _delete_at_path?: InputMaybe<Views_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Views_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Views_Delete_Key_Input>;
  _inc?: InputMaybe<Views_Inc_Input>;
  _prepend?: InputMaybe<Views_Prepend_Input>;
  _set?: InputMaybe<Views_Set_Input>;
  where: Views_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Views_By_PkArgs = {
  _append?: InputMaybe<Views_Append_Input>;
  _delete_at_path?: InputMaybe<Views_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Views_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Views_Delete_Key_Input>;
  _inc?: InputMaybe<Views_Inc_Input>;
  _prepend?: InputMaybe<Views_Prepend_Input>;
  _set?: InputMaybe<Views_Set_Input>;
  pk_columns: Views_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Views_ManyArgs = {
  updates: Array<Views_Updates>;
};

/** columns and relationships of "notes" */
export type Notes = {
  __typename?: 'notes';
  account_id: Scalars['Int']['output'];
  created_at: Scalars['timestamp']['output'];
  created_by?: Maybe<Scalars['String']['output']>;
  creator_email?: Maybe<Scalars['String']['output']>;
  id: Scalars['Int']['output'];
  note: Scalars['String']['output'];
  /** An object relationship */
  project: Projects;
  project_id: Scalars['Int']['output'];
  updated_at: Scalars['timestamp']['output'];
  /** An object relationship */
  user?: Maybe<Users>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "notes" */
export type Notes_Aggregate = {
  __typename?: 'notes_aggregate';
  aggregate?: Maybe<Notes_Aggregate_Fields>;
  nodes: Array<Notes>;
};

export type Notes_Aggregate_Bool_Exp = {
  count?: InputMaybe<Notes_Aggregate_Bool_Exp_Count>;
};

export type Notes_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Notes_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Notes_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "notes" */
export type Notes_Aggregate_Fields = {
  __typename?: 'notes_aggregate_fields';
  avg?: Maybe<Notes_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Notes_Max_Fields>;
  min?: Maybe<Notes_Min_Fields>;
  stddev?: Maybe<Notes_Stddev_Fields>;
  stddev_pop?: Maybe<Notes_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Notes_Stddev_Samp_Fields>;
  sum?: Maybe<Notes_Sum_Fields>;
  var_pop?: Maybe<Notes_Var_Pop_Fields>;
  var_samp?: Maybe<Notes_Var_Samp_Fields>;
  variance?: Maybe<Notes_Variance_Fields>;
};


/** aggregate fields of "notes" */
export type Notes_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Notes_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "notes" */
export type Notes_Aggregate_Order_By = {
  avg?: InputMaybe<Notes_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Notes_Max_Order_By>;
  min?: InputMaybe<Notes_Min_Order_By>;
  stddev?: InputMaybe<Notes_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Notes_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Notes_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Notes_Sum_Order_By>;
  var_pop?: InputMaybe<Notes_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Notes_Var_Samp_Order_By>;
  variance?: InputMaybe<Notes_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "notes" */
export type Notes_Arr_Rel_Insert_Input = {
  data: Array<Notes_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Notes_On_Conflict>;
};

/** aggregate avg on columns */
export type Notes_Avg_Fields = {
  __typename?: 'notes_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "notes" */
export type Notes_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "notes". All fields are combined with a logical 'AND'. */
export type Notes_Bool_Exp = {
  _and?: InputMaybe<Array<Notes_Bool_Exp>>;
  _not?: InputMaybe<Notes_Bool_Exp>;
  _or?: InputMaybe<Array<Notes_Bool_Exp>>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  created_by?: InputMaybe<String_Comparison_Exp>;
  creator_email?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  note?: InputMaybe<String_Comparison_Exp>;
  project?: InputMaybe<Projects_Bool_Exp>;
  project_id?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "notes" */
export enum Notes_Constraint {
  /** unique or primary key constraint on columns "account_id", "id" */
  IndexUniqueNotesIdAccountId = 'index_unique_notes_id_account_id',
  /** unique or primary key constraint on columns "id" */
  NotesPkey = 'notes_pkey'
}

/** input type for incrementing numeric columns in table "notes" */
export type Notes_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "notes" */
export type Notes_Insert_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  created_by?: InputMaybe<Scalars['String']['input']>;
  creator_email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  project?: InputMaybe<Projects_Obj_Rel_Insert_Input>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Notes_Max_Fields = {
  __typename?: 'notes_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  created_by?: Maybe<Scalars['String']['output']>;
  creator_email?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "notes" */
export type Notes_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  created_by?: InputMaybe<Order_By>;
  creator_email?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Notes_Min_Fields = {
  __typename?: 'notes_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  created_by?: Maybe<Scalars['String']['output']>;
  creator_email?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "notes" */
export type Notes_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  created_by?: InputMaybe<Order_By>;
  creator_email?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "notes" */
export type Notes_Mutation_Response = {
  __typename?: 'notes_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Notes>;
};

/** on_conflict condition type for table "notes" */
export type Notes_On_Conflict = {
  constraint: Notes_Constraint;
  update_columns?: Array<Notes_Update_Column>;
  where?: InputMaybe<Notes_Bool_Exp>;
};

/** Ordering options when selecting data from "notes". */
export type Notes_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  created_by?: InputMaybe<Order_By>;
  creator_email?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  project?: InputMaybe<Projects_Order_By>;
  project_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: notes */
export type Notes_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "notes" */
export enum Notes_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CreatedBy = 'created_by',
  /** column name */
  CreatorEmail = 'creator_email',
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "notes" */
export type Notes_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  created_by?: InputMaybe<Scalars['String']['input']>;
  creator_email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Notes_Stddev_Fields = {
  __typename?: 'notes_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "notes" */
export type Notes_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Notes_Stddev_Pop_Fields = {
  __typename?: 'notes_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "notes" */
export type Notes_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Notes_Stddev_Samp_Fields = {
  __typename?: 'notes_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "notes" */
export type Notes_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "notes" */
export type Notes_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Notes_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Notes_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  created_by?: InputMaybe<Scalars['String']['input']>;
  creator_email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Notes_Sum_Fields = {
  __typename?: 'notes_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "notes" */
export type Notes_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** update columns of table "notes" */
export enum Notes_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CreatedBy = 'created_by',
  /** column name */
  CreatorEmail = 'creator_email',
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

export type Notes_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Notes_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Notes_Set_Input>;
  /** filter the rows which have to be updated */
  where: Notes_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Notes_Var_Pop_Fields = {
  __typename?: 'notes_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "notes" */
export type Notes_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Notes_Var_Samp_Fields = {
  __typename?: 'notes_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "notes" */
export type Notes_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Notes_Variance_Fields = {
  __typename?: 'notes_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "notes" */
export type Notes_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Boolean expression to compare columns of type "numeric". All fields are combined with logical 'AND'. */
export type Numeric_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['numeric']['input']>;
  _gt?: InputMaybe<Scalars['numeric']['input']>;
  _gte?: InputMaybe<Scalars['numeric']['input']>;
  _in?: InputMaybe<Array<Scalars['numeric']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['numeric']['input']>;
  _lte?: InputMaybe<Scalars['numeric']['input']>;
  _neq?: InputMaybe<Scalars['numeric']['input']>;
  _nin?: InputMaybe<Array<Scalars['numeric']['input']>>;
};

/** Boolean expression to compare columns of type "oid". All fields are combined with logical 'AND'. */
export type Oid_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['oid']['input']>;
  _gt?: InputMaybe<Scalars['oid']['input']>;
  _gte?: InputMaybe<Scalars['oid']['input']>;
  _in?: InputMaybe<Array<Scalars['oid']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['oid']['input']>;
  _lte?: InputMaybe<Scalars['oid']['input']>;
  _neq?: InputMaybe<Scalars['oid']['input']>;
  _nin?: InputMaybe<Array<Scalars['oid']['input']>>;
};

/** column ordering options */
export enum Order_By {
  /** in ascending order, nulls last */
  Asc = 'asc',
  /** in ascending order, nulls first */
  AscNullsFirst = 'asc_nulls_first',
  /** in ascending order, nulls last */
  AscNullsLast = 'asc_nulls_last',
  /** in descending order, nulls first */
  Desc = 'desc',
  /** in descending order, nulls first */
  DescNullsFirst = 'desc_nulls_first',
  /** in descending order, nulls last */
  DescNullsLast = 'desc_nulls_last'
}

/** columns and relationships of "other_costs" */
export type Other_Costs = {
  __typename?: 'other_costs';
  /** An object relationship */
  account: Accounts;
  account_id: Scalars['Int']['output'];
  charge: Scalars['numeric']['output'];
  cost: Scalars['numeric']['output'];
  created_at: Scalars['timestamp']['output'];
  date: Scalars['date']['output'];
  date_runn?: Maybe<Scalars['String']['output']>;
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  /** An object relationship */
  project: Projects;
  project_id: Scalars['Int']['output'];
  updated_at: Scalars['timestamp']['output'];
};

/** aggregated selection of "other_costs" */
export type Other_Costs_Aggregate = {
  __typename?: 'other_costs_aggregate';
  aggregate?: Maybe<Other_Costs_Aggregate_Fields>;
  nodes: Array<Other_Costs>;
};

export type Other_Costs_Aggregate_Bool_Exp = {
  count?: InputMaybe<Other_Costs_Aggregate_Bool_Exp_Count>;
};

export type Other_Costs_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Other_Costs_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Other_Costs_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "other_costs" */
export type Other_Costs_Aggregate_Fields = {
  __typename?: 'other_costs_aggregate_fields';
  avg?: Maybe<Other_Costs_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Other_Costs_Max_Fields>;
  min?: Maybe<Other_Costs_Min_Fields>;
  stddev?: Maybe<Other_Costs_Stddev_Fields>;
  stddev_pop?: Maybe<Other_Costs_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Other_Costs_Stddev_Samp_Fields>;
  sum?: Maybe<Other_Costs_Sum_Fields>;
  var_pop?: Maybe<Other_Costs_Var_Pop_Fields>;
  var_samp?: Maybe<Other_Costs_Var_Samp_Fields>;
  variance?: Maybe<Other_Costs_Variance_Fields>;
};


/** aggregate fields of "other_costs" */
export type Other_Costs_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Other_Costs_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "other_costs" */
export type Other_Costs_Aggregate_Order_By = {
  avg?: InputMaybe<Other_Costs_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Other_Costs_Max_Order_By>;
  min?: InputMaybe<Other_Costs_Min_Order_By>;
  stddev?: InputMaybe<Other_Costs_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Other_Costs_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Other_Costs_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Other_Costs_Sum_Order_By>;
  var_pop?: InputMaybe<Other_Costs_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Other_Costs_Var_Samp_Order_By>;
  variance?: InputMaybe<Other_Costs_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "other_costs" */
export type Other_Costs_Arr_Rel_Insert_Input = {
  data: Array<Other_Costs_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Other_Costs_On_Conflict>;
};

/** aggregate avg on columns */
export type Other_Costs_Avg_Fields = {
  __typename?: 'other_costs_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  charge?: Maybe<Scalars['Float']['output']>;
  cost?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "other_costs" */
export type Other_Costs_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  charge?: InputMaybe<Order_By>;
  cost?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "other_costs". All fields are combined with a logical 'AND'. */
export type Other_Costs_Bool_Exp = {
  _and?: InputMaybe<Array<Other_Costs_Bool_Exp>>;
  _not?: InputMaybe<Other_Costs_Bool_Exp>;
  _or?: InputMaybe<Array<Other_Costs_Bool_Exp>>;
  account?: InputMaybe<Accounts_Bool_Exp>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  charge?: InputMaybe<Numeric_Comparison_Exp>;
  cost?: InputMaybe<Numeric_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  date?: InputMaybe<Date_Comparison_Exp>;
  date_runn?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  project?: InputMaybe<Projects_Bool_Exp>;
  project_id?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "other_costs" */
export enum Other_Costs_Constraint {
  /** unique or primary key constraint on columns "account_id", "id" */
  IndexUniqueOtherCostsIdAccountId = 'index_unique_other_costs_id_account_id',
  /** unique or primary key constraint on columns "id" */
  OtherCostsPkey = 'other_costs_pkey'
}

/** input type for incrementing numeric columns in table "other_costs" */
export type Other_Costs_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  charge?: InputMaybe<Scalars['numeric']['input']>;
  cost?: InputMaybe<Scalars['numeric']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "other_costs" */
export type Other_Costs_Insert_Input = {
  account?: InputMaybe<Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['Int']['input']>;
  charge?: InputMaybe<Scalars['numeric']['input']>;
  cost?: InputMaybe<Scalars['numeric']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  date?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  project?: InputMaybe<Projects_Obj_Rel_Insert_Input>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Other_Costs_Max_Fields = {
  __typename?: 'other_costs_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  charge?: Maybe<Scalars['numeric']['output']>;
  cost?: Maybe<Scalars['numeric']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  date?: Maybe<Scalars['date']['output']>;
  date_runn?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "other_costs" */
export type Other_Costs_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  charge?: InputMaybe<Order_By>;
  cost?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  date?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Other_Costs_Min_Fields = {
  __typename?: 'other_costs_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  charge?: Maybe<Scalars['numeric']['output']>;
  cost?: Maybe<Scalars['numeric']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  date?: Maybe<Scalars['date']['output']>;
  date_runn?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "other_costs" */
export type Other_Costs_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  charge?: InputMaybe<Order_By>;
  cost?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  date?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "other_costs" */
export type Other_Costs_Mutation_Response = {
  __typename?: 'other_costs_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Other_Costs>;
};

/** on_conflict condition type for table "other_costs" */
export type Other_Costs_On_Conflict = {
  constraint: Other_Costs_Constraint;
  update_columns?: Array<Other_Costs_Update_Column>;
  where?: InputMaybe<Other_Costs_Bool_Exp>;
};

/** Ordering options when selecting data from "other_costs". */
export type Other_Costs_Order_By = {
  account?: InputMaybe<Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  charge?: InputMaybe<Order_By>;
  cost?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  date?: InputMaybe<Order_By>;
  date_runn?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  project?: InputMaybe<Projects_Order_By>;
  project_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: other_costs */
export type Other_Costs_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "other_costs" */
export enum Other_Costs_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Charge = 'charge',
  /** column name */
  Cost = 'cost',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Date = 'date',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "other_costs" */
export type Other_Costs_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  charge?: InputMaybe<Scalars['numeric']['input']>;
  cost?: InputMaybe<Scalars['numeric']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  date?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Other_Costs_Stddev_Fields = {
  __typename?: 'other_costs_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  charge?: Maybe<Scalars['Float']['output']>;
  cost?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "other_costs" */
export type Other_Costs_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  charge?: InputMaybe<Order_By>;
  cost?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Other_Costs_Stddev_Pop_Fields = {
  __typename?: 'other_costs_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  charge?: Maybe<Scalars['Float']['output']>;
  cost?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "other_costs" */
export type Other_Costs_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  charge?: InputMaybe<Order_By>;
  cost?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Other_Costs_Stddev_Samp_Fields = {
  __typename?: 'other_costs_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  charge?: Maybe<Scalars['Float']['output']>;
  cost?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "other_costs" */
export type Other_Costs_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  charge?: InputMaybe<Order_By>;
  cost?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "other_costs" */
export type Other_Costs_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Other_Costs_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Other_Costs_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  charge?: InputMaybe<Scalars['numeric']['input']>;
  cost?: InputMaybe<Scalars['numeric']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  date?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Other_Costs_Sum_Fields = {
  __typename?: 'other_costs_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  charge?: Maybe<Scalars['numeric']['output']>;
  cost?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "other_costs" */
export type Other_Costs_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  charge?: InputMaybe<Order_By>;
  cost?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** update columns of table "other_costs" */
export enum Other_Costs_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Charge = 'charge',
  /** column name */
  Cost = 'cost',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Date = 'date',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Other_Costs_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Other_Costs_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Other_Costs_Set_Input>;
  /** filter the rows which have to be updated */
  where: Other_Costs_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Other_Costs_Var_Pop_Fields = {
  __typename?: 'other_costs_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  charge?: Maybe<Scalars['Float']['output']>;
  cost?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "other_costs" */
export type Other_Costs_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  charge?: InputMaybe<Order_By>;
  cost?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Other_Costs_Var_Samp_Fields = {
  __typename?: 'other_costs_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  charge?: Maybe<Scalars['Float']['output']>;
  cost?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "other_costs" */
export type Other_Costs_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  charge?: InputMaybe<Order_By>;
  cost?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Other_Costs_Variance_Fields = {
  __typename?: 'other_costs_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  charge?: Maybe<Scalars['Float']['output']>;
  cost?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "other_costs" */
export type Other_Costs_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  charge?: InputMaybe<Order_By>;
  cost?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "people" */
export type People = {
  __typename?: 'people';
  /** An object relationship */
  account: Accounts;
  account_id: Scalars['Int']['output'];
  active: Scalars['Boolean']['output'];
  /** An array relationship */
  actuals: Array<Actuals>;
  /** An aggregate relationship */
  actuals_aggregate: Actuals_Aggregate;
  archivable?: Maybe<Scalars['Boolean']['output']>;
  /** An array relationship */
  assignments: Array<Assignments>;
  /** An aggregate relationship */
  assignments_aggregate: Assignments_Aggregate;
  /** An array relationship */
  competencies: Array<Competencies>;
  /** An aggregate relationship */
  competencies_aggregate: Competencies_Aggregate;
  /** An array relationship */
  contracts: Array<Contracts>;
  /** An aggregate relationship */
  contracts_aggregate: Contracts_Aggregate;
  created_at: Scalars['timestamp']['output'];
  current_contract?: Maybe<Array<Contracts>>;
  /** A computed field, executes function "people_current_role" */
  current_role?: Maybe<Array<Roles>>;
  /** An array relationship */
  custom_select_values: Array<Custom_Select_Values>;
  /** An aggregate relationship */
  custom_select_values_aggregate: Custom_Select_Values_Aggregate;
  /** An array relationship */
  custom_text_values: Array<Custom_Text_Values>;
  /** An aggregate relationship */
  custom_text_values_aggregate: Custom_Text_Values_Aggregate;
  email?: Maybe<Scalars['String']['output']>;
  /** An array relationship */
  ext_person_links: Array<Ext_Person_Link>;
  /** An aggregate relationship */
  ext_person_links_aggregate: Ext_Person_Link_Aggregate;
  first_name: Scalars['String']['output'];
  /** An object relationship */
  holidays_group?: Maybe<Holidays_Groups>;
  holidays_group_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  image_key?: Maybe<Scalars['String']['output']>;
  is_placeholder?: Maybe<Scalars['Boolean']['output']>;
  last_name: Scalars['String']['output'];
  /** An array relationship */
  people_notes: Array<People_Notes>;
  /** An aggregate relationship */
  people_notes_aggregate: People_Notes_Aggregate;
  /** An array relationship */
  person_requests: Array<Person_Requests>;
  /** An aggregate relationship */
  person_requests_aggregate: Person_Requests_Aggregate;
  placeholder_count: Scalars['Int']['output'];
  /** An array relationship */
  project_memberships: Array<Project_Members>;
  /** An aggregate relationship */
  project_memberships_aggregate: Project_Members_Aggregate;
  references: Scalars['jsonb']['output'];
  tags: Scalars['jsonb']['output'];
  /** An object relationship */
  team?: Maybe<Teams>;
  team_id?: Maybe<Scalars['Int']['output']>;
  /** An array relationship */
  time_offs: Array<Time_Offs>;
  /** An aggregate relationship */
  time_offs_aggregate: Time_Offs_Aggregate;
  updated_at: Scalars['timestamp']['output'];
};


/** columns and relationships of "people" */
export type PeopleActualsArgs = {
  distinct_on?: InputMaybe<Array<Actuals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Actuals_Order_By>>;
  where?: InputMaybe<Actuals_Bool_Exp>;
};


/** columns and relationships of "people" */
export type PeopleActuals_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Actuals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Actuals_Order_By>>;
  where?: InputMaybe<Actuals_Bool_Exp>;
};


/** columns and relationships of "people" */
export type PeopleAssignmentsArgs = {
  distinct_on?: InputMaybe<Array<Assignments_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Assignments_Order_By>>;
  where?: InputMaybe<Assignments_Bool_Exp>;
};


/** columns and relationships of "people" */
export type PeopleAssignments_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Assignments_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Assignments_Order_By>>;
  where?: InputMaybe<Assignments_Bool_Exp>;
};


/** columns and relationships of "people" */
export type PeopleCompetenciesArgs = {
  distinct_on?: InputMaybe<Array<Competencies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Competencies_Order_By>>;
  where?: InputMaybe<Competencies_Bool_Exp>;
};


/** columns and relationships of "people" */
export type PeopleCompetencies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Competencies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Competencies_Order_By>>;
  where?: InputMaybe<Competencies_Bool_Exp>;
};


/** columns and relationships of "people" */
export type PeopleContractsArgs = {
  distinct_on?: InputMaybe<Array<Contracts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contracts_Order_By>>;
  where?: InputMaybe<Contracts_Bool_Exp>;
};


/** columns and relationships of "people" */
export type PeopleContracts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Contracts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contracts_Order_By>>;
  where?: InputMaybe<Contracts_Bool_Exp>;
};


/** columns and relationships of "people" */
export type PeopleCurrent_ContractArgs = {
  distinct_on?: InputMaybe<Array<Contracts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contracts_Order_By>>;
  where?: InputMaybe<Contracts_Bool_Exp>;
};


/** columns and relationships of "people" */
export type PeopleCurrent_RoleArgs = {
  distinct_on?: InputMaybe<Array<Roles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Roles_Order_By>>;
  where?: InputMaybe<Roles_Bool_Exp>;
};


/** columns and relationships of "people" */
export type PeopleCustom_Select_ValuesArgs = {
  distinct_on?: InputMaybe<Array<Custom_Select_Values_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Custom_Select_Values_Order_By>>;
  where?: InputMaybe<Custom_Select_Values_Bool_Exp>;
};


/** columns and relationships of "people" */
export type PeopleCustom_Select_Values_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Custom_Select_Values_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Custom_Select_Values_Order_By>>;
  where?: InputMaybe<Custom_Select_Values_Bool_Exp>;
};


/** columns and relationships of "people" */
export type PeopleCustom_Text_ValuesArgs = {
  distinct_on?: InputMaybe<Array<Custom_Text_Values_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Custom_Text_Values_Order_By>>;
  where?: InputMaybe<Custom_Text_Values_Bool_Exp>;
};


/** columns and relationships of "people" */
export type PeopleCustom_Text_Values_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Custom_Text_Values_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Custom_Text_Values_Order_By>>;
  where?: InputMaybe<Custom_Text_Values_Bool_Exp>;
};


/** columns and relationships of "people" */
export type PeopleExt_Person_LinksArgs = {
  distinct_on?: InputMaybe<Array<Ext_Person_Link_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Person_Link_Order_By>>;
  where?: InputMaybe<Ext_Person_Link_Bool_Exp>;
};


/** columns and relationships of "people" */
export type PeopleExt_Person_Links_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ext_Person_Link_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Person_Link_Order_By>>;
  where?: InputMaybe<Ext_Person_Link_Bool_Exp>;
};


/** columns and relationships of "people" */
export type PeoplePeople_NotesArgs = {
  distinct_on?: InputMaybe<Array<People_Notes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<People_Notes_Order_By>>;
  where?: InputMaybe<People_Notes_Bool_Exp>;
};


/** columns and relationships of "people" */
export type PeoplePeople_Notes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<People_Notes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<People_Notes_Order_By>>;
  where?: InputMaybe<People_Notes_Bool_Exp>;
};


/** columns and relationships of "people" */
export type PeoplePerson_RequestsArgs = {
  distinct_on?: InputMaybe<Array<Person_Requests_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Person_Requests_Order_By>>;
  where?: InputMaybe<Person_Requests_Bool_Exp>;
};


/** columns and relationships of "people" */
export type PeoplePerson_Requests_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Person_Requests_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Person_Requests_Order_By>>;
  where?: InputMaybe<Person_Requests_Bool_Exp>;
};


/** columns and relationships of "people" */
export type PeopleProject_MembershipsArgs = {
  distinct_on?: InputMaybe<Array<Project_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Members_Order_By>>;
  where?: InputMaybe<Project_Members_Bool_Exp>;
};


/** columns and relationships of "people" */
export type PeopleProject_Memberships_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Project_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Members_Order_By>>;
  where?: InputMaybe<Project_Members_Bool_Exp>;
};


/** columns and relationships of "people" */
export type PeopleReferencesArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** columns and relationships of "people" */
export type PeopleTagsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** columns and relationships of "people" */
export type PeopleTime_OffsArgs = {
  distinct_on?: InputMaybe<Array<Time_Offs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Time_Offs_Order_By>>;
  where?: InputMaybe<Time_Offs_Bool_Exp>;
};


/** columns and relationships of "people" */
export type PeopleTime_Offs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Time_Offs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Time_Offs_Order_By>>;
  where?: InputMaybe<Time_Offs_Bool_Exp>;
};

/** aggregated selection of "people" */
export type People_Aggregate = {
  __typename?: 'people_aggregate';
  aggregate?: Maybe<People_Aggregate_Fields>;
  nodes: Array<People>;
};

export type People_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<People_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<People_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<People_Aggregate_Bool_Exp_Count>;
};

export type People_Aggregate_Bool_Exp_Bool_And = {
  arguments: People_Select_Column_People_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<People_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type People_Aggregate_Bool_Exp_Bool_Or = {
  arguments: People_Select_Column_People_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<People_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type People_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<People_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<People_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "people" */
export type People_Aggregate_Fields = {
  __typename?: 'people_aggregate_fields';
  avg?: Maybe<People_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<People_Max_Fields>;
  min?: Maybe<People_Min_Fields>;
  stddev?: Maybe<People_Stddev_Fields>;
  stddev_pop?: Maybe<People_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<People_Stddev_Samp_Fields>;
  sum?: Maybe<People_Sum_Fields>;
  var_pop?: Maybe<People_Var_Pop_Fields>;
  var_samp?: Maybe<People_Var_Samp_Fields>;
  variance?: Maybe<People_Variance_Fields>;
};


/** aggregate fields of "people" */
export type People_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<People_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "people" */
export type People_Aggregate_Order_By = {
  avg?: InputMaybe<People_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<People_Max_Order_By>;
  min?: InputMaybe<People_Min_Order_By>;
  stddev?: InputMaybe<People_Stddev_Order_By>;
  stddev_pop?: InputMaybe<People_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<People_Stddev_Samp_Order_By>;
  sum?: InputMaybe<People_Sum_Order_By>;
  var_pop?: InputMaybe<People_Var_Pop_Order_By>;
  var_samp?: InputMaybe<People_Var_Samp_Order_By>;
  variance?: InputMaybe<People_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type People_Append_Input = {
  references?: InputMaybe<Scalars['jsonb']['input']>;
  tags?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "people" */
export type People_Arr_Rel_Insert_Input = {
  data: Array<People_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<People_On_Conflict>;
};

/** aggregate avg on columns */
export type People_Avg_Fields = {
  __typename?: 'people_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  holidays_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  placeholder_count?: Maybe<Scalars['Float']['output']>;
  team_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "people" */
export type People_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  holidays_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  placeholder_count?: InputMaybe<Order_By>;
  team_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "people". All fields are combined with a logical 'AND'. */
export type People_Bool_Exp = {
  _and?: InputMaybe<Array<People_Bool_Exp>>;
  _not?: InputMaybe<People_Bool_Exp>;
  _or?: InputMaybe<Array<People_Bool_Exp>>;
  account?: InputMaybe<Accounts_Bool_Exp>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  active?: InputMaybe<Boolean_Comparison_Exp>;
  actuals?: InputMaybe<Actuals_Bool_Exp>;
  actuals_aggregate?: InputMaybe<Actuals_Aggregate_Bool_Exp>;
  archivable?: InputMaybe<Boolean_Comparison_Exp>;
  assignments?: InputMaybe<Assignments_Bool_Exp>;
  assignments_aggregate?: InputMaybe<Assignments_Aggregate_Bool_Exp>;
  competencies?: InputMaybe<Competencies_Bool_Exp>;
  competencies_aggregate?: InputMaybe<Competencies_Aggregate_Bool_Exp>;
  contracts?: InputMaybe<Contracts_Bool_Exp>;
  contracts_aggregate?: InputMaybe<Contracts_Aggregate_Bool_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  current_contract?: InputMaybe<Contracts_Bool_Exp>;
  current_role?: InputMaybe<Roles_Bool_Exp>;
  custom_select_values?: InputMaybe<Custom_Select_Values_Bool_Exp>;
  custom_select_values_aggregate?: InputMaybe<Custom_Select_Values_Aggregate_Bool_Exp>;
  custom_text_values?: InputMaybe<Custom_Text_Values_Bool_Exp>;
  custom_text_values_aggregate?: InputMaybe<Custom_Text_Values_Aggregate_Bool_Exp>;
  email?: InputMaybe<String_Comparison_Exp>;
  ext_person_links?: InputMaybe<Ext_Person_Link_Bool_Exp>;
  ext_person_links_aggregate?: InputMaybe<Ext_Person_Link_Aggregate_Bool_Exp>;
  first_name?: InputMaybe<String_Comparison_Exp>;
  holidays_group?: InputMaybe<Holidays_Groups_Bool_Exp>;
  holidays_group_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  image_key?: InputMaybe<String_Comparison_Exp>;
  is_placeholder?: InputMaybe<Boolean_Comparison_Exp>;
  last_name?: InputMaybe<String_Comparison_Exp>;
  people_notes?: InputMaybe<People_Notes_Bool_Exp>;
  people_notes_aggregate?: InputMaybe<People_Notes_Aggregate_Bool_Exp>;
  person_requests?: InputMaybe<Person_Requests_Bool_Exp>;
  person_requests_aggregate?: InputMaybe<Person_Requests_Aggregate_Bool_Exp>;
  placeholder_count?: InputMaybe<Int_Comparison_Exp>;
  project_memberships?: InputMaybe<Project_Members_Bool_Exp>;
  project_memberships_aggregate?: InputMaybe<Project_Members_Aggregate_Bool_Exp>;
  references?: InputMaybe<Jsonb_Comparison_Exp>;
  tags?: InputMaybe<Jsonb_Comparison_Exp>;
  team?: InputMaybe<Teams_Bool_Exp>;
  team_id?: InputMaybe<Int_Comparison_Exp>;
  time_offs?: InputMaybe<Time_Offs_Bool_Exp>;
  time_offs_aggregate?: InputMaybe<Time_Offs_Aggregate_Bool_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "people" */
export enum People_Constraint {
  /** unique or primary key constraint on columns "account_id", "id" */
  IndexUniquePeopleIdAccountId = 'index_unique_people_id_account_id',
  /** unique or primary key constraint on columns "id" */
  PeoplePkey = 'people_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type People_Delete_At_Path_Input = {
  references?: InputMaybe<Array<Scalars['String']['input']>>;
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type People_Delete_Elem_Input = {
  references?: InputMaybe<Scalars['Int']['input']>;
  tags?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type People_Delete_Key_Input = {
  references?: InputMaybe<Scalars['String']['input']>;
  tags?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "people" */
export type People_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  holidays_group_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  placeholder_count?: InputMaybe<Scalars['Int']['input']>;
  team_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "people" */
export type People_Insert_Input = {
  account?: InputMaybe<Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['Int']['input']>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  actuals?: InputMaybe<Actuals_Arr_Rel_Insert_Input>;
  assignments?: InputMaybe<Assignments_Arr_Rel_Insert_Input>;
  competencies?: InputMaybe<Competencies_Arr_Rel_Insert_Input>;
  contracts?: InputMaybe<Contracts_Arr_Rel_Insert_Input>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  custom_select_values?: InputMaybe<Custom_Select_Values_Arr_Rel_Insert_Input>;
  custom_text_values?: InputMaybe<Custom_Text_Values_Arr_Rel_Insert_Input>;
  email?: InputMaybe<Scalars['String']['input']>;
  ext_person_links?: InputMaybe<Ext_Person_Link_Arr_Rel_Insert_Input>;
  first_name?: InputMaybe<Scalars['String']['input']>;
  holidays_group?: InputMaybe<Holidays_Groups_Obj_Rel_Insert_Input>;
  holidays_group_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  image_key?: InputMaybe<Scalars['String']['input']>;
  is_placeholder?: InputMaybe<Scalars['Boolean']['input']>;
  last_name?: InputMaybe<Scalars['String']['input']>;
  people_notes?: InputMaybe<People_Notes_Arr_Rel_Insert_Input>;
  person_requests?: InputMaybe<Person_Requests_Arr_Rel_Insert_Input>;
  placeholder_count?: InputMaybe<Scalars['Int']['input']>;
  project_memberships?: InputMaybe<Project_Members_Arr_Rel_Insert_Input>;
  references?: InputMaybe<Scalars['jsonb']['input']>;
  tags?: InputMaybe<Scalars['jsonb']['input']>;
  team?: InputMaybe<Teams_Obj_Rel_Insert_Input>;
  team_id?: InputMaybe<Scalars['Int']['input']>;
  time_offs?: InputMaybe<Time_Offs_Arr_Rel_Insert_Input>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type People_Max_Fields = {
  __typename?: 'people_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  first_name?: Maybe<Scalars['String']['output']>;
  holidays_group_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  image_key?: Maybe<Scalars['String']['output']>;
  last_name?: Maybe<Scalars['String']['output']>;
  placeholder_count?: Maybe<Scalars['Int']['output']>;
  team_id?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "people" */
export type People_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  first_name?: InputMaybe<Order_By>;
  holidays_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_key?: InputMaybe<Order_By>;
  last_name?: InputMaybe<Order_By>;
  placeholder_count?: InputMaybe<Order_By>;
  team_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type People_Min_Fields = {
  __typename?: 'people_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  first_name?: Maybe<Scalars['String']['output']>;
  holidays_group_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  image_key?: Maybe<Scalars['String']['output']>;
  last_name?: Maybe<Scalars['String']['output']>;
  placeholder_count?: Maybe<Scalars['Int']['output']>;
  team_id?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "people" */
export type People_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  first_name?: InputMaybe<Order_By>;
  holidays_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_key?: InputMaybe<Order_By>;
  last_name?: InputMaybe<Order_By>;
  placeholder_count?: InputMaybe<Order_By>;
  team_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "people" */
export type People_Mutation_Response = {
  __typename?: 'people_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<People>;
};

/** columns and relationships of "people_notes" */
export type People_Notes = {
  __typename?: 'people_notes';
  account_id: Scalars['Int']['output'];
  created_at: Scalars['timestamp']['output'];
  created_by?: Maybe<Scalars['String']['output']>;
  creator_email?: Maybe<Scalars['String']['output']>;
  id: Scalars['Int']['output'];
  note: Scalars['String']['output'];
  /** An object relationship */
  person: People;
  person_id: Scalars['Int']['output'];
  updated_at: Scalars['timestamp']['output'];
  /** An object relationship */
  user?: Maybe<Users>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "people_notes" */
export type People_Notes_Aggregate = {
  __typename?: 'people_notes_aggregate';
  aggregate?: Maybe<People_Notes_Aggregate_Fields>;
  nodes: Array<People_Notes>;
};

export type People_Notes_Aggregate_Bool_Exp = {
  count?: InputMaybe<People_Notes_Aggregate_Bool_Exp_Count>;
};

export type People_Notes_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<People_Notes_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<People_Notes_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "people_notes" */
export type People_Notes_Aggregate_Fields = {
  __typename?: 'people_notes_aggregate_fields';
  avg?: Maybe<People_Notes_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<People_Notes_Max_Fields>;
  min?: Maybe<People_Notes_Min_Fields>;
  stddev?: Maybe<People_Notes_Stddev_Fields>;
  stddev_pop?: Maybe<People_Notes_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<People_Notes_Stddev_Samp_Fields>;
  sum?: Maybe<People_Notes_Sum_Fields>;
  var_pop?: Maybe<People_Notes_Var_Pop_Fields>;
  var_samp?: Maybe<People_Notes_Var_Samp_Fields>;
  variance?: Maybe<People_Notes_Variance_Fields>;
};


/** aggregate fields of "people_notes" */
export type People_Notes_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<People_Notes_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "people_notes" */
export type People_Notes_Aggregate_Order_By = {
  avg?: InputMaybe<People_Notes_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<People_Notes_Max_Order_By>;
  min?: InputMaybe<People_Notes_Min_Order_By>;
  stddev?: InputMaybe<People_Notes_Stddev_Order_By>;
  stddev_pop?: InputMaybe<People_Notes_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<People_Notes_Stddev_Samp_Order_By>;
  sum?: InputMaybe<People_Notes_Sum_Order_By>;
  var_pop?: InputMaybe<People_Notes_Var_Pop_Order_By>;
  var_samp?: InputMaybe<People_Notes_Var_Samp_Order_By>;
  variance?: InputMaybe<People_Notes_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "people_notes" */
export type People_Notes_Arr_Rel_Insert_Input = {
  data: Array<People_Notes_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<People_Notes_On_Conflict>;
};

/** aggregate avg on columns */
export type People_Notes_Avg_Fields = {
  __typename?: 'people_notes_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "people_notes" */
export type People_Notes_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "people_notes". All fields are combined with a logical 'AND'. */
export type People_Notes_Bool_Exp = {
  _and?: InputMaybe<Array<People_Notes_Bool_Exp>>;
  _not?: InputMaybe<People_Notes_Bool_Exp>;
  _or?: InputMaybe<Array<People_Notes_Bool_Exp>>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  created_by?: InputMaybe<String_Comparison_Exp>;
  creator_email?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  note?: InputMaybe<String_Comparison_Exp>;
  person?: InputMaybe<People_Bool_Exp>;
  person_id?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "people_notes" */
export enum People_Notes_Constraint {
  /** unique or primary key constraint on columns "account_id", "id" */
  IndexUniquePeopleNotesIdAccountId = 'index_unique_people_notes_id_account_id',
  /** unique or primary key constraint on columns "id" */
  PeopleNotesPkey = 'people_notes_pkey'
}

/** input type for incrementing numeric columns in table "people_notes" */
export type People_Notes_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "people_notes" */
export type People_Notes_Insert_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  created_by?: InputMaybe<Scalars['String']['input']>;
  creator_email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  person?: InputMaybe<People_Obj_Rel_Insert_Input>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type People_Notes_Max_Fields = {
  __typename?: 'people_notes_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  created_by?: Maybe<Scalars['String']['output']>;
  creator_email?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "people_notes" */
export type People_Notes_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  created_by?: InputMaybe<Order_By>;
  creator_email?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type People_Notes_Min_Fields = {
  __typename?: 'people_notes_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  created_by?: Maybe<Scalars['String']['output']>;
  creator_email?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "people_notes" */
export type People_Notes_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  created_by?: InputMaybe<Order_By>;
  creator_email?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "people_notes" */
export type People_Notes_Mutation_Response = {
  __typename?: 'people_notes_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<People_Notes>;
};

/** on_conflict condition type for table "people_notes" */
export type People_Notes_On_Conflict = {
  constraint: People_Notes_Constraint;
  update_columns?: Array<People_Notes_Update_Column>;
  where?: InputMaybe<People_Notes_Bool_Exp>;
};

/** Ordering options when selecting data from "people_notes". */
export type People_Notes_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  created_by?: InputMaybe<Order_By>;
  creator_email?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  person?: InputMaybe<People_Order_By>;
  person_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: people_notes */
export type People_Notes_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "people_notes" */
export enum People_Notes_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CreatedBy = 'created_by',
  /** column name */
  CreatorEmail = 'creator_email',
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  PersonId = 'person_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "people_notes" */
export type People_Notes_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  created_by?: InputMaybe<Scalars['String']['input']>;
  creator_email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type People_Notes_Stddev_Fields = {
  __typename?: 'people_notes_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "people_notes" */
export type People_Notes_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type People_Notes_Stddev_Pop_Fields = {
  __typename?: 'people_notes_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "people_notes" */
export type People_Notes_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type People_Notes_Stddev_Samp_Fields = {
  __typename?: 'people_notes_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "people_notes" */
export type People_Notes_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "people_notes" */
export type People_Notes_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: People_Notes_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type People_Notes_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  created_by?: InputMaybe<Scalars['String']['input']>;
  creator_email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type People_Notes_Sum_Fields = {
  __typename?: 'people_notes_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "people_notes" */
export type People_Notes_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** update columns of table "people_notes" */
export enum People_Notes_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CreatedBy = 'created_by',
  /** column name */
  CreatorEmail = 'creator_email',
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  PersonId = 'person_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

export type People_Notes_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<People_Notes_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<People_Notes_Set_Input>;
  /** filter the rows which have to be updated */
  where: People_Notes_Bool_Exp;
};

/** aggregate var_pop on columns */
export type People_Notes_Var_Pop_Fields = {
  __typename?: 'people_notes_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "people_notes" */
export type People_Notes_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type People_Notes_Var_Samp_Fields = {
  __typename?: 'people_notes_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "people_notes" */
export type People_Notes_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type People_Notes_Variance_Fields = {
  __typename?: 'people_notes_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "people_notes" */
export type People_Notes_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** input type for inserting object relation for remote table "people" */
export type People_Obj_Rel_Insert_Input = {
  data: People_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<People_On_Conflict>;
};

/** on_conflict condition type for table "people" */
export type People_On_Conflict = {
  constraint: People_Constraint;
  update_columns?: Array<People_Update_Column>;
  where?: InputMaybe<People_Bool_Exp>;
};

/** Ordering options when selecting data from "people". */
export type People_Order_By = {
  account?: InputMaybe<Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  active?: InputMaybe<Order_By>;
  actuals_aggregate?: InputMaybe<Actuals_Aggregate_Order_By>;
  archivable?: InputMaybe<Order_By>;
  assignments_aggregate?: InputMaybe<Assignments_Aggregate_Order_By>;
  competencies_aggregate?: InputMaybe<Competencies_Aggregate_Order_By>;
  contracts_aggregate?: InputMaybe<Contracts_Aggregate_Order_By>;
  created_at?: InputMaybe<Order_By>;
  current_contract_aggregate?: InputMaybe<Contracts_Aggregate_Order_By>;
  current_role_aggregate?: InputMaybe<Roles_Aggregate_Order_By>;
  custom_select_values_aggregate?: InputMaybe<Custom_Select_Values_Aggregate_Order_By>;
  custom_text_values_aggregate?: InputMaybe<Custom_Text_Values_Aggregate_Order_By>;
  email?: InputMaybe<Order_By>;
  ext_person_links_aggregate?: InputMaybe<Ext_Person_Link_Aggregate_Order_By>;
  first_name?: InputMaybe<Order_By>;
  holidays_group?: InputMaybe<Holidays_Groups_Order_By>;
  holidays_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_key?: InputMaybe<Order_By>;
  is_placeholder?: InputMaybe<Order_By>;
  last_name?: InputMaybe<Order_By>;
  people_notes_aggregate?: InputMaybe<People_Notes_Aggregate_Order_By>;
  person_requests_aggregate?: InputMaybe<Person_Requests_Aggregate_Order_By>;
  placeholder_count?: InputMaybe<Order_By>;
  project_memberships_aggregate?: InputMaybe<Project_Members_Aggregate_Order_By>;
  references?: InputMaybe<Order_By>;
  tags?: InputMaybe<Order_By>;
  team?: InputMaybe<Teams_Order_By>;
  team_id?: InputMaybe<Order_By>;
  time_offs_aggregate?: InputMaybe<Time_Offs_Aggregate_Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: people */
export type People_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type People_Prepend_Input = {
  references?: InputMaybe<Scalars['jsonb']['input']>;
  tags?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "people" */
export enum People_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Active = 'active',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Email = 'email',
  /** column name */
  FirstName = 'first_name',
  /** column name */
  HolidaysGroupId = 'holidays_group_id',
  /** column name */
  Id = 'id',
  /** column name */
  ImageKey = 'image_key',
  /** column name */
  IsPlaceholder = 'is_placeholder',
  /** column name */
  LastName = 'last_name',
  /** column name */
  PlaceholderCount = 'placeholder_count',
  /** column name */
  References = 'references',
  /** column name */
  Tags = 'tags',
  /** column name */
  TeamId = 'team_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** select "people_aggregate_bool_exp_bool_and_arguments_columns" columns of table "people" */
export enum People_Select_Column_People_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  Active = 'active',
  /** column name */
  IsPlaceholder = 'is_placeholder'
}

/** select "people_aggregate_bool_exp_bool_or_arguments_columns" columns of table "people" */
export enum People_Select_Column_People_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  Active = 'active',
  /** column name */
  IsPlaceholder = 'is_placeholder'
}

/** input type for updating data in table "people" */
export type People_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  first_name?: InputMaybe<Scalars['String']['input']>;
  holidays_group_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  image_key?: InputMaybe<Scalars['String']['input']>;
  is_placeholder?: InputMaybe<Scalars['Boolean']['input']>;
  last_name?: InputMaybe<Scalars['String']['input']>;
  placeholder_count?: InputMaybe<Scalars['Int']['input']>;
  references?: InputMaybe<Scalars['jsonb']['input']>;
  tags?: InputMaybe<Scalars['jsonb']['input']>;
  team_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type People_Stddev_Fields = {
  __typename?: 'people_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  holidays_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  placeholder_count?: Maybe<Scalars['Float']['output']>;
  team_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "people" */
export type People_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  holidays_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  placeholder_count?: InputMaybe<Order_By>;
  team_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type People_Stddev_Pop_Fields = {
  __typename?: 'people_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  holidays_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  placeholder_count?: Maybe<Scalars['Float']['output']>;
  team_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "people" */
export type People_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  holidays_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  placeholder_count?: InputMaybe<Order_By>;
  team_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type People_Stddev_Samp_Fields = {
  __typename?: 'people_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  holidays_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  placeholder_count?: Maybe<Scalars['Float']['output']>;
  team_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "people" */
export type People_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  holidays_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  placeholder_count?: InputMaybe<Order_By>;
  team_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "people" */
export type People_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: People_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type People_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  first_name?: InputMaybe<Scalars['String']['input']>;
  holidays_group_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  image_key?: InputMaybe<Scalars['String']['input']>;
  is_placeholder?: InputMaybe<Scalars['Boolean']['input']>;
  last_name?: InputMaybe<Scalars['String']['input']>;
  placeholder_count?: InputMaybe<Scalars['Int']['input']>;
  references?: InputMaybe<Scalars['jsonb']['input']>;
  tags?: InputMaybe<Scalars['jsonb']['input']>;
  team_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type People_Sum_Fields = {
  __typename?: 'people_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  holidays_group_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  placeholder_count?: Maybe<Scalars['Int']['output']>;
  team_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "people" */
export type People_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  holidays_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  placeholder_count?: InputMaybe<Order_By>;
  team_id?: InputMaybe<Order_By>;
};

/** update columns of table "people" */
export enum People_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Active = 'active',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Email = 'email',
  /** column name */
  FirstName = 'first_name',
  /** column name */
  HolidaysGroupId = 'holidays_group_id',
  /** column name */
  Id = 'id',
  /** column name */
  ImageKey = 'image_key',
  /** column name */
  IsPlaceholder = 'is_placeholder',
  /** column name */
  LastName = 'last_name',
  /** column name */
  PlaceholderCount = 'placeholder_count',
  /** column name */
  References = 'references',
  /** column name */
  Tags = 'tags',
  /** column name */
  TeamId = 'team_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type People_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<People_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<People_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<People_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<People_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<People_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<People_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<People_Set_Input>;
  /** filter the rows which have to be updated */
  where: People_Bool_Exp;
};

/** aggregate var_pop on columns */
export type People_Var_Pop_Fields = {
  __typename?: 'people_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  holidays_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  placeholder_count?: Maybe<Scalars['Float']['output']>;
  team_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "people" */
export type People_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  holidays_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  placeholder_count?: InputMaybe<Order_By>;
  team_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type People_Var_Samp_Fields = {
  __typename?: 'people_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  holidays_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  placeholder_count?: Maybe<Scalars['Float']['output']>;
  team_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "people" */
export type People_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  holidays_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  placeholder_count?: InputMaybe<Order_By>;
  team_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type People_Variance_Fields = {
  __typename?: 'people_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  holidays_group_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  placeholder_count?: Maybe<Scalars['Float']['output']>;
  team_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "people" */
export type People_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  holidays_group_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  placeholder_count?: InputMaybe<Order_By>;
  team_id?: InputMaybe<Order_By>;
};

/** Boolean expression to compare columns of type "person_request_statuses". All fields are combined with logical 'AND'. */
export type Person_Request_Statuses_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['person_request_statuses']['input']>;
  _gt?: InputMaybe<Scalars['person_request_statuses']['input']>;
  _gte?: InputMaybe<Scalars['person_request_statuses']['input']>;
  _in?: InputMaybe<Array<Scalars['person_request_statuses']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['person_request_statuses']['input']>;
  _lte?: InputMaybe<Scalars['person_request_statuses']['input']>;
  _neq?: InputMaybe<Scalars['person_request_statuses']['input']>;
  _nin?: InputMaybe<Array<Scalars['person_request_statuses']['input']>>;
};

/** columns and relationships of "person_requests" */
export type Person_Requests = {
  __typename?: 'person_requests';
  account_id: Scalars['Int']['output'];
  created_at: Scalars['timestamp']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  person: People;
  person_id: Scalars['Int']['output'];
  /** An object relationship */
  project: Projects;
  project_id: Scalars['Int']['output'];
  status: Scalars['person_request_statuses']['output'];
  updated_at: Scalars['timestamp']['output'];
  updater_id?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  user?: Maybe<Users>;
};

/** aggregated selection of "person_requests" */
export type Person_Requests_Aggregate = {
  __typename?: 'person_requests_aggregate';
  aggregate?: Maybe<Person_Requests_Aggregate_Fields>;
  nodes: Array<Person_Requests>;
};

export type Person_Requests_Aggregate_Bool_Exp = {
  count?: InputMaybe<Person_Requests_Aggregate_Bool_Exp_Count>;
};

export type Person_Requests_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Person_Requests_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Person_Requests_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "person_requests" */
export type Person_Requests_Aggregate_Fields = {
  __typename?: 'person_requests_aggregate_fields';
  avg?: Maybe<Person_Requests_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Person_Requests_Max_Fields>;
  min?: Maybe<Person_Requests_Min_Fields>;
  stddev?: Maybe<Person_Requests_Stddev_Fields>;
  stddev_pop?: Maybe<Person_Requests_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Person_Requests_Stddev_Samp_Fields>;
  sum?: Maybe<Person_Requests_Sum_Fields>;
  var_pop?: Maybe<Person_Requests_Var_Pop_Fields>;
  var_samp?: Maybe<Person_Requests_Var_Samp_Fields>;
  variance?: Maybe<Person_Requests_Variance_Fields>;
};


/** aggregate fields of "person_requests" */
export type Person_Requests_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Person_Requests_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "person_requests" */
export type Person_Requests_Aggregate_Order_By = {
  avg?: InputMaybe<Person_Requests_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Person_Requests_Max_Order_By>;
  min?: InputMaybe<Person_Requests_Min_Order_By>;
  stddev?: InputMaybe<Person_Requests_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Person_Requests_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Person_Requests_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Person_Requests_Sum_Order_By>;
  var_pop?: InputMaybe<Person_Requests_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Person_Requests_Var_Samp_Order_By>;
  variance?: InputMaybe<Person_Requests_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "person_requests" */
export type Person_Requests_Arr_Rel_Insert_Input = {
  data: Array<Person_Requests_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Person_Requests_On_Conflict>;
};

/** aggregate avg on columns */
export type Person_Requests_Avg_Fields = {
  __typename?: 'person_requests_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  updater_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "person_requests" */
export type Person_Requests_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  updater_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "person_requests". All fields are combined with a logical 'AND'. */
export type Person_Requests_Bool_Exp = {
  _and?: InputMaybe<Array<Person_Requests_Bool_Exp>>;
  _not?: InputMaybe<Person_Requests_Bool_Exp>;
  _or?: InputMaybe<Array<Person_Requests_Bool_Exp>>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  person?: InputMaybe<People_Bool_Exp>;
  person_id?: InputMaybe<Int_Comparison_Exp>;
  project?: InputMaybe<Projects_Bool_Exp>;
  project_id?: InputMaybe<Int_Comparison_Exp>;
  status?: InputMaybe<Person_Request_Statuses_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
  updater_id?: InputMaybe<Int_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
};

/** unique or primary key constraints on table "person_requests" */
export enum Person_Requests_Constraint {
  /** unique or primary key constraint on columns "account_id", "person_id" */
  IndexPersonRequestsPersonAccount = 'index_person_requests_person_account',
  /** unique or primary key constraint on columns "id" */
  PersonRequestsPkey = 'person_requests_pkey'
}

/** input type for incrementing numeric columns in table "person_requests" */
export type Person_Requests_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  updater_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "person_requests" */
export type Person_Requests_Insert_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  person?: InputMaybe<People_Obj_Rel_Insert_Input>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  project?: InputMaybe<Projects_Obj_Rel_Insert_Input>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['person_request_statuses']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  updater_id?: InputMaybe<Scalars['Int']['input']>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Person_Requests_Max_Fields = {
  __typename?: 'person_requests_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  status?: Maybe<Scalars['person_request_statuses']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
  updater_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "person_requests" */
export type Person_Requests_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  updater_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Person_Requests_Min_Fields = {
  __typename?: 'person_requests_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  status?: Maybe<Scalars['person_request_statuses']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
  updater_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "person_requests" */
export type Person_Requests_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  updater_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "person_requests" */
export type Person_Requests_Mutation_Response = {
  __typename?: 'person_requests_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Person_Requests>;
};

/** on_conflict condition type for table "person_requests" */
export type Person_Requests_On_Conflict = {
  constraint: Person_Requests_Constraint;
  update_columns?: Array<Person_Requests_Update_Column>;
  where?: InputMaybe<Person_Requests_Bool_Exp>;
};

/** Ordering options when selecting data from "person_requests". */
export type Person_Requests_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person?: InputMaybe<People_Order_By>;
  person_id?: InputMaybe<Order_By>;
  project?: InputMaybe<Projects_Order_By>;
  project_id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  updater_id?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
};

/** primary key columns input for table: person_requests */
export type Person_Requests_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "person_requests" */
export enum Person_Requests_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  PersonId = 'person_id',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  Status = 'status',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UpdaterId = 'updater_id'
}

/** input type for updating data in table "person_requests" */
export type Person_Requests_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['person_request_statuses']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  updater_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Person_Requests_Stddev_Fields = {
  __typename?: 'person_requests_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  updater_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "person_requests" */
export type Person_Requests_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  updater_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Person_Requests_Stddev_Pop_Fields = {
  __typename?: 'person_requests_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  updater_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "person_requests" */
export type Person_Requests_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  updater_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Person_Requests_Stddev_Samp_Fields = {
  __typename?: 'person_requests_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  updater_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "person_requests" */
export type Person_Requests_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  updater_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "person_requests" */
export type Person_Requests_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Person_Requests_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Person_Requests_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['person_request_statuses']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  updater_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Person_Requests_Sum_Fields = {
  __typename?: 'person_requests_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  updater_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "person_requests" */
export type Person_Requests_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  updater_id?: InputMaybe<Order_By>;
};

/** update columns of table "person_requests" */
export enum Person_Requests_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  PersonId = 'person_id',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  Status = 'status',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UpdaterId = 'updater_id'
}

export type Person_Requests_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Person_Requests_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Person_Requests_Set_Input>;
  /** filter the rows which have to be updated */
  where: Person_Requests_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Person_Requests_Var_Pop_Fields = {
  __typename?: 'person_requests_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  updater_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "person_requests" */
export type Person_Requests_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  updater_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Person_Requests_Var_Samp_Fields = {
  __typename?: 'person_requests_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  updater_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "person_requests" */
export type Person_Requests_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  updater_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Person_Requests_Variance_Fields = {
  __typename?: 'person_requests_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  updater_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "person_requests" */
export type Person_Requests_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  updater_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "phases" */
export type Phases = {
  __typename?: 'phases';
  account_id: Scalars['Int']['output'];
  /** An array relationship */
  actuals: Array<Actuals>;
  /** An aggregate relationship */
  actuals_aggregate: Actuals_Aggregate;
  /** An array relationship */
  assignments: Array<Assignments>;
  /** An aggregate relationship */
  assignments_aggregate: Assignments_Aggregate;
  color?: Maybe<Scalars['String']['output']>;
  created_at: Scalars['timestamp']['output'];
  end_date: Scalars['date']['output'];
  end_date_runn?: Maybe<Scalars['String']['output']>;
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  /** An object relationship */
  project: Projects;
  project_id: Scalars['Int']['output'];
  start_date: Scalars['date']['output'];
  start_date_runn?: Maybe<Scalars['String']['output']>;
  updated_at: Scalars['timestamp']['output'];
};


/** columns and relationships of "phases" */
export type PhasesActualsArgs = {
  distinct_on?: InputMaybe<Array<Actuals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Actuals_Order_By>>;
  where?: InputMaybe<Actuals_Bool_Exp>;
};


/** columns and relationships of "phases" */
export type PhasesActuals_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Actuals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Actuals_Order_By>>;
  where?: InputMaybe<Actuals_Bool_Exp>;
};


/** columns and relationships of "phases" */
export type PhasesAssignmentsArgs = {
  distinct_on?: InputMaybe<Array<Assignments_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Assignments_Order_By>>;
  where?: InputMaybe<Assignments_Bool_Exp>;
};


/** columns and relationships of "phases" */
export type PhasesAssignments_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Assignments_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Assignments_Order_By>>;
  where?: InputMaybe<Assignments_Bool_Exp>;
};

/** aggregated selection of "phases" */
export type Phases_Aggregate = {
  __typename?: 'phases_aggregate';
  aggregate?: Maybe<Phases_Aggregate_Fields>;
  nodes: Array<Phases>;
};

export type Phases_Aggregate_Bool_Exp = {
  count?: InputMaybe<Phases_Aggregate_Bool_Exp_Count>;
};

export type Phases_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Phases_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Phases_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "phases" */
export type Phases_Aggregate_Fields = {
  __typename?: 'phases_aggregate_fields';
  avg?: Maybe<Phases_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Phases_Max_Fields>;
  min?: Maybe<Phases_Min_Fields>;
  stddev?: Maybe<Phases_Stddev_Fields>;
  stddev_pop?: Maybe<Phases_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Phases_Stddev_Samp_Fields>;
  sum?: Maybe<Phases_Sum_Fields>;
  var_pop?: Maybe<Phases_Var_Pop_Fields>;
  var_samp?: Maybe<Phases_Var_Samp_Fields>;
  variance?: Maybe<Phases_Variance_Fields>;
};


/** aggregate fields of "phases" */
export type Phases_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Phases_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "phases" */
export type Phases_Aggregate_Order_By = {
  avg?: InputMaybe<Phases_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Phases_Max_Order_By>;
  min?: InputMaybe<Phases_Min_Order_By>;
  stddev?: InputMaybe<Phases_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Phases_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Phases_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Phases_Sum_Order_By>;
  var_pop?: InputMaybe<Phases_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Phases_Var_Samp_Order_By>;
  variance?: InputMaybe<Phases_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "phases" */
export type Phases_Arr_Rel_Insert_Input = {
  data: Array<Phases_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Phases_On_Conflict>;
};

/** aggregate avg on columns */
export type Phases_Avg_Fields = {
  __typename?: 'phases_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "phases" */
export type Phases_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "phases". All fields are combined with a logical 'AND'. */
export type Phases_Bool_Exp = {
  _and?: InputMaybe<Array<Phases_Bool_Exp>>;
  _not?: InputMaybe<Phases_Bool_Exp>;
  _or?: InputMaybe<Array<Phases_Bool_Exp>>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  actuals?: InputMaybe<Actuals_Bool_Exp>;
  actuals_aggregate?: InputMaybe<Actuals_Aggregate_Bool_Exp>;
  assignments?: InputMaybe<Assignments_Bool_Exp>;
  assignments_aggregate?: InputMaybe<Assignments_Aggregate_Bool_Exp>;
  color?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  end_date?: InputMaybe<Date_Comparison_Exp>;
  end_date_runn?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  project?: InputMaybe<Projects_Bool_Exp>;
  project_id?: InputMaybe<Int_Comparison_Exp>;
  start_date?: InputMaybe<Date_Comparison_Exp>;
  start_date_runn?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "phases" */
export enum Phases_Constraint {
  /** unique or primary key constraint on columns "account_id", "id" */
  IndexUniquePhasesIdAccountId = 'index_unique_phases_id_account_id',
  /** unique or primary key constraint on columns "id" */
  PhasesPkey = 'phases_pkey'
}

/** input type for incrementing numeric columns in table "phases" */
export type Phases_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "phases" */
export type Phases_Insert_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  actuals?: InputMaybe<Actuals_Arr_Rel_Insert_Input>;
  assignments?: InputMaybe<Assignments_Arr_Rel_Insert_Input>;
  color?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  end_date?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  project?: InputMaybe<Projects_Obj_Rel_Insert_Input>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  start_date?: InputMaybe<Scalars['date']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Phases_Max_Fields = {
  __typename?: 'phases_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  color?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  end_date?: Maybe<Scalars['date']['output']>;
  end_date_runn?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  start_date?: Maybe<Scalars['date']['output']>;
  start_date_runn?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "phases" */
export type Phases_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  color?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  end_date?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Phases_Min_Fields = {
  __typename?: 'phases_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  color?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  end_date?: Maybe<Scalars['date']['output']>;
  end_date_runn?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  start_date?: Maybe<Scalars['date']['output']>;
  start_date_runn?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "phases" */
export type Phases_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  color?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  end_date?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "phases" */
export type Phases_Mutation_Response = {
  __typename?: 'phases_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Phases>;
};

/** input type for inserting object relation for remote table "phases" */
export type Phases_Obj_Rel_Insert_Input = {
  data: Phases_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Phases_On_Conflict>;
};

/** on_conflict condition type for table "phases" */
export type Phases_On_Conflict = {
  constraint: Phases_Constraint;
  update_columns?: Array<Phases_Update_Column>;
  where?: InputMaybe<Phases_Bool_Exp>;
};

/** Ordering options when selecting data from "phases". */
export type Phases_Order_By = {
  account_id?: InputMaybe<Order_By>;
  actuals_aggregate?: InputMaybe<Actuals_Aggregate_Order_By>;
  assignments_aggregate?: InputMaybe<Assignments_Aggregate_Order_By>;
  color?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  end_date?: InputMaybe<Order_By>;
  end_date_runn?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  project?: InputMaybe<Projects_Order_By>;
  project_id?: InputMaybe<Order_By>;
  start_date?: InputMaybe<Order_By>;
  start_date_runn?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: phases */
export type Phases_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "phases" */
export enum Phases_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Color = 'color',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  EndDate = 'end_date',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "phases" */
export type Phases_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  color?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  end_date?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  start_date?: InputMaybe<Scalars['date']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Phases_Stddev_Fields = {
  __typename?: 'phases_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "phases" */
export type Phases_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Phases_Stddev_Pop_Fields = {
  __typename?: 'phases_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "phases" */
export type Phases_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Phases_Stddev_Samp_Fields = {
  __typename?: 'phases_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "phases" */
export type Phases_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "phases" */
export type Phases_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Phases_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Phases_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  color?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  end_date?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  start_date?: InputMaybe<Scalars['date']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Phases_Sum_Fields = {
  __typename?: 'phases_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "phases" */
export type Phases_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** update columns of table "phases" */
export enum Phases_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Color = 'color',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  EndDate = 'end_date',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Phases_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Phases_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Phases_Set_Input>;
  /** filter the rows which have to be updated */
  where: Phases_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Phases_Var_Pop_Fields = {
  __typename?: 'phases_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "phases" */
export type Phases_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Phases_Var_Samp_Fields = {
  __typename?: 'phases_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "phases" */
export type Phases_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Phases_Variance_Fields = {
  __typename?: 'phases_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "phases" */
export type Phases_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "project_editors" */
export type Project_Editors = {
  __typename?: 'project_editors';
  /** An object relationship */
  account: Accounts;
  account_id: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  project: Projects;
  project_id: Scalars['Int']['output'];
  /** An object relationship */
  user: Users;
  user_id: Scalars['Int']['output'];
};

/** aggregated selection of "project_editors" */
export type Project_Editors_Aggregate = {
  __typename?: 'project_editors_aggregate';
  aggregate?: Maybe<Project_Editors_Aggregate_Fields>;
  nodes: Array<Project_Editors>;
};

export type Project_Editors_Aggregate_Bool_Exp = {
  count?: InputMaybe<Project_Editors_Aggregate_Bool_Exp_Count>;
};

export type Project_Editors_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Project_Editors_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Project_Editors_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "project_editors" */
export type Project_Editors_Aggregate_Fields = {
  __typename?: 'project_editors_aggregate_fields';
  avg?: Maybe<Project_Editors_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Project_Editors_Max_Fields>;
  min?: Maybe<Project_Editors_Min_Fields>;
  stddev?: Maybe<Project_Editors_Stddev_Fields>;
  stddev_pop?: Maybe<Project_Editors_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Project_Editors_Stddev_Samp_Fields>;
  sum?: Maybe<Project_Editors_Sum_Fields>;
  var_pop?: Maybe<Project_Editors_Var_Pop_Fields>;
  var_samp?: Maybe<Project_Editors_Var_Samp_Fields>;
  variance?: Maybe<Project_Editors_Variance_Fields>;
};


/** aggregate fields of "project_editors" */
export type Project_Editors_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Project_Editors_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "project_editors" */
export type Project_Editors_Aggregate_Order_By = {
  avg?: InputMaybe<Project_Editors_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Project_Editors_Max_Order_By>;
  min?: InputMaybe<Project_Editors_Min_Order_By>;
  stddev?: InputMaybe<Project_Editors_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Project_Editors_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Project_Editors_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Project_Editors_Sum_Order_By>;
  var_pop?: InputMaybe<Project_Editors_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Project_Editors_Var_Samp_Order_By>;
  variance?: InputMaybe<Project_Editors_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "project_editors" */
export type Project_Editors_Arr_Rel_Insert_Input = {
  data: Array<Project_Editors_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Project_Editors_On_Conflict>;
};

/** aggregate avg on columns */
export type Project_Editors_Avg_Fields = {
  __typename?: 'project_editors_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "project_editors" */
export type Project_Editors_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "project_editors". All fields are combined with a logical 'AND'. */
export type Project_Editors_Bool_Exp = {
  _and?: InputMaybe<Array<Project_Editors_Bool_Exp>>;
  _not?: InputMaybe<Project_Editors_Bool_Exp>;
  _or?: InputMaybe<Array<Project_Editors_Bool_Exp>>;
  account?: InputMaybe<Accounts_Bool_Exp>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  project?: InputMaybe<Projects_Bool_Exp>;
  project_id?: InputMaybe<Int_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "project_editors" */
export enum Project_Editors_Constraint {
  /** unique or primary key constraint on columns "project_id", "account_id", "user_id", "id" */
  IndexUniqueProjectEditorsAccountIdProjectIdUserId = 'index_unique_project_editors_account_id_project_id_user_id',
  /** unique or primary key constraint on columns "id" */
  ProjectEditorsPkey = 'project_editors_pkey'
}

/** input type for incrementing numeric columns in table "project_editors" */
export type Project_Editors_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "project_editors" */
export type Project_Editors_Insert_Input = {
  account?: InputMaybe<Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  project?: InputMaybe<Projects_Obj_Rel_Insert_Input>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Project_Editors_Max_Fields = {
  __typename?: 'project_editors_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "project_editors" */
export type Project_Editors_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Project_Editors_Min_Fields = {
  __typename?: 'project_editors_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "project_editors" */
export type Project_Editors_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "project_editors" */
export type Project_Editors_Mutation_Response = {
  __typename?: 'project_editors_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Project_Editors>;
};

/** on_conflict condition type for table "project_editors" */
export type Project_Editors_On_Conflict = {
  constraint: Project_Editors_Constraint;
  update_columns?: Array<Project_Editors_Update_Column>;
  where?: InputMaybe<Project_Editors_Bool_Exp>;
};

/** Ordering options when selecting data from "project_editors". */
export type Project_Editors_Order_By = {
  account?: InputMaybe<Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project?: InputMaybe<Projects_Order_By>;
  project_id?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: project_editors */
export type Project_Editors_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "project_editors" */
export enum Project_Editors_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Id = 'id',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "project_editors" */
export type Project_Editors_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Project_Editors_Stddev_Fields = {
  __typename?: 'project_editors_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "project_editors" */
export type Project_Editors_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Project_Editors_Stddev_Pop_Fields = {
  __typename?: 'project_editors_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "project_editors" */
export type Project_Editors_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Project_Editors_Stddev_Samp_Fields = {
  __typename?: 'project_editors_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "project_editors" */
export type Project_Editors_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "project_editors" */
export type Project_Editors_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Project_Editors_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Project_Editors_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Project_Editors_Sum_Fields = {
  __typename?: 'project_editors_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "project_editors" */
export type Project_Editors_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** update columns of table "project_editors" */
export enum Project_Editors_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Id = 'id',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  UserId = 'user_id'
}

export type Project_Editors_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Project_Editors_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Project_Editors_Set_Input>;
  /** filter the rows which have to be updated */
  where: Project_Editors_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Project_Editors_Var_Pop_Fields = {
  __typename?: 'project_editors_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "project_editors" */
export type Project_Editors_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Project_Editors_Var_Samp_Fields = {
  __typename?: 'project_editors_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "project_editors" */
export type Project_Editors_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Project_Editors_Variance_Fields = {
  __typename?: 'project_editors_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "project_editors" */
export type Project_Editors_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "project_members" */
export type Project_Members = {
  __typename?: 'project_members';
  /** An object relationship */
  account: Accounts;
  account_id: Scalars['Int']['output'];
  /** A computed field, executes function "project_member_actuals_count" */
  actuals_count?: Maybe<Scalars['Int']['output']>;
  /** A computed field, executes function "project_member_assignments_count" */
  assignments_count?: Maybe<Scalars['Int']['output']>;
  created_at: Scalars['timestamp']['output'];
  id: Scalars['Int']['output'];
  is_placeholder: Scalars['Boolean']['output'];
  /** An object relationship */
  person: People;
  person_id: Scalars['Int']['output'];
  /** An object relationship */
  project: Projects;
  project_id: Scalars['Int']['output'];
  /** An object relationship */
  role: Roles;
  role_id: Scalars['Int']['output'];
  updated_at: Scalars['timestamp']['output'];
};

/** aggregated selection of "project_members" */
export type Project_Members_Aggregate = {
  __typename?: 'project_members_aggregate';
  aggregate?: Maybe<Project_Members_Aggregate_Fields>;
  nodes: Array<Project_Members>;
};

export type Project_Members_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Project_Members_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Project_Members_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Project_Members_Aggregate_Bool_Exp_Count>;
};

export type Project_Members_Aggregate_Bool_Exp_Bool_And = {
  arguments: Project_Members_Select_Column_Project_Members_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Project_Members_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Project_Members_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Project_Members_Select_Column_Project_Members_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Project_Members_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Project_Members_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Project_Members_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Project_Members_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "project_members" */
export type Project_Members_Aggregate_Fields = {
  __typename?: 'project_members_aggregate_fields';
  avg?: Maybe<Project_Members_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Project_Members_Max_Fields>;
  min?: Maybe<Project_Members_Min_Fields>;
  stddev?: Maybe<Project_Members_Stddev_Fields>;
  stddev_pop?: Maybe<Project_Members_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Project_Members_Stddev_Samp_Fields>;
  sum?: Maybe<Project_Members_Sum_Fields>;
  var_pop?: Maybe<Project_Members_Var_Pop_Fields>;
  var_samp?: Maybe<Project_Members_Var_Samp_Fields>;
  variance?: Maybe<Project_Members_Variance_Fields>;
};


/** aggregate fields of "project_members" */
export type Project_Members_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Project_Members_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "project_members" */
export type Project_Members_Aggregate_Order_By = {
  avg?: InputMaybe<Project_Members_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Project_Members_Max_Order_By>;
  min?: InputMaybe<Project_Members_Min_Order_By>;
  stddev?: InputMaybe<Project_Members_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Project_Members_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Project_Members_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Project_Members_Sum_Order_By>;
  var_pop?: InputMaybe<Project_Members_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Project_Members_Var_Samp_Order_By>;
  variance?: InputMaybe<Project_Members_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "project_members" */
export type Project_Members_Arr_Rel_Insert_Input = {
  data: Array<Project_Members_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Project_Members_On_Conflict>;
};

/** aggregate avg on columns */
export type Project_Members_Avg_Fields = {
  __typename?: 'project_members_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  /** A computed field, executes function "project_member_actuals_count" */
  actuals_count?: Maybe<Scalars['Int']['output']>;
  /** A computed field, executes function "project_member_assignments_count" */
  assignments_count?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "project_members" */
export type Project_Members_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "project_members". All fields are combined with a logical 'AND'. */
export type Project_Members_Bool_Exp = {
  _and?: InputMaybe<Array<Project_Members_Bool_Exp>>;
  _not?: InputMaybe<Project_Members_Bool_Exp>;
  _or?: InputMaybe<Array<Project_Members_Bool_Exp>>;
  account?: InputMaybe<Accounts_Bool_Exp>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  actuals_count?: InputMaybe<Int_Comparison_Exp>;
  assignments_count?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  is_placeholder?: InputMaybe<Boolean_Comparison_Exp>;
  person?: InputMaybe<People_Bool_Exp>;
  person_id?: InputMaybe<Int_Comparison_Exp>;
  project?: InputMaybe<Projects_Bool_Exp>;
  project_id?: InputMaybe<Int_Comparison_Exp>;
  role?: InputMaybe<Roles_Bool_Exp>;
  role_id?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "project_members" */
export enum Project_Members_Constraint {
  /** unique or primary key constraint on columns "role_id", "project_id", "account_id", "person_id" */
  IndexUniqueProjectMemberAccountProjectPersonRole = 'index_unique_project_member_account_project_person_role',
  /** unique or primary key constraint on columns "id" */
  ProjectMembersPkey = 'project_members_pkey'
}

/** input type for incrementing numeric columns in table "project_members" */
export type Project_Members_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "project_members" */
export type Project_Members_Insert_Input = {
  account?: InputMaybe<Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_placeholder?: InputMaybe<Scalars['Boolean']['input']>;
  person?: InputMaybe<People_Obj_Rel_Insert_Input>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  project?: InputMaybe<Projects_Obj_Rel_Insert_Input>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  role?: InputMaybe<Roles_Obj_Rel_Insert_Input>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Project_Members_Max_Fields = {
  __typename?: 'project_members_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  /** A computed field, executes function "project_member_actuals_count" */
  actuals_count?: Maybe<Scalars['Int']['output']>;
  /** A computed field, executes function "project_member_assignments_count" */
  assignments_count?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  role_id?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "project_members" */
export type Project_Members_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Project_Members_Min_Fields = {
  __typename?: 'project_members_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  /** A computed field, executes function "project_member_actuals_count" */
  actuals_count?: Maybe<Scalars['Int']['output']>;
  /** A computed field, executes function "project_member_assignments_count" */
  assignments_count?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  role_id?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "project_members" */
export type Project_Members_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "project_members" */
export type Project_Members_Mutation_Response = {
  __typename?: 'project_members_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Project_Members>;
};

/** on_conflict condition type for table "project_members" */
export type Project_Members_On_Conflict = {
  constraint: Project_Members_Constraint;
  update_columns?: Array<Project_Members_Update_Column>;
  where?: InputMaybe<Project_Members_Bool_Exp>;
};

/** Ordering options when selecting data from "project_members". */
export type Project_Members_Order_By = {
  account?: InputMaybe<Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  actuals_count?: InputMaybe<Order_By>;
  assignments_count?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  is_placeholder?: InputMaybe<Order_By>;
  person?: InputMaybe<People_Order_By>;
  person_id?: InputMaybe<Order_By>;
  project?: InputMaybe<Projects_Order_By>;
  project_id?: InputMaybe<Order_By>;
  role?: InputMaybe<Roles_Order_By>;
  role_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: project_members */
export type Project_Members_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "project_members" */
export enum Project_Members_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IsPlaceholder = 'is_placeholder',
  /** column name */
  PersonId = 'person_id',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  RoleId = 'role_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** select "project_members_aggregate_bool_exp_bool_and_arguments_columns" columns of table "project_members" */
export enum Project_Members_Select_Column_Project_Members_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  IsPlaceholder = 'is_placeholder'
}

/** select "project_members_aggregate_bool_exp_bool_or_arguments_columns" columns of table "project_members" */
export enum Project_Members_Select_Column_Project_Members_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  IsPlaceholder = 'is_placeholder'
}

/** input type for updating data in table "project_members" */
export type Project_Members_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_placeholder?: InputMaybe<Scalars['Boolean']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Project_Members_Stddev_Fields = {
  __typename?: 'project_members_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  /** A computed field, executes function "project_member_actuals_count" */
  actuals_count?: Maybe<Scalars['Int']['output']>;
  /** A computed field, executes function "project_member_assignments_count" */
  assignments_count?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "project_members" */
export type Project_Members_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Project_Members_Stddev_Pop_Fields = {
  __typename?: 'project_members_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  /** A computed field, executes function "project_member_actuals_count" */
  actuals_count?: Maybe<Scalars['Int']['output']>;
  /** A computed field, executes function "project_member_assignments_count" */
  assignments_count?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "project_members" */
export type Project_Members_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Project_Members_Stddev_Samp_Fields = {
  __typename?: 'project_members_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  /** A computed field, executes function "project_member_actuals_count" */
  actuals_count?: Maybe<Scalars['Int']['output']>;
  /** A computed field, executes function "project_member_assignments_count" */
  assignments_count?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "project_members" */
export type Project_Members_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "project_members" */
export type Project_Members_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Project_Members_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Project_Members_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_placeholder?: InputMaybe<Scalars['Boolean']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Project_Members_Sum_Fields = {
  __typename?: 'project_members_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  /** A computed field, executes function "project_member_actuals_count" */
  actuals_count?: Maybe<Scalars['Int']['output']>;
  /** A computed field, executes function "project_member_assignments_count" */
  assignments_count?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  role_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "project_members" */
export type Project_Members_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** update columns of table "project_members" */
export enum Project_Members_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IsPlaceholder = 'is_placeholder',
  /** column name */
  PersonId = 'person_id',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  RoleId = 'role_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Project_Members_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Project_Members_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Project_Members_Set_Input>;
  /** filter the rows which have to be updated */
  where: Project_Members_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Project_Members_Var_Pop_Fields = {
  __typename?: 'project_members_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  /** A computed field, executes function "project_member_actuals_count" */
  actuals_count?: Maybe<Scalars['Int']['output']>;
  /** A computed field, executes function "project_member_assignments_count" */
  assignments_count?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "project_members" */
export type Project_Members_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Project_Members_Var_Samp_Fields = {
  __typename?: 'project_members_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  /** A computed field, executes function "project_member_actuals_count" */
  actuals_count?: Maybe<Scalars['Int']['output']>;
  /** A computed field, executes function "project_member_assignments_count" */
  assignments_count?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "project_members" */
export type Project_Members_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Project_Members_Variance_Fields = {
  __typename?: 'project_members_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  /** A computed field, executes function "project_member_actuals_count" */
  actuals_count?: Maybe<Scalars['Int']['output']>;
  /** A computed field, executes function "project_member_assignments_count" */
  assignments_count?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "project_members" */
export type Project_Members_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "project_rates" */
export type Project_Rates = {
  __typename?: 'project_rates';
  account_id: Scalars['Int']['output'];
  created_at: Scalars['timestamp']['output'];
  id: Scalars['Int']['output'];
  /** An object relationship */
  project: Projects;
  project_id: Scalars['Int']['output'];
  rate: Scalars['numeric']['output'];
  rate_private?: Maybe<Scalars['numeric']['output']>;
  /** An object relationship */
  role: Roles;
  role_id: Scalars['Int']['output'];
  updated_at: Scalars['timestamp']['output'];
};

/** aggregated selection of "project_rates" */
export type Project_Rates_Aggregate = {
  __typename?: 'project_rates_aggregate';
  aggregate?: Maybe<Project_Rates_Aggregate_Fields>;
  nodes: Array<Project_Rates>;
};

export type Project_Rates_Aggregate_Bool_Exp = {
  count?: InputMaybe<Project_Rates_Aggregate_Bool_Exp_Count>;
};

export type Project_Rates_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Project_Rates_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Project_Rates_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "project_rates" */
export type Project_Rates_Aggregate_Fields = {
  __typename?: 'project_rates_aggregate_fields';
  avg?: Maybe<Project_Rates_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Project_Rates_Max_Fields>;
  min?: Maybe<Project_Rates_Min_Fields>;
  stddev?: Maybe<Project_Rates_Stddev_Fields>;
  stddev_pop?: Maybe<Project_Rates_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Project_Rates_Stddev_Samp_Fields>;
  sum?: Maybe<Project_Rates_Sum_Fields>;
  var_pop?: Maybe<Project_Rates_Var_Pop_Fields>;
  var_samp?: Maybe<Project_Rates_Var_Samp_Fields>;
  variance?: Maybe<Project_Rates_Variance_Fields>;
};


/** aggregate fields of "project_rates" */
export type Project_Rates_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Project_Rates_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "project_rates" */
export type Project_Rates_Aggregate_Order_By = {
  avg?: InputMaybe<Project_Rates_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Project_Rates_Max_Order_By>;
  min?: InputMaybe<Project_Rates_Min_Order_By>;
  stddev?: InputMaybe<Project_Rates_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Project_Rates_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Project_Rates_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Project_Rates_Sum_Order_By>;
  var_pop?: InputMaybe<Project_Rates_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Project_Rates_Var_Samp_Order_By>;
  variance?: InputMaybe<Project_Rates_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "project_rates" */
export type Project_Rates_Arr_Rel_Insert_Input = {
  data: Array<Project_Rates_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Project_Rates_On_Conflict>;
};

/** aggregate avg on columns */
export type Project_Rates_Avg_Fields = {
  __typename?: 'project_rates_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
  rate_private?: Maybe<Scalars['numeric']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "project_rates" */
export type Project_Rates_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "project_rates". All fields are combined with a logical 'AND'. */
export type Project_Rates_Bool_Exp = {
  _and?: InputMaybe<Array<Project_Rates_Bool_Exp>>;
  _not?: InputMaybe<Project_Rates_Bool_Exp>;
  _or?: InputMaybe<Array<Project_Rates_Bool_Exp>>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  project?: InputMaybe<Projects_Bool_Exp>;
  project_id?: InputMaybe<Int_Comparison_Exp>;
  rate?: InputMaybe<Numeric_Comparison_Exp>;
  rate_private?: InputMaybe<Numeric_Comparison_Exp>;
  role?: InputMaybe<Roles_Bool_Exp>;
  role_id?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "project_rates" */
export enum Project_Rates_Constraint {
  /** unique or primary key constraint on columns "account_id", "id" */
  IndexUniqueProjectRatesIdAccountId = 'index_unique_project_rates_id_account_id',
  /** unique or primary key constraint on columns "role_id", "project_id" */
  IndexUniqueProjectRatesProjectRole = 'index_unique_project_rates_project_role',
  /** unique or primary key constraint on columns "id" */
  ProjectRatesPkey = 'project_rates_pkey'
}

/** input type for incrementing numeric columns in table "project_rates" */
export type Project_Rates_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  rate?: InputMaybe<Scalars['numeric']['input']>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "project_rates" */
export type Project_Rates_Insert_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  project?: InputMaybe<Projects_Obj_Rel_Insert_Input>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  rate?: InputMaybe<Scalars['numeric']['input']>;
  role?: InputMaybe<Roles_Obj_Rel_Insert_Input>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Project_Rates_Max_Fields = {
  __typename?: 'project_rates_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  rate?: Maybe<Scalars['numeric']['output']>;
  rate_private?: Maybe<Scalars['numeric']['output']>;
  role_id?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "project_rates" */
export type Project_Rates_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Project_Rates_Min_Fields = {
  __typename?: 'project_rates_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  rate?: Maybe<Scalars['numeric']['output']>;
  rate_private?: Maybe<Scalars['numeric']['output']>;
  role_id?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "project_rates" */
export type Project_Rates_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "project_rates" */
export type Project_Rates_Mutation_Response = {
  __typename?: 'project_rates_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Project_Rates>;
};

/** on_conflict condition type for table "project_rates" */
export type Project_Rates_On_Conflict = {
  constraint: Project_Rates_Constraint;
  update_columns?: Array<Project_Rates_Update_Column>;
  where?: InputMaybe<Project_Rates_Bool_Exp>;
};

/** Ordering options when selecting data from "project_rates". */
export type Project_Rates_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project?: InputMaybe<Projects_Order_By>;
  project_id?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
  rate_private?: InputMaybe<Order_By>;
  role?: InputMaybe<Roles_Order_By>;
  role_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: project_rates */
export type Project_Rates_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "project_rates" */
export enum Project_Rates_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  Rate = 'rate',
  /** column name */
  RoleId = 'role_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "project_rates" */
export type Project_Rates_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  rate?: InputMaybe<Scalars['numeric']['input']>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Project_Rates_Stddev_Fields = {
  __typename?: 'project_rates_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
  rate_private?: Maybe<Scalars['numeric']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "project_rates" */
export type Project_Rates_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Project_Rates_Stddev_Pop_Fields = {
  __typename?: 'project_rates_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
  rate_private?: Maybe<Scalars['numeric']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "project_rates" */
export type Project_Rates_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Project_Rates_Stddev_Samp_Fields = {
  __typename?: 'project_rates_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
  rate_private?: Maybe<Scalars['numeric']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "project_rates" */
export type Project_Rates_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "project_rates" */
export type Project_Rates_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Project_Rates_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Project_Rates_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  rate?: InputMaybe<Scalars['numeric']['input']>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Project_Rates_Sum_Fields = {
  __typename?: 'project_rates_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  rate?: Maybe<Scalars['numeric']['output']>;
  rate_private?: Maybe<Scalars['numeric']['output']>;
  role_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "project_rates" */
export type Project_Rates_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** update columns of table "project_rates" */
export enum Project_Rates_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  Rate = 'rate',
  /** column name */
  RoleId = 'role_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Project_Rates_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Project_Rates_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Project_Rates_Set_Input>;
  /** filter the rows which have to be updated */
  where: Project_Rates_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Project_Rates_Var_Pop_Fields = {
  __typename?: 'project_rates_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
  rate_private?: Maybe<Scalars['numeric']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "project_rates" */
export type Project_Rates_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Project_Rates_Var_Samp_Fields = {
  __typename?: 'project_rates_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
  rate_private?: Maybe<Scalars['numeric']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "project_rates" */
export type Project_Rates_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Project_Rates_Variance_Fields = {
  __typename?: 'project_rates_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  rate?: Maybe<Scalars['Float']['output']>;
  rate_private?: Maybe<Scalars['numeric']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "project_rates" */
export type Project_Rates_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  rate?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "project_roles" */
export type Project_Roles = {
  __typename?: 'project_roles';
  account_id: Scalars['Int']['output'];
  created_at: Scalars['timestamp']['output'];
  estimate_id?: Maybe<Scalars['Int']['output']>;
  estimated_minutes?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  /** An object relationship */
  project?: Maybe<Projects>;
  project_id?: Maybe<Scalars['Int']['output']>;
  role_id?: Maybe<Scalars['Int']['output']>;
  updated_at: Scalars['timestamp']['output'];
};

/** aggregated selection of "project_roles" */
export type Project_Roles_Aggregate = {
  __typename?: 'project_roles_aggregate';
  aggregate?: Maybe<Project_Roles_Aggregate_Fields>;
  nodes: Array<Project_Roles>;
};

export type Project_Roles_Aggregate_Bool_Exp = {
  count?: InputMaybe<Project_Roles_Aggregate_Bool_Exp_Count>;
};

export type Project_Roles_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Project_Roles_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Project_Roles_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "project_roles" */
export type Project_Roles_Aggregate_Fields = {
  __typename?: 'project_roles_aggregate_fields';
  avg?: Maybe<Project_Roles_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Project_Roles_Max_Fields>;
  min?: Maybe<Project_Roles_Min_Fields>;
  stddev?: Maybe<Project_Roles_Stddev_Fields>;
  stddev_pop?: Maybe<Project_Roles_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Project_Roles_Stddev_Samp_Fields>;
  sum?: Maybe<Project_Roles_Sum_Fields>;
  var_pop?: Maybe<Project_Roles_Var_Pop_Fields>;
  var_samp?: Maybe<Project_Roles_Var_Samp_Fields>;
  variance?: Maybe<Project_Roles_Variance_Fields>;
};


/** aggregate fields of "project_roles" */
export type Project_Roles_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Project_Roles_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "project_roles" */
export type Project_Roles_Aggregate_Order_By = {
  avg?: InputMaybe<Project_Roles_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Project_Roles_Max_Order_By>;
  min?: InputMaybe<Project_Roles_Min_Order_By>;
  stddev?: InputMaybe<Project_Roles_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Project_Roles_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Project_Roles_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Project_Roles_Sum_Order_By>;
  var_pop?: InputMaybe<Project_Roles_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Project_Roles_Var_Samp_Order_By>;
  variance?: InputMaybe<Project_Roles_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "project_roles" */
export type Project_Roles_Arr_Rel_Insert_Input = {
  data: Array<Project_Roles_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Project_Roles_On_Conflict>;
};

/** aggregate avg on columns */
export type Project_Roles_Avg_Fields = {
  __typename?: 'project_roles_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  estimate_id?: Maybe<Scalars['Float']['output']>;
  estimated_minutes?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "project_roles" */
export type Project_Roles_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  estimate_id?: InputMaybe<Order_By>;
  estimated_minutes?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "project_roles". All fields are combined with a logical 'AND'. */
export type Project_Roles_Bool_Exp = {
  _and?: InputMaybe<Array<Project_Roles_Bool_Exp>>;
  _not?: InputMaybe<Project_Roles_Bool_Exp>;
  _or?: InputMaybe<Array<Project_Roles_Bool_Exp>>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  estimate_id?: InputMaybe<Int_Comparison_Exp>;
  estimated_minutes?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  project?: InputMaybe<Projects_Bool_Exp>;
  project_id?: InputMaybe<Int_Comparison_Exp>;
  role_id?: InputMaybe<Int_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "project_roles" */
export enum Project_Roles_Constraint {
  /** unique or primary key constraint on columns "account_id", "id" */
  IndexUniqueProjectRolesIdAccountId = 'index_unique_project_roles_id_account_id',
  /** unique or primary key constraint on columns "id" */
  ProjectRolesPkey = 'project_roles_pkey'
}

/** input type for incrementing numeric columns in table "project_roles" */
export type Project_Roles_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  estimate_id?: InputMaybe<Scalars['Int']['input']>;
  estimated_minutes?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "project_roles" */
export type Project_Roles_Insert_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  estimate_id?: InputMaybe<Scalars['Int']['input']>;
  estimated_minutes?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  project?: InputMaybe<Projects_Obj_Rel_Insert_Input>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Project_Roles_Max_Fields = {
  __typename?: 'project_roles_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  estimate_id?: Maybe<Scalars['Int']['output']>;
  estimated_minutes?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  role_id?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "project_roles" */
export type Project_Roles_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  estimate_id?: InputMaybe<Order_By>;
  estimated_minutes?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Project_Roles_Min_Fields = {
  __typename?: 'project_roles_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  estimate_id?: Maybe<Scalars['Int']['output']>;
  estimated_minutes?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  role_id?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "project_roles" */
export type Project_Roles_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  estimate_id?: InputMaybe<Order_By>;
  estimated_minutes?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "project_roles" */
export type Project_Roles_Mutation_Response = {
  __typename?: 'project_roles_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Project_Roles>;
};

/** on_conflict condition type for table "project_roles" */
export type Project_Roles_On_Conflict = {
  constraint: Project_Roles_Constraint;
  update_columns?: Array<Project_Roles_Update_Column>;
  where?: InputMaybe<Project_Roles_Bool_Exp>;
};

/** Ordering options when selecting data from "project_roles". */
export type Project_Roles_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  estimate_id?: InputMaybe<Order_By>;
  estimated_minutes?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project?: InputMaybe<Projects_Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: project_roles */
export type Project_Roles_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "project_roles" */
export enum Project_Roles_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  EstimateId = 'estimate_id',
  /** column name */
  EstimatedMinutes = 'estimated_minutes',
  /** column name */
  Id = 'id',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  RoleId = 'role_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "project_roles" */
export type Project_Roles_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  estimate_id?: InputMaybe<Scalars['Int']['input']>;
  estimated_minutes?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Project_Roles_Stddev_Fields = {
  __typename?: 'project_roles_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  estimate_id?: Maybe<Scalars['Float']['output']>;
  estimated_minutes?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "project_roles" */
export type Project_Roles_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  estimate_id?: InputMaybe<Order_By>;
  estimated_minutes?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Project_Roles_Stddev_Pop_Fields = {
  __typename?: 'project_roles_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  estimate_id?: Maybe<Scalars['Float']['output']>;
  estimated_minutes?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "project_roles" */
export type Project_Roles_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  estimate_id?: InputMaybe<Order_By>;
  estimated_minutes?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Project_Roles_Stddev_Samp_Fields = {
  __typename?: 'project_roles_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  estimate_id?: Maybe<Scalars['Float']['output']>;
  estimated_minutes?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "project_roles" */
export type Project_Roles_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  estimate_id?: InputMaybe<Order_By>;
  estimated_minutes?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "project_roles" */
export type Project_Roles_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Project_Roles_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Project_Roles_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  estimate_id?: InputMaybe<Scalars['Int']['input']>;
  estimated_minutes?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Project_Roles_Sum_Fields = {
  __typename?: 'project_roles_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  estimate_id?: Maybe<Scalars['Int']['output']>;
  estimated_minutes?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  role_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "project_roles" */
export type Project_Roles_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  estimate_id?: InputMaybe<Order_By>;
  estimated_minutes?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** update columns of table "project_roles" */
export enum Project_Roles_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  EstimateId = 'estimate_id',
  /** column name */
  EstimatedMinutes = 'estimated_minutes',
  /** column name */
  Id = 'id',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  RoleId = 'role_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Project_Roles_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Project_Roles_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Project_Roles_Set_Input>;
  /** filter the rows which have to be updated */
  where: Project_Roles_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Project_Roles_Var_Pop_Fields = {
  __typename?: 'project_roles_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  estimate_id?: Maybe<Scalars['Float']['output']>;
  estimated_minutes?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "project_roles" */
export type Project_Roles_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  estimate_id?: InputMaybe<Order_By>;
  estimated_minutes?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Project_Roles_Var_Samp_Fields = {
  __typename?: 'project_roles_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  estimate_id?: Maybe<Scalars['Float']['output']>;
  estimated_minutes?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "project_roles" */
export type Project_Roles_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  estimate_id?: InputMaybe<Order_By>;
  estimated_minutes?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Project_Roles_Variance_Fields = {
  __typename?: 'project_roles_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  estimate_id?: Maybe<Scalars['Float']['output']>;
  estimated_minutes?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "project_roles" */
export type Project_Roles_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  estimate_id?: InputMaybe<Order_By>;
  estimated_minutes?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "project_tags" */
export type Project_Tags = {
  __typename?: 'project_tags';
  account_id: Scalars['Int']['output'];
  id: Scalars['bigint']['output'];
  project_id: Scalars['Int']['output'];
  /** An object relationship */
  tag: Tags;
  tag_id: Scalars['Int']['output'];
};

/** aggregated selection of "project_tags" */
export type Project_Tags_Aggregate = {
  __typename?: 'project_tags_aggregate';
  aggregate?: Maybe<Project_Tags_Aggregate_Fields>;
  nodes: Array<Project_Tags>;
};

export type Project_Tags_Aggregate_Bool_Exp = {
  count?: InputMaybe<Project_Tags_Aggregate_Bool_Exp_Count>;
};

export type Project_Tags_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Project_Tags_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Project_Tags_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "project_tags" */
export type Project_Tags_Aggregate_Fields = {
  __typename?: 'project_tags_aggregate_fields';
  avg?: Maybe<Project_Tags_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Project_Tags_Max_Fields>;
  min?: Maybe<Project_Tags_Min_Fields>;
  stddev?: Maybe<Project_Tags_Stddev_Fields>;
  stddev_pop?: Maybe<Project_Tags_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Project_Tags_Stddev_Samp_Fields>;
  sum?: Maybe<Project_Tags_Sum_Fields>;
  var_pop?: Maybe<Project_Tags_Var_Pop_Fields>;
  var_samp?: Maybe<Project_Tags_Var_Samp_Fields>;
  variance?: Maybe<Project_Tags_Variance_Fields>;
};


/** aggregate fields of "project_tags" */
export type Project_Tags_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Project_Tags_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "project_tags" */
export type Project_Tags_Aggregate_Order_By = {
  avg?: InputMaybe<Project_Tags_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Project_Tags_Max_Order_By>;
  min?: InputMaybe<Project_Tags_Min_Order_By>;
  stddev?: InputMaybe<Project_Tags_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Project_Tags_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Project_Tags_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Project_Tags_Sum_Order_By>;
  var_pop?: InputMaybe<Project_Tags_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Project_Tags_Var_Samp_Order_By>;
  variance?: InputMaybe<Project_Tags_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "project_tags" */
export type Project_Tags_Arr_Rel_Insert_Input = {
  data: Array<Project_Tags_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Project_Tags_On_Conflict>;
};

/** aggregate avg on columns */
export type Project_Tags_Avg_Fields = {
  __typename?: 'project_tags_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  tag_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "project_tags" */
export type Project_Tags_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "project_tags". All fields are combined with a logical 'AND'. */
export type Project_Tags_Bool_Exp = {
  _and?: InputMaybe<Array<Project_Tags_Bool_Exp>>;
  _not?: InputMaybe<Project_Tags_Bool_Exp>;
  _or?: InputMaybe<Array<Project_Tags_Bool_Exp>>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  project_id?: InputMaybe<Int_Comparison_Exp>;
  tag?: InputMaybe<Tags_Bool_Exp>;
  tag_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "project_tags" */
export enum Project_Tags_Constraint {
  /** unique or primary key constraint on columns "project_id", "tag_id" */
  IndexUniqueProjectTagsProjectIdTagId = 'index_unique_project_tags_project_id_tag_id',
  /** unique or primary key constraint on columns "id" */
  ProjectTagsPkey = 'project_tags_pkey'
}

/** input type for incrementing numeric columns in table "project_tags" */
export type Project_Tags_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  tag_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "project_tags" */
export type Project_Tags_Insert_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  tag?: InputMaybe<Tags_Obj_Rel_Insert_Input>;
  tag_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Project_Tags_Max_Fields = {
  __typename?: 'project_tags_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  tag_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "project_tags" */
export type Project_Tags_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Project_Tags_Min_Fields = {
  __typename?: 'project_tags_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  tag_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "project_tags" */
export type Project_Tags_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "project_tags" */
export type Project_Tags_Mutation_Response = {
  __typename?: 'project_tags_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Project_Tags>;
};

/** on_conflict condition type for table "project_tags" */
export type Project_Tags_On_Conflict = {
  constraint: Project_Tags_Constraint;
  update_columns?: Array<Project_Tags_Update_Column>;
  where?: InputMaybe<Project_Tags_Bool_Exp>;
};

/** Ordering options when selecting data from "project_tags". */
export type Project_Tags_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  tag?: InputMaybe<Tags_Order_By>;
  tag_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: project_tags */
export type Project_Tags_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "project_tags" */
export enum Project_Tags_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Id = 'id',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  TagId = 'tag_id'
}

/** input type for updating data in table "project_tags" */
export type Project_Tags_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  tag_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Project_Tags_Stddev_Fields = {
  __typename?: 'project_tags_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  tag_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "project_tags" */
export type Project_Tags_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Project_Tags_Stddev_Pop_Fields = {
  __typename?: 'project_tags_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  tag_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "project_tags" */
export type Project_Tags_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Project_Tags_Stddev_Samp_Fields = {
  __typename?: 'project_tags_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  tag_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "project_tags" */
export type Project_Tags_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "project_tags" */
export type Project_Tags_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Project_Tags_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Project_Tags_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  tag_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Project_Tags_Sum_Fields = {
  __typename?: 'project_tags_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  tag_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "project_tags" */
export type Project_Tags_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
};

/** update columns of table "project_tags" */
export enum Project_Tags_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Id = 'id',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  TagId = 'tag_id'
}

export type Project_Tags_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Project_Tags_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Project_Tags_Set_Input>;
  /** filter the rows which have to be updated */
  where: Project_Tags_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Project_Tags_Var_Pop_Fields = {
  __typename?: 'project_tags_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  tag_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "project_tags" */
export type Project_Tags_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Project_Tags_Var_Samp_Fields = {
  __typename?: 'project_tags_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  tag_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "project_tags" */
export type Project_Tags_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Project_Tags_Variance_Fields = {
  __typename?: 'project_tags_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  tag_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "project_tags" */
export type Project_Tags_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "projects" */
export type Projects = {
  __typename?: 'projects';
  /** An object relationship */
  account: Accounts;
  account_id: Scalars['Int']['output'];
  active: Scalars['Boolean']['output'];
  /** An array relationship */
  actuals: Array<Actuals>;
  /** An aggregate relationship */
  actuals_aggregate: Actuals_Aggregate;
  archivable?: Maybe<Scalars['Boolean']['output']>;
  /** An array relationship */
  assignments: Array<Assignments>;
  /** An aggregate relationship */
  assignments_aggregate: Assignments_Aggregate;
  calc_end_date?: Maybe<Scalars['String']['output']>;
  calc_start_date?: Maybe<Scalars['String']['output']>;
  calculated: ProjectCalculation;
  /** An object relationship */
  client: Clients;
  client_id: Scalars['Int']['output'];
  confirmed: Scalars['Boolean']['output'];
  created_at: Scalars['timestamp']['output'];
  /** An array relationship */
  custom_select_values: Array<Custom_Select_Values>;
  /** An aggregate relationship */
  custom_select_values_aggregate: Custom_Select_Values_Aggregate;
  /** An array relationship */
  custom_text_values: Array<Custom_Text_Values>;
  /** An aggregate relationship */
  custom_text_values_aggregate: Custom_Text_Values_Aggregate;
  /** An array relationship */
  editors: Array<Project_Editors>;
  /** An aggregate relationship */
  editors_aggregate: Project_Editors_Aggregate;
  emoji?: Maybe<Scalars['String']['output']>;
  expenses_budget?: Maybe<Scalars['Int']['output']>;
  has_actuals?: Maybe<Scalars['Boolean']['output']>;
  id: Scalars['Int']['output'];
  is_template: Scalars['Boolean']['output'];
  /** An array relationship */
  members: Array<Project_Members>;
  /** An aggregate relationship */
  members_aggregate: Project_Members_Aggregate;
  /** An array relationship */
  milestones: Array<Milestones>;
  /** An aggregate relationship */
  milestones_aggregate: Milestones_Aggregate;
  name: Scalars['String']['output'];
  /** An array relationship */
  notes: Array<Notes>;
  /** An aggregate relationship */
  notes_aggregate: Notes_Aggregate;
  /** An array relationship */
  other_costs: Array<Other_Costs>;
  /** An aggregate relationship */
  other_costs_aggregate: Other_Costs_Aggregate;
  /** An array relationship */
  person_requests: Array<Person_Requests>;
  /** An aggregate relationship */
  person_requests_aggregate: Person_Requests_Aggregate;
  /** An array relationship */
  phases: Array<Phases>;
  /** An aggregate relationship */
  phases_aggregate: Phases_Aggregate;
  pricing_model: Scalars['String']['output'];
  pricing_model_readable?: Maybe<Scalars['String']['output']>;
  priority?: Maybe<Scalars['String']['output']>;
  /** An array relationship */
  project_rates: Array<Project_Rates>;
  /** An aggregate relationship */
  project_rates_aggregate: Project_Rates_Aggregate;
  /** An array relationship */
  project_roles: Array<Project_Roles>;
  /** An aggregate relationship */
  project_roles_aggregate: Project_Roles_Aggregate;
  /** An array relationship */
  project_tags: Array<Project_Tags>;
  /** An aggregate relationship */
  project_tags_aggregate: Project_Tags_Aggregate;
  /** An object relationship */
  rate_card: Rate_Cards;
  rate_card_id: Scalars['Int']['output'];
  rate_type: Scalars['String']['output'];
  references: Scalars['jsonb']['output'];
  schedule_totals?: Maybe<Array<Type_Schedule_Totals>>;
  schedule_totals_roles?: Maybe<Array<Type_Schedule_Totals_Roles>>;
  /** An array relationship */
  summary: Array<V_Summary_Total>;
  /** An aggregate relationship */
  summary_aggregate: V_Summary_Total_Aggregate;
  /** A computed field, executes function "projects_tags" */
  tags_computed?: Maybe<Scalars['jsonb']['output']>;
  /** An object relationship */
  team?: Maybe<Teams>;
  team_id?: Maybe<Scalars['Int']['output']>;
  timesheet_lock_last_updated_by?: Maybe<Scalars['String']['output']>;
  timesheet_lock_status?: Maybe<Scalars['timesheet_lock_status']['output']>;
  timesheet_lock_status_updated_at?: Maybe<Scalars['timestamp']['output']>;
  timesheet_locked_to?: Maybe<Scalars['date']['output']>;
  total_budget?: Maybe<Scalars['numeric']['output']>;
  total_budget_private?: Maybe<Scalars['numeric']['output']>;
  /** An array relationship */
  type_schedule_totals: Array<Type_Schedule_Totals>;
  /** An aggregate relationship */
  type_schedule_totals_aggregate: Type_Schedule_Totals_Aggregate;
  /** An array relationship */
  type_schedule_totals_roles: Array<Type_Schedule_Totals_Roles>;
  /** An aggregate relationship */
  type_schedule_totals_roles_aggregate: Type_Schedule_Totals_Roles_Aggregate;
  updated_at: Scalars['timestamp']['output'];
};


/** columns and relationships of "projects" */
export type ProjectsActualsArgs = {
  distinct_on?: InputMaybe<Array<Actuals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Actuals_Order_By>>;
  where?: InputMaybe<Actuals_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsActuals_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Actuals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Actuals_Order_By>>;
  where?: InputMaybe<Actuals_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsAssignmentsArgs = {
  distinct_on?: InputMaybe<Array<Assignments_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Assignments_Order_By>>;
  where?: InputMaybe<Assignments_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsAssignments_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Assignments_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Assignments_Order_By>>;
  where?: InputMaybe<Assignments_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsCalculatedArgs = {
  account_id: Scalars['Int']['input'];
};


/** columns and relationships of "projects" */
export type ProjectsCustom_Select_ValuesArgs = {
  distinct_on?: InputMaybe<Array<Custom_Select_Values_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Custom_Select_Values_Order_By>>;
  where?: InputMaybe<Custom_Select_Values_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsCustom_Select_Values_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Custom_Select_Values_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Custom_Select_Values_Order_By>>;
  where?: InputMaybe<Custom_Select_Values_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsCustom_Text_ValuesArgs = {
  distinct_on?: InputMaybe<Array<Custom_Text_Values_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Custom_Text_Values_Order_By>>;
  where?: InputMaybe<Custom_Text_Values_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsCustom_Text_Values_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Custom_Text_Values_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Custom_Text_Values_Order_By>>;
  where?: InputMaybe<Custom_Text_Values_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsEditorsArgs = {
  distinct_on?: InputMaybe<Array<Project_Editors_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Editors_Order_By>>;
  where?: InputMaybe<Project_Editors_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsEditors_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Project_Editors_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Editors_Order_By>>;
  where?: InputMaybe<Project_Editors_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsMembersArgs = {
  distinct_on?: InputMaybe<Array<Project_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Members_Order_By>>;
  where?: InputMaybe<Project_Members_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsMembers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Project_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Members_Order_By>>;
  where?: InputMaybe<Project_Members_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsMilestonesArgs = {
  distinct_on?: InputMaybe<Array<Milestones_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Milestones_Order_By>>;
  where?: InputMaybe<Milestones_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsMilestones_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Milestones_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Milestones_Order_By>>;
  where?: InputMaybe<Milestones_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsNotesArgs = {
  distinct_on?: InputMaybe<Array<Notes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Notes_Order_By>>;
  where?: InputMaybe<Notes_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsNotes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Notes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Notes_Order_By>>;
  where?: InputMaybe<Notes_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsOther_CostsArgs = {
  distinct_on?: InputMaybe<Array<Other_Costs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Other_Costs_Order_By>>;
  where?: InputMaybe<Other_Costs_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsOther_Costs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Other_Costs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Other_Costs_Order_By>>;
  where?: InputMaybe<Other_Costs_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsPerson_RequestsArgs = {
  distinct_on?: InputMaybe<Array<Person_Requests_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Person_Requests_Order_By>>;
  where?: InputMaybe<Person_Requests_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsPerson_Requests_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Person_Requests_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Person_Requests_Order_By>>;
  where?: InputMaybe<Person_Requests_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsPhasesArgs = {
  distinct_on?: InputMaybe<Array<Phases_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Phases_Order_By>>;
  where?: InputMaybe<Phases_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsPhases_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Phases_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Phases_Order_By>>;
  where?: InputMaybe<Phases_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsProject_RatesArgs = {
  distinct_on?: InputMaybe<Array<Project_Rates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Rates_Order_By>>;
  where?: InputMaybe<Project_Rates_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsProject_Rates_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Project_Rates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Rates_Order_By>>;
  where?: InputMaybe<Project_Rates_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsProject_RolesArgs = {
  distinct_on?: InputMaybe<Array<Project_Roles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Roles_Order_By>>;
  where?: InputMaybe<Project_Roles_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsProject_Roles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Project_Roles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Roles_Order_By>>;
  where?: InputMaybe<Project_Roles_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsProject_TagsArgs = {
  distinct_on?: InputMaybe<Array<Project_Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Tags_Order_By>>;
  where?: InputMaybe<Project_Tags_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsProject_Tags_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Project_Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Tags_Order_By>>;
  where?: InputMaybe<Project_Tags_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsReferencesArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** columns and relationships of "projects" */
export type ProjectsSchedule_TotalsArgs = {
  distinct_on?: InputMaybe<Array<Type_Schedule_Totals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Type_Schedule_Totals_Order_By>>;
  where?: InputMaybe<Type_Schedule_Totals_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsSchedule_Totals_RolesArgs = {
  distinct_on?: InputMaybe<Array<Type_Schedule_Totals_Roles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Type_Schedule_Totals_Roles_Order_By>>;
  where?: InputMaybe<Type_Schedule_Totals_Roles_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsSummaryArgs = {
  distinct_on?: InputMaybe<Array<V_Summary_Total_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<V_Summary_Total_Order_By>>;
  where?: InputMaybe<V_Summary_Total_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsSummary_AggregateArgs = {
  distinct_on?: InputMaybe<Array<V_Summary_Total_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<V_Summary_Total_Order_By>>;
  where?: InputMaybe<V_Summary_Total_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsTags_ComputedArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** columns and relationships of "projects" */
export type ProjectsType_Schedule_TotalsArgs = {
  distinct_on?: InputMaybe<Array<Type_Schedule_Totals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Type_Schedule_Totals_Order_By>>;
  where?: InputMaybe<Type_Schedule_Totals_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsType_Schedule_Totals_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Type_Schedule_Totals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Type_Schedule_Totals_Order_By>>;
  where?: InputMaybe<Type_Schedule_Totals_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsType_Schedule_Totals_RolesArgs = {
  distinct_on?: InputMaybe<Array<Type_Schedule_Totals_Roles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Type_Schedule_Totals_Roles_Order_By>>;
  where?: InputMaybe<Type_Schedule_Totals_Roles_Bool_Exp>;
};


/** columns and relationships of "projects" */
export type ProjectsType_Schedule_Totals_Roles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Type_Schedule_Totals_Roles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Type_Schedule_Totals_Roles_Order_By>>;
  where?: InputMaybe<Type_Schedule_Totals_Roles_Bool_Exp>;
};

/** aggregated selection of "projects" */
export type Projects_Aggregate = {
  __typename?: 'projects_aggregate';
  aggregate?: Maybe<Projects_Aggregate_Fields>;
  nodes: Array<Projects>;
};

export type Projects_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Projects_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Projects_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Projects_Aggregate_Bool_Exp_Count>;
};

export type Projects_Aggregate_Bool_Exp_Bool_And = {
  arguments: Projects_Select_Column_Projects_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Projects_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Projects_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Projects_Select_Column_Projects_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Projects_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Projects_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Projects_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Projects_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "projects" */
export type Projects_Aggregate_Fields = {
  __typename?: 'projects_aggregate_fields';
  avg?: Maybe<Projects_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Projects_Max_Fields>;
  min?: Maybe<Projects_Min_Fields>;
  stddev?: Maybe<Projects_Stddev_Fields>;
  stddev_pop?: Maybe<Projects_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Projects_Stddev_Samp_Fields>;
  sum?: Maybe<Projects_Sum_Fields>;
  var_pop?: Maybe<Projects_Var_Pop_Fields>;
  var_samp?: Maybe<Projects_Var_Samp_Fields>;
  variance?: Maybe<Projects_Variance_Fields>;
};


/** aggregate fields of "projects" */
export type Projects_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Projects_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "projects" */
export type Projects_Aggregate_Order_By = {
  avg?: InputMaybe<Projects_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Projects_Max_Order_By>;
  min?: InputMaybe<Projects_Min_Order_By>;
  stddev?: InputMaybe<Projects_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Projects_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Projects_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Projects_Sum_Order_By>;
  var_pop?: InputMaybe<Projects_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Projects_Var_Samp_Order_By>;
  variance?: InputMaybe<Projects_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Projects_Append_Input = {
  references?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "projects" */
export type Projects_Arr_Rel_Insert_Input = {
  data: Array<Projects_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Projects_On_Conflict>;
};

/** aggregate avg on columns */
export type Projects_Avg_Fields = {
  __typename?: 'projects_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  client_id?: Maybe<Scalars['Float']['output']>;
  expenses_budget?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  rate_card_id?: Maybe<Scalars['Float']['output']>;
  team_id?: Maybe<Scalars['Float']['output']>;
  total_budget?: Maybe<Scalars['Float']['output']>;
  total_budget_private?: Maybe<Scalars['numeric']['output']>;
};

/** order by avg() on columns of table "projects" */
export type Projects_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  client_id?: InputMaybe<Order_By>;
  expenses_budget?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  rate_card_id?: InputMaybe<Order_By>;
  team_id?: InputMaybe<Order_By>;
  total_budget?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "projects". All fields are combined with a logical 'AND'. */
export type Projects_Bool_Exp = {
  _and?: InputMaybe<Array<Projects_Bool_Exp>>;
  _not?: InputMaybe<Projects_Bool_Exp>;
  _or?: InputMaybe<Array<Projects_Bool_Exp>>;
  account?: InputMaybe<Accounts_Bool_Exp>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  active?: InputMaybe<Boolean_Comparison_Exp>;
  actuals?: InputMaybe<Actuals_Bool_Exp>;
  actuals_aggregate?: InputMaybe<Actuals_Aggregate_Bool_Exp>;
  archivable?: InputMaybe<Boolean_Comparison_Exp>;
  assignments?: InputMaybe<Assignments_Bool_Exp>;
  assignments_aggregate?: InputMaybe<Assignments_Aggregate_Bool_Exp>;
  calc_end_date?: InputMaybe<String_Comparison_Exp>;
  calc_start_date?: InputMaybe<String_Comparison_Exp>;
  client?: InputMaybe<Clients_Bool_Exp>;
  client_id?: InputMaybe<Int_Comparison_Exp>;
  confirmed?: InputMaybe<Boolean_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  custom_select_values?: InputMaybe<Custom_Select_Values_Bool_Exp>;
  custom_select_values_aggregate?: InputMaybe<Custom_Select_Values_Aggregate_Bool_Exp>;
  custom_text_values?: InputMaybe<Custom_Text_Values_Bool_Exp>;
  custom_text_values_aggregate?: InputMaybe<Custom_Text_Values_Aggregate_Bool_Exp>;
  editors?: InputMaybe<Project_Editors_Bool_Exp>;
  editors_aggregate?: InputMaybe<Project_Editors_Aggregate_Bool_Exp>;
  emoji?: InputMaybe<String_Comparison_Exp>;
  expenses_budget?: InputMaybe<Int_Comparison_Exp>;
  has_actuals?: InputMaybe<Boolean_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  is_template?: InputMaybe<Boolean_Comparison_Exp>;
  members?: InputMaybe<Project_Members_Bool_Exp>;
  members_aggregate?: InputMaybe<Project_Members_Aggregate_Bool_Exp>;
  milestones?: InputMaybe<Milestones_Bool_Exp>;
  milestones_aggregate?: InputMaybe<Milestones_Aggregate_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  notes?: InputMaybe<Notes_Bool_Exp>;
  notes_aggregate?: InputMaybe<Notes_Aggregate_Bool_Exp>;
  other_costs?: InputMaybe<Other_Costs_Bool_Exp>;
  other_costs_aggregate?: InputMaybe<Other_Costs_Aggregate_Bool_Exp>;
  person_requests?: InputMaybe<Person_Requests_Bool_Exp>;
  person_requests_aggregate?: InputMaybe<Person_Requests_Aggregate_Bool_Exp>;
  phases?: InputMaybe<Phases_Bool_Exp>;
  phases_aggregate?: InputMaybe<Phases_Aggregate_Bool_Exp>;
  pricing_model?: InputMaybe<String_Comparison_Exp>;
  pricing_model_readable?: InputMaybe<String_Comparison_Exp>;
  priority?: InputMaybe<String_Comparison_Exp>;
  project_rates?: InputMaybe<Project_Rates_Bool_Exp>;
  project_rates_aggregate?: InputMaybe<Project_Rates_Aggregate_Bool_Exp>;
  project_roles?: InputMaybe<Project_Roles_Bool_Exp>;
  project_roles_aggregate?: InputMaybe<Project_Roles_Aggregate_Bool_Exp>;
  project_tags?: InputMaybe<Project_Tags_Bool_Exp>;
  project_tags_aggregate?: InputMaybe<Project_Tags_Aggregate_Bool_Exp>;
  rate_card?: InputMaybe<Rate_Cards_Bool_Exp>;
  rate_card_id?: InputMaybe<Int_Comparison_Exp>;
  rate_type?: InputMaybe<String_Comparison_Exp>;
  references?: InputMaybe<Jsonb_Comparison_Exp>;
  schedule_totals?: InputMaybe<Type_Schedule_Totals_Bool_Exp>;
  schedule_totals_roles?: InputMaybe<Type_Schedule_Totals_Roles_Bool_Exp>;
  summary?: InputMaybe<V_Summary_Total_Bool_Exp>;
  summary_aggregate?: InputMaybe<V_Summary_Total_Aggregate_Bool_Exp>;
  tags_computed?: InputMaybe<Jsonb_Comparison_Exp>;
  team?: InputMaybe<Teams_Bool_Exp>;
  team_id?: InputMaybe<Int_Comparison_Exp>;
  timesheet_lock_last_updated_by?: InputMaybe<String_Comparison_Exp>;
  timesheet_lock_status?: InputMaybe<Timesheet_Lock_Status_Comparison_Exp>;
  timesheet_lock_status_updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
  timesheet_locked_to?: InputMaybe<Date_Comparison_Exp>;
  total_budget?: InputMaybe<Numeric_Comparison_Exp>;
  total_budget_private?: InputMaybe<Numeric_Comparison_Exp>;
  type_schedule_totals?: InputMaybe<Type_Schedule_Totals_Bool_Exp>;
  type_schedule_totals_aggregate?: InputMaybe<Type_Schedule_Totals_Aggregate_Bool_Exp>;
  type_schedule_totals_roles?: InputMaybe<Type_Schedule_Totals_Roles_Bool_Exp>;
  type_schedule_totals_roles_aggregate?: InputMaybe<Type_Schedule_Totals_Roles_Aggregate_Bool_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "projects" */
export enum Projects_Constraint {
  /** unique or primary key constraint on columns "account_id", "id" */
  IndexUniqueProjectsIdAccountId = 'index_unique_projects_id_account_id',
  /** unique or primary key constraint on columns "id" */
  ProjectsPkey = 'projects_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Projects_Delete_At_Path_Input = {
  references?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Projects_Delete_Elem_Input = {
  references?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Projects_Delete_Key_Input = {
  references?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "projects" */
export type Projects_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  client_id?: InputMaybe<Scalars['Int']['input']>;
  expenses_budget?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  rate_card_id?: InputMaybe<Scalars['Int']['input']>;
  team_id?: InputMaybe<Scalars['Int']['input']>;
  total_budget?: InputMaybe<Scalars['numeric']['input']>;
};

/** input type for inserting data into table "projects" */
export type Projects_Insert_Input = {
  account?: InputMaybe<Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['Int']['input']>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  actuals?: InputMaybe<Actuals_Arr_Rel_Insert_Input>;
  assignments?: InputMaybe<Assignments_Arr_Rel_Insert_Input>;
  client?: InputMaybe<Clients_Obj_Rel_Insert_Input>;
  client_id?: InputMaybe<Scalars['Int']['input']>;
  confirmed?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  custom_select_values?: InputMaybe<Custom_Select_Values_Arr_Rel_Insert_Input>;
  custom_text_values?: InputMaybe<Custom_Text_Values_Arr_Rel_Insert_Input>;
  editors?: InputMaybe<Project_Editors_Arr_Rel_Insert_Input>;
  emoji?: InputMaybe<Scalars['String']['input']>;
  expenses_budget?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_template?: InputMaybe<Scalars['Boolean']['input']>;
  members?: InputMaybe<Project_Members_Arr_Rel_Insert_Input>;
  milestones?: InputMaybe<Milestones_Arr_Rel_Insert_Input>;
  name?: InputMaybe<Scalars['String']['input']>;
  notes?: InputMaybe<Notes_Arr_Rel_Insert_Input>;
  other_costs?: InputMaybe<Other_Costs_Arr_Rel_Insert_Input>;
  person_requests?: InputMaybe<Person_Requests_Arr_Rel_Insert_Input>;
  phases?: InputMaybe<Phases_Arr_Rel_Insert_Input>;
  pricing_model?: InputMaybe<Scalars['String']['input']>;
  priority?: InputMaybe<Scalars['String']['input']>;
  project_rates?: InputMaybe<Project_Rates_Arr_Rel_Insert_Input>;
  project_roles?: InputMaybe<Project_Roles_Arr_Rel_Insert_Input>;
  project_tags?: InputMaybe<Project_Tags_Arr_Rel_Insert_Input>;
  rate_card?: InputMaybe<Rate_Cards_Obj_Rel_Insert_Input>;
  rate_card_id?: InputMaybe<Scalars['Int']['input']>;
  rate_type?: InputMaybe<Scalars['String']['input']>;
  references?: InputMaybe<Scalars['jsonb']['input']>;
  summary?: InputMaybe<V_Summary_Total_Arr_Rel_Insert_Input>;
  team?: InputMaybe<Teams_Obj_Rel_Insert_Input>;
  team_id?: InputMaybe<Scalars['Int']['input']>;
  timesheet_lock_last_updated_by?: InputMaybe<Scalars['String']['input']>;
  timesheet_lock_status?: InputMaybe<Scalars['timesheet_lock_status']['input']>;
  timesheet_lock_status_updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  timesheet_locked_to?: InputMaybe<Scalars['date']['input']>;
  total_budget?: InputMaybe<Scalars['numeric']['input']>;
  type_schedule_totals?: InputMaybe<Type_Schedule_Totals_Arr_Rel_Insert_Input>;
  type_schedule_totals_roles?: InputMaybe<Type_Schedule_Totals_Roles_Arr_Rel_Insert_Input>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Projects_Max_Fields = {
  __typename?: 'projects_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  calc_end_date?: Maybe<Scalars['String']['output']>;
  calc_start_date?: Maybe<Scalars['String']['output']>;
  client_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  emoji?: Maybe<Scalars['String']['output']>;
  expenses_budget?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pricing_model?: Maybe<Scalars['String']['output']>;
  pricing_model_readable?: Maybe<Scalars['String']['output']>;
  priority?: Maybe<Scalars['String']['output']>;
  rate_card_id?: Maybe<Scalars['Int']['output']>;
  rate_type?: Maybe<Scalars['String']['output']>;
  team_id?: Maybe<Scalars['Int']['output']>;
  timesheet_lock_last_updated_by?: Maybe<Scalars['String']['output']>;
  timesheet_lock_status?: Maybe<Scalars['timesheet_lock_status']['output']>;
  timesheet_lock_status_updated_at?: Maybe<Scalars['timestamp']['output']>;
  timesheet_locked_to?: Maybe<Scalars['date']['output']>;
  total_budget?: Maybe<Scalars['numeric']['output']>;
  total_budget_private?: Maybe<Scalars['numeric']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "projects" */
export type Projects_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  client_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  emoji?: InputMaybe<Order_By>;
  expenses_budget?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pricing_model?: InputMaybe<Order_By>;
  priority?: InputMaybe<Order_By>;
  rate_card_id?: InputMaybe<Order_By>;
  rate_type?: InputMaybe<Order_By>;
  team_id?: InputMaybe<Order_By>;
  timesheet_lock_last_updated_by?: InputMaybe<Order_By>;
  timesheet_lock_status?: InputMaybe<Order_By>;
  timesheet_lock_status_updated_at?: InputMaybe<Order_By>;
  timesheet_locked_to?: InputMaybe<Order_By>;
  total_budget?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Projects_Min_Fields = {
  __typename?: 'projects_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  calc_end_date?: Maybe<Scalars['String']['output']>;
  calc_start_date?: Maybe<Scalars['String']['output']>;
  client_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  emoji?: Maybe<Scalars['String']['output']>;
  expenses_budget?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pricing_model?: Maybe<Scalars['String']['output']>;
  pricing_model_readable?: Maybe<Scalars['String']['output']>;
  priority?: Maybe<Scalars['String']['output']>;
  rate_card_id?: Maybe<Scalars['Int']['output']>;
  rate_type?: Maybe<Scalars['String']['output']>;
  team_id?: Maybe<Scalars['Int']['output']>;
  timesheet_lock_last_updated_by?: Maybe<Scalars['String']['output']>;
  timesheet_lock_status?: Maybe<Scalars['timesheet_lock_status']['output']>;
  timesheet_lock_status_updated_at?: Maybe<Scalars['timestamp']['output']>;
  timesheet_locked_to?: Maybe<Scalars['date']['output']>;
  total_budget?: Maybe<Scalars['numeric']['output']>;
  total_budget_private?: Maybe<Scalars['numeric']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "projects" */
export type Projects_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  client_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  emoji?: InputMaybe<Order_By>;
  expenses_budget?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  pricing_model?: InputMaybe<Order_By>;
  priority?: InputMaybe<Order_By>;
  rate_card_id?: InputMaybe<Order_By>;
  rate_type?: InputMaybe<Order_By>;
  team_id?: InputMaybe<Order_By>;
  timesheet_lock_last_updated_by?: InputMaybe<Order_By>;
  timesheet_lock_status?: InputMaybe<Order_By>;
  timesheet_lock_status_updated_at?: InputMaybe<Order_By>;
  timesheet_locked_to?: InputMaybe<Order_By>;
  total_budget?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "projects" */
export type Projects_Mutation_Response = {
  __typename?: 'projects_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Projects>;
};

/** input type for inserting object relation for remote table "projects" */
export type Projects_Obj_Rel_Insert_Input = {
  data: Projects_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Projects_On_Conflict>;
};

/** on_conflict condition type for table "projects" */
export type Projects_On_Conflict = {
  constraint: Projects_Constraint;
  update_columns?: Array<Projects_Update_Column>;
  where?: InputMaybe<Projects_Bool_Exp>;
};

/** Ordering options when selecting data from "projects". */
export type Projects_Order_By = {
  account?: InputMaybe<Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  active?: InputMaybe<Order_By>;
  actuals_aggregate?: InputMaybe<Actuals_Aggregate_Order_By>;
  archivable?: InputMaybe<Order_By>;
  assignments_aggregate?: InputMaybe<Assignments_Aggregate_Order_By>;
  calc_end_date?: InputMaybe<Order_By>;
  calc_start_date?: InputMaybe<Order_By>;
  client?: InputMaybe<Clients_Order_By>;
  client_id?: InputMaybe<Order_By>;
  confirmed?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  custom_select_values_aggregate?: InputMaybe<Custom_Select_Values_Aggregate_Order_By>;
  custom_text_values_aggregate?: InputMaybe<Custom_Text_Values_Aggregate_Order_By>;
  editors_aggregate?: InputMaybe<Project_Editors_Aggregate_Order_By>;
  emoji?: InputMaybe<Order_By>;
  expenses_budget?: InputMaybe<Order_By>;
  has_actuals?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  is_template?: InputMaybe<Order_By>;
  members_aggregate?: InputMaybe<Project_Members_Aggregate_Order_By>;
  milestones_aggregate?: InputMaybe<Milestones_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
  notes_aggregate?: InputMaybe<Notes_Aggregate_Order_By>;
  other_costs_aggregate?: InputMaybe<Other_Costs_Aggregate_Order_By>;
  person_requests_aggregate?: InputMaybe<Person_Requests_Aggregate_Order_By>;
  phases_aggregate?: InputMaybe<Phases_Aggregate_Order_By>;
  pricing_model?: InputMaybe<Order_By>;
  pricing_model_readable?: InputMaybe<Order_By>;
  priority?: InputMaybe<Order_By>;
  project_rates_aggregate?: InputMaybe<Project_Rates_Aggregate_Order_By>;
  project_roles_aggregate?: InputMaybe<Project_Roles_Aggregate_Order_By>;
  project_tags_aggregate?: InputMaybe<Project_Tags_Aggregate_Order_By>;
  rate_card?: InputMaybe<Rate_Cards_Order_By>;
  rate_card_id?: InputMaybe<Order_By>;
  rate_type?: InputMaybe<Order_By>;
  references?: InputMaybe<Order_By>;
  schedule_totals_aggregate?: InputMaybe<Type_Schedule_Totals_Aggregate_Order_By>;
  schedule_totals_roles_aggregate?: InputMaybe<Type_Schedule_Totals_Roles_Aggregate_Order_By>;
  summary_aggregate?: InputMaybe<V_Summary_Total_Aggregate_Order_By>;
  tags_computed?: InputMaybe<Order_By>;
  team?: InputMaybe<Teams_Order_By>;
  team_id?: InputMaybe<Order_By>;
  timesheet_lock_last_updated_by?: InputMaybe<Order_By>;
  timesheet_lock_status?: InputMaybe<Order_By>;
  timesheet_lock_status_updated_at?: InputMaybe<Order_By>;
  timesheet_locked_to?: InputMaybe<Order_By>;
  total_budget?: InputMaybe<Order_By>;
  total_budget_private?: InputMaybe<Order_By>;
  type_schedule_totals_aggregate?: InputMaybe<Type_Schedule_Totals_Aggregate_Order_By>;
  type_schedule_totals_roles_aggregate?: InputMaybe<Type_Schedule_Totals_Roles_Aggregate_Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: projects */
export type Projects_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Projects_Prepend_Input = {
  references?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "projects" */
export enum Projects_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Active = 'active',
  /** column name */
  ClientId = 'client_id',
  /** column name */
  Confirmed = 'confirmed',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Emoji = 'emoji',
  /** column name */
  ExpensesBudget = 'expenses_budget',
  /** column name */
  Id = 'id',
  /** column name */
  IsTemplate = 'is_template',
  /** column name */
  Name = 'name',
  /** column name */
  PricingModel = 'pricing_model',
  /** column name */
  Priority = 'priority',
  /** column name */
  RateCardId = 'rate_card_id',
  /** column name */
  RateType = 'rate_type',
  /** column name */
  References = 'references',
  /** column name */
  TeamId = 'team_id',
  /** column name */
  TimesheetLockLastUpdatedBy = 'timesheet_lock_last_updated_by',
  /** column name */
  TimesheetLockStatus = 'timesheet_lock_status',
  /** column name */
  TimesheetLockStatusUpdatedAt = 'timesheet_lock_status_updated_at',
  /** column name */
  TimesheetLockedTo = 'timesheet_locked_to',
  /** column name */
  TotalBudget = 'total_budget',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** select "projects_aggregate_bool_exp_bool_and_arguments_columns" columns of table "projects" */
export enum Projects_Select_Column_Projects_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  Active = 'active',
  /** column name */
  Confirmed = 'confirmed',
  /** column name */
  IsTemplate = 'is_template'
}

/** select "projects_aggregate_bool_exp_bool_or_arguments_columns" columns of table "projects" */
export enum Projects_Select_Column_Projects_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  Active = 'active',
  /** column name */
  Confirmed = 'confirmed',
  /** column name */
  IsTemplate = 'is_template'
}

/** input type for updating data in table "projects" */
export type Projects_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  client_id?: InputMaybe<Scalars['Int']['input']>;
  confirmed?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  emoji?: InputMaybe<Scalars['String']['input']>;
  expenses_budget?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_template?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  pricing_model?: InputMaybe<Scalars['String']['input']>;
  priority?: InputMaybe<Scalars['String']['input']>;
  rate_card_id?: InputMaybe<Scalars['Int']['input']>;
  rate_type?: InputMaybe<Scalars['String']['input']>;
  references?: InputMaybe<Scalars['jsonb']['input']>;
  team_id?: InputMaybe<Scalars['Int']['input']>;
  timesheet_lock_last_updated_by?: InputMaybe<Scalars['String']['input']>;
  timesheet_lock_status?: InputMaybe<Scalars['timesheet_lock_status']['input']>;
  timesheet_lock_status_updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  timesheet_locked_to?: InputMaybe<Scalars['date']['input']>;
  total_budget?: InputMaybe<Scalars['numeric']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Projects_Stddev_Fields = {
  __typename?: 'projects_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  client_id?: Maybe<Scalars['Float']['output']>;
  expenses_budget?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  rate_card_id?: Maybe<Scalars['Float']['output']>;
  team_id?: Maybe<Scalars['Float']['output']>;
  total_budget?: Maybe<Scalars['Float']['output']>;
  total_budget_private?: Maybe<Scalars['numeric']['output']>;
};

/** order by stddev() on columns of table "projects" */
export type Projects_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  client_id?: InputMaybe<Order_By>;
  expenses_budget?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  rate_card_id?: InputMaybe<Order_By>;
  team_id?: InputMaybe<Order_By>;
  total_budget?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Projects_Stddev_Pop_Fields = {
  __typename?: 'projects_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  client_id?: Maybe<Scalars['Float']['output']>;
  expenses_budget?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  rate_card_id?: Maybe<Scalars['Float']['output']>;
  team_id?: Maybe<Scalars['Float']['output']>;
  total_budget?: Maybe<Scalars['Float']['output']>;
  total_budget_private?: Maybe<Scalars['numeric']['output']>;
};

/** order by stddev_pop() on columns of table "projects" */
export type Projects_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  client_id?: InputMaybe<Order_By>;
  expenses_budget?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  rate_card_id?: InputMaybe<Order_By>;
  team_id?: InputMaybe<Order_By>;
  total_budget?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Projects_Stddev_Samp_Fields = {
  __typename?: 'projects_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  client_id?: Maybe<Scalars['Float']['output']>;
  expenses_budget?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  rate_card_id?: Maybe<Scalars['Float']['output']>;
  team_id?: Maybe<Scalars['Float']['output']>;
  total_budget?: Maybe<Scalars['Float']['output']>;
  total_budget_private?: Maybe<Scalars['numeric']['output']>;
};

/** order by stddev_samp() on columns of table "projects" */
export type Projects_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  client_id?: InputMaybe<Order_By>;
  expenses_budget?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  rate_card_id?: InputMaybe<Order_By>;
  team_id?: InputMaybe<Order_By>;
  total_budget?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "projects" */
export type Projects_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Projects_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Projects_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  client_id?: InputMaybe<Scalars['Int']['input']>;
  confirmed?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  emoji?: InputMaybe<Scalars['String']['input']>;
  expenses_budget?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  is_template?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  pricing_model?: InputMaybe<Scalars['String']['input']>;
  priority?: InputMaybe<Scalars['String']['input']>;
  rate_card_id?: InputMaybe<Scalars['Int']['input']>;
  rate_type?: InputMaybe<Scalars['String']['input']>;
  references?: InputMaybe<Scalars['jsonb']['input']>;
  team_id?: InputMaybe<Scalars['Int']['input']>;
  timesheet_lock_last_updated_by?: InputMaybe<Scalars['String']['input']>;
  timesheet_lock_status?: InputMaybe<Scalars['timesheet_lock_status']['input']>;
  timesheet_lock_status_updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  timesheet_locked_to?: InputMaybe<Scalars['date']['input']>;
  total_budget?: InputMaybe<Scalars['numeric']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Projects_Sum_Fields = {
  __typename?: 'projects_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  client_id?: Maybe<Scalars['Int']['output']>;
  expenses_budget?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  rate_card_id?: Maybe<Scalars['Int']['output']>;
  team_id?: Maybe<Scalars['Int']['output']>;
  total_budget?: Maybe<Scalars['numeric']['output']>;
  total_budget_private?: Maybe<Scalars['numeric']['output']>;
};

/** order by sum() on columns of table "projects" */
export type Projects_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  client_id?: InputMaybe<Order_By>;
  expenses_budget?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  rate_card_id?: InputMaybe<Order_By>;
  team_id?: InputMaybe<Order_By>;
  total_budget?: InputMaybe<Order_By>;
};

/** update columns of table "projects" */
export enum Projects_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Active = 'active',
  /** column name */
  ClientId = 'client_id',
  /** column name */
  Confirmed = 'confirmed',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Emoji = 'emoji',
  /** column name */
  ExpensesBudget = 'expenses_budget',
  /** column name */
  Id = 'id',
  /** column name */
  IsTemplate = 'is_template',
  /** column name */
  Name = 'name',
  /** column name */
  PricingModel = 'pricing_model',
  /** column name */
  Priority = 'priority',
  /** column name */
  RateCardId = 'rate_card_id',
  /** column name */
  RateType = 'rate_type',
  /** column name */
  References = 'references',
  /** column name */
  TeamId = 'team_id',
  /** column name */
  TimesheetLockLastUpdatedBy = 'timesheet_lock_last_updated_by',
  /** column name */
  TimesheetLockStatus = 'timesheet_lock_status',
  /** column name */
  TimesheetLockStatusUpdatedAt = 'timesheet_lock_status_updated_at',
  /** column name */
  TimesheetLockedTo = 'timesheet_locked_to',
  /** column name */
  TotalBudget = 'total_budget',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Projects_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Projects_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Projects_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Projects_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Projects_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Projects_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Projects_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Projects_Set_Input>;
  /** filter the rows which have to be updated */
  where: Projects_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Projects_Var_Pop_Fields = {
  __typename?: 'projects_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  client_id?: Maybe<Scalars['Float']['output']>;
  expenses_budget?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  rate_card_id?: Maybe<Scalars['Float']['output']>;
  team_id?: Maybe<Scalars['Float']['output']>;
  total_budget?: Maybe<Scalars['Float']['output']>;
  total_budget_private?: Maybe<Scalars['numeric']['output']>;
};

/** order by var_pop() on columns of table "projects" */
export type Projects_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  client_id?: InputMaybe<Order_By>;
  expenses_budget?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  rate_card_id?: InputMaybe<Order_By>;
  team_id?: InputMaybe<Order_By>;
  total_budget?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Projects_Var_Samp_Fields = {
  __typename?: 'projects_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  client_id?: Maybe<Scalars['Float']['output']>;
  expenses_budget?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  rate_card_id?: Maybe<Scalars['Float']['output']>;
  team_id?: Maybe<Scalars['Float']['output']>;
  total_budget?: Maybe<Scalars['Float']['output']>;
  total_budget_private?: Maybe<Scalars['numeric']['output']>;
};

/** order by var_samp() on columns of table "projects" */
export type Projects_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  client_id?: InputMaybe<Order_By>;
  expenses_budget?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  rate_card_id?: InputMaybe<Order_By>;
  team_id?: InputMaybe<Order_By>;
  total_budget?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Projects_Variance_Fields = {
  __typename?: 'projects_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  client_id?: Maybe<Scalars['Float']['output']>;
  expenses_budget?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  rate_card_id?: Maybe<Scalars['Float']['output']>;
  team_id?: Maybe<Scalars['Float']['output']>;
  total_budget?: Maybe<Scalars['Float']['output']>;
  total_budget_private?: Maybe<Scalars['numeric']['output']>;
};

/** order by variance() on columns of table "projects" */
export type Projects_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  client_id?: InputMaybe<Order_By>;
  expenses_budget?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  rate_card_id?: InputMaybe<Order_By>;
  team_id?: InputMaybe<Order_By>;
  total_budget?: InputMaybe<Order_By>;
};

export type Query_Root = {
  __typename?: 'query_root';
  /** An array relationship */
  accounts: Array<Accounts>;
  /** An aggregate relationship */
  accounts_aggregate: Accounts_Aggregate;
  /** fetch data from the table: "accounts" using primary key columns */
  accounts_by_pk?: Maybe<Accounts>;
  action_countries_get?: Maybe<CountriesGetOutput>;
  action_holidays_get?: Maybe<HolidaysGetOutput>;
  /** An array relationship */
  actuals: Array<Actuals>;
  /** An aggregate relationship */
  actuals_aggregate: Actuals_Aggregate;
  /** fetch data from the table: "actuals" using primary key columns */
  actuals_by_pk?: Maybe<Actuals>;
  /** fetch data from the table: "api_tokens" */
  api_tokens: Array<Api_Tokens>;
  /** fetch aggregated fields from the table: "api_tokens" */
  api_tokens_aggregate: Api_Tokens_Aggregate;
  /** fetch data from the table: "api_tokens" using primary key columns */
  api_tokens_by_pk?: Maybe<Api_Tokens>;
  /** An array relationship */
  assignments: Array<Assignments>;
  /** An aggregate relationship */
  assignments_aggregate: Assignments_Aggregate;
  /** fetch data from the table: "assignments" using primary key columns */
  assignments_by_pk?: Maybe<Assignments>;
  /** fetch data from the table: "audit.logged_actions" */
  audit_logged_actions: Array<Audit_Logged_Actions>;
  /** fetch aggregated fields from the table: "audit.logged_actions" */
  audit_logged_actions_aggregate: Audit_Logged_Actions_Aggregate;
  /** fetch data from the table: "audit.logged_actions" using primary key columns */
  audit_logged_actions_by_pk?: Maybe<Audit_Logged_Actions>;
  /** fetch data from the table: "audit.recently_logged_actions" */
  audit_recently_logged_actions: Array<Audit_Recently_Logged_Actions>;
  /** fetch aggregated fields from the table: "audit.recently_logged_actions" */
  audit_recently_logged_actions_aggregate: Audit_Recently_Logged_Actions_Aggregate;
  /** An array relationship */
  cancel_reasons: Array<Cancel_Reasons>;
  /** An aggregate relationship */
  cancel_reasons_aggregate: Cancel_Reasons_Aggregate;
  /** fetch data from the table: "cancel_reasons" using primary key columns */
  cancel_reasons_by_pk?: Maybe<Cancel_Reasons>;
  /** An array relationship */
  clients: Array<Clients>;
  /** An aggregate relationship */
  clients_aggregate: Clients_Aggregate;
  /** fetch data from the table: "clients" using primary key columns */
  clients_by_pk?: Maybe<Clients>;
  /** An array relationship */
  competencies: Array<Competencies>;
  /** An aggregate relationship */
  competencies_aggregate: Competencies_Aggregate;
  /** fetch data from the table: "competencies" using primary key columns */
  competencies_by_pk?: Maybe<Competencies>;
  /** An array relationship */
  contracts: Array<Contracts>;
  /** An aggregate relationship */
  contracts_aggregate: Contracts_Aggregate;
  /** fetch data from the table: "contracts" using primary key columns */
  contracts_by_pk?: Maybe<Contracts>;
  /** execute function "current_user" which returns "users" */
  current_user?: Maybe<Users>;
  /** execute function "current_user" and query aggregates on result of table type "users" */
  current_user_aggregate: Users_Aggregate;
  /** An array relationship */
  custom_select_options: Array<Custom_Select_Options>;
  /** An aggregate relationship */
  custom_select_options_aggregate: Custom_Select_Options_Aggregate;
  /** fetch data from the table: "custom_select_options" using primary key columns */
  custom_select_options_by_pk?: Maybe<Custom_Select_Options>;
  /** An array relationship */
  custom_select_types: Array<Custom_Select_Types>;
  /** An aggregate relationship */
  custom_select_types_aggregate: Custom_Select_Types_Aggregate;
  /** fetch data from the table: "custom_select_types" using primary key columns */
  custom_select_types_by_pk?: Maybe<Custom_Select_Types>;
  /** An array relationship */
  custom_select_values: Array<Custom_Select_Values>;
  /** An aggregate relationship */
  custom_select_values_aggregate: Custom_Select_Values_Aggregate;
  /** fetch data from the table: "custom_select_values" using primary key columns */
  custom_select_values_by_pk?: Maybe<Custom_Select_Values>;
  /** An array relationship */
  custom_text_types: Array<Custom_Text_Types>;
  /** An aggregate relationship */
  custom_text_types_aggregate: Custom_Text_Types_Aggregate;
  /** fetch data from the table: "custom_text_types" using primary key columns */
  custom_text_types_by_pk?: Maybe<Custom_Text_Types>;
  /** An array relationship */
  custom_text_values: Array<Custom_Text_Values>;
  /** An aggregate relationship */
  custom_text_values_aggregate: Custom_Text_Values_Aggregate;
  /** fetch data from the table: "custom_text_values" using primary key columns */
  custom_text_values_by_pk?: Maybe<Custom_Text_Values>;
  /** fetch data from the table: "ext_contract" */
  ext_contract: Array<Ext_Contract>;
  /** fetch aggregated fields from the table: "ext_contract" */
  ext_contract_aggregate: Ext_Contract_Aggregate;
  /** fetch data from the table: "ext_contract" using primary key columns */
  ext_contract_by_pk?: Maybe<Ext_Contract>;
  /** fetch data from the table: "ext_person" */
  ext_person: Array<Ext_Person>;
  /** fetch aggregated fields from the table: "ext_person" */
  ext_person_aggregate: Ext_Person_Aggregate;
  /** fetch data from the table: "ext_person" using primary key columns */
  ext_person_by_pk?: Maybe<Ext_Person>;
  /** fetch data from the table: "ext_person_link" */
  ext_person_link: Array<Ext_Person_Link>;
  /** fetch aggregated fields from the table: "ext_person_link" */
  ext_person_link_aggregate: Ext_Person_Link_Aggregate;
  /** fetch data from the table: "ext_person_link" using primary key columns */
  ext_person_link_by_pk?: Maybe<Ext_Person_Link>;
  /** fetch data from the table: "ext_role" */
  ext_role: Array<Ext_Role>;
  /** fetch aggregated fields from the table: "ext_role" */
  ext_role_aggregate: Ext_Role_Aggregate;
  /** fetch data from the table: "ext_role" using primary key columns */
  ext_role_by_pk?: Maybe<Ext_Role>;
  /** fetch data from the table: "ext_team" */
  ext_team: Array<Ext_Team>;
  /** fetch aggregated fields from the table: "ext_team" */
  ext_team_aggregate: Ext_Team_Aggregate;
  /** fetch data from the table: "ext_team" using primary key columns */
  ext_team_by_pk?: Maybe<Ext_Team>;
  /** fetch data from the table: "ext_time_off" */
  ext_time_off: Array<Ext_Time_Off>;
  /** fetch aggregated fields from the table: "ext_time_off" */
  ext_time_off_aggregate: Ext_Time_Off_Aggregate;
  /** fetch data from the table: "ext_time_off" using primary key columns */
  ext_time_off_by_pk?: Maybe<Ext_Time_Off>;
  /** fetch data from the table: "ext_time_off_link" */
  ext_time_off_link: Array<Ext_Time_Off_Link>;
  /** fetch aggregated fields from the table: "ext_time_off_link" */
  ext_time_off_link_aggregate: Ext_Time_Off_Link_Aggregate;
  /** fetch data from the table: "ext_time_off_link" using primary key columns */
  ext_time_off_link_by_pk?: Maybe<Ext_Time_Off_Link>;
  /** fetch data from the table: "features" */
  features: Array<Features>;
  /** An array relationship */
  features_accounts: Array<Features_Accounts>;
  /** An aggregate relationship */
  features_accounts_aggregate: Features_Accounts_Aggregate;
  /** fetch data from the table: "features_accounts" using primary key columns */
  features_accounts_by_pk?: Maybe<Features_Accounts>;
  /** fetch aggregated fields from the table: "features" */
  features_aggregate: Features_Aggregate;
  /** fetch data from the table: "features" using primary key columns */
  features_by_pk?: Maybe<Features>;
  /** An array relationship */
  holidays: Array<Holidays>;
  /** An aggregate relationship */
  holidays_aggregate: Holidays_Aggregate;
  /** fetch data from the table: "holidays" using primary key columns */
  holidays_by_pk?: Maybe<Holidays>;
  /** An array relationship */
  holidays_groups: Array<Holidays_Groups>;
  /** An aggregate relationship */
  holidays_groups_aggregate: Holidays_Groups_Aggregate;
  /** fetch data from the table: "holidays_groups" using primary key columns */
  holidays_groups_by_pk?: Maybe<Holidays_Groups>;
  /** fetch data from the table: "integration" */
  integration: Array<Integration>;
  /** fetch aggregated fields from the table: "integration" */
  integration_aggregate: Integration_Aggregate;
  /** fetch data from the table: "integration" using primary key columns */
  integration_by_pk?: Maybe<Integration>;
  integration_merge: MergeIntegration;
  /** fetch data from the table: "integration_service" */
  integration_service: Array<Integration_Service>;
  /** fetch aggregated fields from the table: "integration_service" */
  integration_service_aggregate: Integration_Service_Aggregate;
  /** fetch data from the table: "integration_service" using primary key columns */
  integration_service_by_pk?: Maybe<Integration_Service>;
  /** fetch data from the table: "integration_sync" */
  integration_sync: Array<Integration_Sync>;
  /** fetch data from the table: "integration_sync_action" */
  integration_sync_action: Array<Integration_Sync_Action>;
  /** fetch aggregated fields from the table: "integration_sync_action" */
  integration_sync_action_aggregate: Integration_Sync_Action_Aggregate;
  /** fetch data from the table: "integration_sync_action" using primary key columns */
  integration_sync_action_by_pk?: Maybe<Integration_Sync_Action>;
  /** fetch aggregated fields from the table: "integration_sync" */
  integration_sync_aggregate: Integration_Sync_Aggregate;
  /** fetch data from the table: "integration_sync" using primary key columns */
  integration_sync_by_pk?: Maybe<Integration_Sync>;
  /** An array relationship */
  invitations: Array<Invitations>;
  /** An aggregate relationship */
  invitations_aggregate: Invitations_Aggregate;
  /** fetch data from the table: "invitations" using primary key columns */
  invitations_by_pk?: Maybe<Invitations>;
  /** An array relationship */
  milestones: Array<Milestones>;
  /** An aggregate relationship */
  milestones_aggregate: Milestones_Aggregate;
  /** fetch data from the table: "milestones" using primary key columns */
  milestones_by_pk?: Maybe<Milestones>;
  /** An array relationship */
  notes: Array<Notes>;
  /** An aggregate relationship */
  notes_aggregate: Notes_Aggregate;
  /** fetch data from the table: "notes" using primary key columns */
  notes_by_pk?: Maybe<Notes>;
  /** An array relationship */
  other_costs: Array<Other_Costs>;
  /** An aggregate relationship */
  other_costs_aggregate: Other_Costs_Aggregate;
  /** fetch data from the table: "other_costs" using primary key columns */
  other_costs_by_pk?: Maybe<Other_Costs>;
  /** An array relationship */
  people: Array<People>;
  /** An aggregate relationship */
  people_aggregate: People_Aggregate;
  /** fetch data from the table: "people" using primary key columns */
  people_by_pk?: Maybe<People>;
  /** An array relationship */
  people_notes: Array<People_Notes>;
  /** An aggregate relationship */
  people_notes_aggregate: People_Notes_Aggregate;
  /** fetch data from the table: "people_notes" using primary key columns */
  people_notes_by_pk?: Maybe<People_Notes>;
  /** An array relationship */
  person_requests: Array<Person_Requests>;
  /** An aggregate relationship */
  person_requests_aggregate: Person_Requests_Aggregate;
  /** fetch data from the table: "person_requests" using primary key columns */
  person_requests_by_pk?: Maybe<Person_Requests>;
  /** An array relationship */
  phases: Array<Phases>;
  /** An aggregate relationship */
  phases_aggregate: Phases_Aggregate;
  /** fetch data from the table: "phases" using primary key columns */
  phases_by_pk?: Maybe<Phases>;
  project_calculations: ProjectCalculation;
  /** fetch data from the table: "project_editors" */
  project_editors: Array<Project_Editors>;
  /** fetch aggregated fields from the table: "project_editors" */
  project_editors_aggregate: Project_Editors_Aggregate;
  /** fetch data from the table: "project_editors" using primary key columns */
  project_editors_by_pk?: Maybe<Project_Editors>;
  /** An array relationship */
  project_members: Array<Project_Members>;
  /** An aggregate relationship */
  project_members_aggregate: Project_Members_Aggregate;
  /** fetch data from the table: "project_members" using primary key columns */
  project_members_by_pk?: Maybe<Project_Members>;
  /** An array relationship */
  project_rates: Array<Project_Rates>;
  /** An aggregate relationship */
  project_rates_aggregate: Project_Rates_Aggregate;
  /** fetch data from the table: "project_rates" using primary key columns */
  project_rates_by_pk?: Maybe<Project_Rates>;
  /** An array relationship */
  project_roles: Array<Project_Roles>;
  /** An aggregate relationship */
  project_roles_aggregate: Project_Roles_Aggregate;
  /** fetch data from the table: "project_roles" using primary key columns */
  project_roles_by_pk?: Maybe<Project_Roles>;
  /** An array relationship */
  project_tags: Array<Project_Tags>;
  /** An aggregate relationship */
  project_tags_aggregate: Project_Tags_Aggregate;
  /** fetch data from the table: "project_tags" using primary key columns */
  project_tags_by_pk?: Maybe<Project_Tags>;
  /** An array relationship */
  projects: Array<Projects>;
  /** An aggregate relationship */
  projects_aggregate: Projects_Aggregate;
  /** fetch data from the table: "projects" using primary key columns */
  projects_by_pk?: Maybe<Projects>;
  /** An array relationship */
  rate_cards: Array<Rate_Cards>;
  /** An aggregate relationship */
  rate_cards_aggregate: Rate_Cards_Aggregate;
  /** fetch data from the table: "rate_cards" using primary key columns */
  rate_cards_by_pk?: Maybe<Rate_Cards>;
  /** An array relationship */
  role_charge_out_rates: Array<Role_Charge_Out_Rates>;
  /** An aggregate relationship */
  role_charge_out_rates_aggregate: Role_Charge_Out_Rates_Aggregate;
  /** fetch data from the table: "role_charge_out_rates" using primary key columns */
  role_charge_out_rates_by_pk?: Maybe<Role_Charge_Out_Rates>;
  /** An array relationship */
  roles: Array<Roles>;
  /** An aggregate relationship */
  roles_aggregate: Roles_Aggregate;
  /** fetch data from the table: "roles" using primary key columns */
  roles_by_pk?: Maybe<Roles>;
  /** An array relationship */
  skills: Array<Skills>;
  /** An aggregate relationship */
  skills_aggregate: Skills_Aggregate;
  /** fetch data from the table: "skills" using primary key columns */
  skills_by_pk?: Maybe<Skills>;
  /** An array relationship */
  tags: Array<Tags>;
  /** An aggregate relationship */
  tags_aggregate: Tags_Aggregate;
  /** fetch data from the table: "tags" using primary key columns */
  tags_by_pk?: Maybe<Tags>;
  /** An array relationship */
  teams: Array<Teams>;
  /** An aggregate relationship */
  teams_aggregate: Teams_Aggregate;
  /** fetch data from the table: "teams" using primary key columns */
  teams_by_pk?: Maybe<Teams>;
  /** An array relationship */
  time_offs: Array<Time_Offs>;
  /** An aggregate relationship */
  time_offs_aggregate: Time_Offs_Aggregate;
  /** fetch data from the table: "time_offs" using primary key columns */
  time_offs_by_pk?: Maybe<Time_Offs>;
  /** An array relationship */
  type_schedule_totals: Array<Type_Schedule_Totals>;
  /** An aggregate relationship */
  type_schedule_totals_aggregate: Type_Schedule_Totals_Aggregate;
  /** fetch data from the table: "type_schedule_totals" using primary key columns */
  type_schedule_totals_by_pk?: Maybe<Type_Schedule_Totals>;
  /** An array relationship */
  type_schedule_totals_roles: Array<Type_Schedule_Totals_Roles>;
  /** An aggregate relationship */
  type_schedule_totals_roles_aggregate: Type_Schedule_Totals_Roles_Aggregate;
  /** fetch data from the table: "type_schedule_totals_roles" using primary key columns */
  type_schedule_totals_roles_by_pk?: Maybe<Type_Schedule_Totals_Roles>;
  /** fetch data from the table: "user_filter_sets" */
  user_filter_sets: Array<User_Filter_Sets>;
  /** fetch aggregated fields from the table: "user_filter_sets" */
  user_filter_sets_aggregate: User_Filter_Sets_Aggregate;
  /** fetch data from the table: "user_filter_sets" using primary key columns */
  user_filter_sets_by_pk?: Maybe<User_Filter_Sets>;
  /** An array relationship */
  users: Array<Users>;
  /** An aggregate relationship */
  users_aggregate: Users_Aggregate;
  /** fetch data from the table: "users" using primary key columns */
  users_by_pk?: Maybe<Users>;
  /** fetch data from the table: "v_summary_total" */
  v_summary_total: Array<V_Summary_Total>;
  /** fetch aggregated fields from the table: "v_summary_total" */
  v_summary_total_aggregate: V_Summary_Total_Aggregate;
  /** An array relationship */
  views: Array<Views>;
  /** An aggregate relationship */
  views_aggregate: Views_Aggregate;
  /** fetch data from the table: "views" using primary key columns */
  views_by_pk?: Maybe<Views>;
};


export type Query_RootAccountsArgs = {
  distinct_on?: InputMaybe<Array<Accounts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Accounts_Order_By>>;
  where?: InputMaybe<Accounts_Bool_Exp>;
};


export type Query_RootAccounts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Accounts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Accounts_Order_By>>;
  where?: InputMaybe<Accounts_Bool_Exp>;
};


export type Query_RootAccounts_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootAction_Holidays_GetArgs = {
  country_code: Scalars['String']['input'];
  year: Scalars['Int']['input'];
};


export type Query_RootActualsArgs = {
  distinct_on?: InputMaybe<Array<Actuals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Actuals_Order_By>>;
  where?: InputMaybe<Actuals_Bool_Exp>;
};


export type Query_RootActuals_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Actuals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Actuals_Order_By>>;
  where?: InputMaybe<Actuals_Bool_Exp>;
};


export type Query_RootActuals_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootApi_TokensArgs = {
  distinct_on?: InputMaybe<Array<Api_Tokens_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Api_Tokens_Order_By>>;
  where?: InputMaybe<Api_Tokens_Bool_Exp>;
};


export type Query_RootApi_Tokens_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Api_Tokens_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Api_Tokens_Order_By>>;
  where?: InputMaybe<Api_Tokens_Bool_Exp>;
};


export type Query_RootApi_Tokens_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootAssignmentsArgs = {
  distinct_on?: InputMaybe<Array<Assignments_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Assignments_Order_By>>;
  where?: InputMaybe<Assignments_Bool_Exp>;
};


export type Query_RootAssignments_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Assignments_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Assignments_Order_By>>;
  where?: InputMaybe<Assignments_Bool_Exp>;
};


export type Query_RootAssignments_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootAudit_Logged_ActionsArgs = {
  distinct_on?: InputMaybe<Array<Audit_Logged_Actions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Audit_Logged_Actions_Order_By>>;
  where?: InputMaybe<Audit_Logged_Actions_Bool_Exp>;
};


export type Query_RootAudit_Logged_Actions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Audit_Logged_Actions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Audit_Logged_Actions_Order_By>>;
  where?: InputMaybe<Audit_Logged_Actions_Bool_Exp>;
};


export type Query_RootAudit_Logged_Actions_By_PkArgs = {
  event_id: Scalars['bigint']['input'];
};


export type Query_RootAudit_Recently_Logged_ActionsArgs = {
  distinct_on?: InputMaybe<Array<Audit_Recently_Logged_Actions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Audit_Recently_Logged_Actions_Order_By>>;
  where?: InputMaybe<Audit_Recently_Logged_Actions_Bool_Exp>;
};


export type Query_RootAudit_Recently_Logged_Actions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Audit_Recently_Logged_Actions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Audit_Recently_Logged_Actions_Order_By>>;
  where?: InputMaybe<Audit_Recently_Logged_Actions_Bool_Exp>;
};


export type Query_RootCancel_ReasonsArgs = {
  distinct_on?: InputMaybe<Array<Cancel_Reasons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Cancel_Reasons_Order_By>>;
  where?: InputMaybe<Cancel_Reasons_Bool_Exp>;
};


export type Query_RootCancel_Reasons_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Cancel_Reasons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Cancel_Reasons_Order_By>>;
  where?: InputMaybe<Cancel_Reasons_Bool_Exp>;
};


export type Query_RootCancel_Reasons_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootClientsArgs = {
  distinct_on?: InputMaybe<Array<Clients_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Clients_Order_By>>;
  where?: InputMaybe<Clients_Bool_Exp>;
};


export type Query_RootClients_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Clients_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Clients_Order_By>>;
  where?: InputMaybe<Clients_Bool_Exp>;
};


export type Query_RootClients_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootCompetenciesArgs = {
  distinct_on?: InputMaybe<Array<Competencies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Competencies_Order_By>>;
  where?: InputMaybe<Competencies_Bool_Exp>;
};


export type Query_RootCompetencies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Competencies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Competencies_Order_By>>;
  where?: InputMaybe<Competencies_Bool_Exp>;
};


export type Query_RootCompetencies_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootContractsArgs = {
  distinct_on?: InputMaybe<Array<Contracts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contracts_Order_By>>;
  where?: InputMaybe<Contracts_Bool_Exp>;
};


export type Query_RootContracts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Contracts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contracts_Order_By>>;
  where?: InputMaybe<Contracts_Bool_Exp>;
};


export type Query_RootContracts_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootCurrent_UserArgs = {
  distinct_on?: InputMaybe<Array<Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Users_Order_By>>;
  where?: InputMaybe<Users_Bool_Exp>;
};


export type Query_RootCurrent_User_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Users_Order_By>>;
  where?: InputMaybe<Users_Bool_Exp>;
};


export type Query_RootCustom_Select_OptionsArgs = {
  distinct_on?: InputMaybe<Array<Custom_Select_Options_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Custom_Select_Options_Order_By>>;
  where?: InputMaybe<Custom_Select_Options_Bool_Exp>;
};


export type Query_RootCustom_Select_Options_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Custom_Select_Options_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Custom_Select_Options_Order_By>>;
  where?: InputMaybe<Custom_Select_Options_Bool_Exp>;
};


export type Query_RootCustom_Select_Options_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootCustom_Select_TypesArgs = {
  distinct_on?: InputMaybe<Array<Custom_Select_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Custom_Select_Types_Order_By>>;
  where?: InputMaybe<Custom_Select_Types_Bool_Exp>;
};


export type Query_RootCustom_Select_Types_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Custom_Select_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Custom_Select_Types_Order_By>>;
  where?: InputMaybe<Custom_Select_Types_Bool_Exp>;
};


export type Query_RootCustom_Select_Types_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootCustom_Select_ValuesArgs = {
  distinct_on?: InputMaybe<Array<Custom_Select_Values_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Custom_Select_Values_Order_By>>;
  where?: InputMaybe<Custom_Select_Values_Bool_Exp>;
};


export type Query_RootCustom_Select_Values_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Custom_Select_Values_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Custom_Select_Values_Order_By>>;
  where?: InputMaybe<Custom_Select_Values_Bool_Exp>;
};


export type Query_RootCustom_Select_Values_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootCustom_Text_TypesArgs = {
  distinct_on?: InputMaybe<Array<Custom_Text_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Custom_Text_Types_Order_By>>;
  where?: InputMaybe<Custom_Text_Types_Bool_Exp>;
};


export type Query_RootCustom_Text_Types_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Custom_Text_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Custom_Text_Types_Order_By>>;
  where?: InputMaybe<Custom_Text_Types_Bool_Exp>;
};


export type Query_RootCustom_Text_Types_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootCustom_Text_ValuesArgs = {
  distinct_on?: InputMaybe<Array<Custom_Text_Values_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Custom_Text_Values_Order_By>>;
  where?: InputMaybe<Custom_Text_Values_Bool_Exp>;
};


export type Query_RootCustom_Text_Values_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Custom_Text_Values_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Custom_Text_Values_Order_By>>;
  where?: InputMaybe<Custom_Text_Values_Bool_Exp>;
};


export type Query_RootCustom_Text_Values_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootExt_ContractArgs = {
  distinct_on?: InputMaybe<Array<Ext_Contract_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Contract_Order_By>>;
  where?: InputMaybe<Ext_Contract_Bool_Exp>;
};


export type Query_RootExt_Contract_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ext_Contract_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Contract_Order_By>>;
  where?: InputMaybe<Ext_Contract_Bool_Exp>;
};


export type Query_RootExt_Contract_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootExt_PersonArgs = {
  distinct_on?: InputMaybe<Array<Ext_Person_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Person_Order_By>>;
  where?: InputMaybe<Ext_Person_Bool_Exp>;
};


export type Query_RootExt_Person_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ext_Person_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Person_Order_By>>;
  where?: InputMaybe<Ext_Person_Bool_Exp>;
};


export type Query_RootExt_Person_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootExt_Person_LinkArgs = {
  distinct_on?: InputMaybe<Array<Ext_Person_Link_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Person_Link_Order_By>>;
  where?: InputMaybe<Ext_Person_Link_Bool_Exp>;
};


export type Query_RootExt_Person_Link_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ext_Person_Link_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Person_Link_Order_By>>;
  where?: InputMaybe<Ext_Person_Link_Bool_Exp>;
};


export type Query_RootExt_Person_Link_By_PkArgs = {
  ext_person_id: Scalars['Int']['input'];
  person_id: Scalars['Int']['input'];
};


export type Query_RootExt_RoleArgs = {
  distinct_on?: InputMaybe<Array<Ext_Role_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Role_Order_By>>;
  where?: InputMaybe<Ext_Role_Bool_Exp>;
};


export type Query_RootExt_Role_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ext_Role_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Role_Order_By>>;
  where?: InputMaybe<Ext_Role_Bool_Exp>;
};


export type Query_RootExt_Role_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootExt_TeamArgs = {
  distinct_on?: InputMaybe<Array<Ext_Team_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Team_Order_By>>;
  where?: InputMaybe<Ext_Team_Bool_Exp>;
};


export type Query_RootExt_Team_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ext_Team_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Team_Order_By>>;
  where?: InputMaybe<Ext_Team_Bool_Exp>;
};


export type Query_RootExt_Team_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootExt_Time_OffArgs = {
  distinct_on?: InputMaybe<Array<Ext_Time_Off_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Time_Off_Order_By>>;
  where?: InputMaybe<Ext_Time_Off_Bool_Exp>;
};


export type Query_RootExt_Time_Off_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ext_Time_Off_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Time_Off_Order_By>>;
  where?: InputMaybe<Ext_Time_Off_Bool_Exp>;
};


export type Query_RootExt_Time_Off_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootExt_Time_Off_LinkArgs = {
  distinct_on?: InputMaybe<Array<Ext_Time_Off_Link_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Time_Off_Link_Order_By>>;
  where?: InputMaybe<Ext_Time_Off_Link_Bool_Exp>;
};


export type Query_RootExt_Time_Off_Link_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ext_Time_Off_Link_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Time_Off_Link_Order_By>>;
  where?: InputMaybe<Ext_Time_Off_Link_Bool_Exp>;
};


export type Query_RootExt_Time_Off_Link_By_PkArgs = {
  ext_time_off_id: Scalars['Int']['input'];
  time_off_id: Scalars['Int']['input'];
};


export type Query_RootFeaturesArgs = {
  distinct_on?: InputMaybe<Array<Features_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Features_Order_By>>;
  where?: InputMaybe<Features_Bool_Exp>;
};


export type Query_RootFeatures_AccountsArgs = {
  distinct_on?: InputMaybe<Array<Features_Accounts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Features_Accounts_Order_By>>;
  where?: InputMaybe<Features_Accounts_Bool_Exp>;
};


export type Query_RootFeatures_Accounts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Features_Accounts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Features_Accounts_Order_By>>;
  where?: InputMaybe<Features_Accounts_Bool_Exp>;
};


export type Query_RootFeatures_Accounts_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootFeatures_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Features_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Features_Order_By>>;
  where?: InputMaybe<Features_Bool_Exp>;
};


export type Query_RootFeatures_By_PkArgs = {
  id: Scalars['String']['input'];
};


export type Query_RootHolidaysArgs = {
  distinct_on?: InputMaybe<Array<Holidays_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Holidays_Order_By>>;
  where?: InputMaybe<Holidays_Bool_Exp>;
};


export type Query_RootHolidays_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Holidays_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Holidays_Order_By>>;
  where?: InputMaybe<Holidays_Bool_Exp>;
};


export type Query_RootHolidays_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootHolidays_GroupsArgs = {
  distinct_on?: InputMaybe<Array<Holidays_Groups_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Holidays_Groups_Order_By>>;
  where?: InputMaybe<Holidays_Groups_Bool_Exp>;
};


export type Query_RootHolidays_Groups_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Holidays_Groups_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Holidays_Groups_Order_By>>;
  where?: InputMaybe<Holidays_Groups_Bool_Exp>;
};


export type Query_RootHolidays_Groups_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootIntegrationArgs = {
  distinct_on?: InputMaybe<Array<Integration_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Integration_Order_By>>;
  where?: InputMaybe<Integration_Bool_Exp>;
};


export type Query_RootIntegration_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Integration_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Integration_Order_By>>;
  where?: InputMaybe<Integration_Bool_Exp>;
};


export type Query_RootIntegration_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootIntegration_MergeArgs = {
  account_id: Scalars['Int']['input'];
  integration_id: Scalars['Int']['input'];
  user_id: Scalars['Int']['input'];
};


export type Query_RootIntegration_ServiceArgs = {
  distinct_on?: InputMaybe<Array<Integration_Service_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Integration_Service_Order_By>>;
  where?: InputMaybe<Integration_Service_Bool_Exp>;
};


export type Query_RootIntegration_Service_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Integration_Service_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Integration_Service_Order_By>>;
  where?: InputMaybe<Integration_Service_Bool_Exp>;
};


export type Query_RootIntegration_Service_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootIntegration_SyncArgs = {
  distinct_on?: InputMaybe<Array<Integration_Sync_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Integration_Sync_Order_By>>;
  where?: InputMaybe<Integration_Sync_Bool_Exp>;
};


export type Query_RootIntegration_Sync_ActionArgs = {
  distinct_on?: InputMaybe<Array<Integration_Sync_Action_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Integration_Sync_Action_Order_By>>;
  where?: InputMaybe<Integration_Sync_Action_Bool_Exp>;
};


export type Query_RootIntegration_Sync_Action_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Integration_Sync_Action_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Integration_Sync_Action_Order_By>>;
  where?: InputMaybe<Integration_Sync_Action_Bool_Exp>;
};


export type Query_RootIntegration_Sync_Action_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootIntegration_Sync_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Integration_Sync_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Integration_Sync_Order_By>>;
  where?: InputMaybe<Integration_Sync_Bool_Exp>;
};


export type Query_RootIntegration_Sync_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootInvitationsArgs = {
  distinct_on?: InputMaybe<Array<Invitations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Invitations_Order_By>>;
  where?: InputMaybe<Invitations_Bool_Exp>;
};


export type Query_RootInvitations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Invitations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Invitations_Order_By>>;
  where?: InputMaybe<Invitations_Bool_Exp>;
};


export type Query_RootInvitations_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootMilestonesArgs = {
  distinct_on?: InputMaybe<Array<Milestones_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Milestones_Order_By>>;
  where?: InputMaybe<Milestones_Bool_Exp>;
};


export type Query_RootMilestones_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Milestones_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Milestones_Order_By>>;
  where?: InputMaybe<Milestones_Bool_Exp>;
};


export type Query_RootMilestones_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootNotesArgs = {
  distinct_on?: InputMaybe<Array<Notes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Notes_Order_By>>;
  where?: InputMaybe<Notes_Bool_Exp>;
};


export type Query_RootNotes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Notes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Notes_Order_By>>;
  where?: InputMaybe<Notes_Bool_Exp>;
};


export type Query_RootNotes_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootOther_CostsArgs = {
  distinct_on?: InputMaybe<Array<Other_Costs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Other_Costs_Order_By>>;
  where?: InputMaybe<Other_Costs_Bool_Exp>;
};


export type Query_RootOther_Costs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Other_Costs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Other_Costs_Order_By>>;
  where?: InputMaybe<Other_Costs_Bool_Exp>;
};


export type Query_RootOther_Costs_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPeopleArgs = {
  distinct_on?: InputMaybe<Array<People_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<People_Order_By>>;
  where?: InputMaybe<People_Bool_Exp>;
};


export type Query_RootPeople_AggregateArgs = {
  distinct_on?: InputMaybe<Array<People_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<People_Order_By>>;
  where?: InputMaybe<People_Bool_Exp>;
};


export type Query_RootPeople_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPeople_NotesArgs = {
  distinct_on?: InputMaybe<Array<People_Notes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<People_Notes_Order_By>>;
  where?: InputMaybe<People_Notes_Bool_Exp>;
};


export type Query_RootPeople_Notes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<People_Notes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<People_Notes_Order_By>>;
  where?: InputMaybe<People_Notes_Bool_Exp>;
};


export type Query_RootPeople_Notes_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPerson_RequestsArgs = {
  distinct_on?: InputMaybe<Array<Person_Requests_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Person_Requests_Order_By>>;
  where?: InputMaybe<Person_Requests_Bool_Exp>;
};


export type Query_RootPerson_Requests_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Person_Requests_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Person_Requests_Order_By>>;
  where?: InputMaybe<Person_Requests_Bool_Exp>;
};


export type Query_RootPerson_Requests_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootPhasesArgs = {
  distinct_on?: InputMaybe<Array<Phases_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Phases_Order_By>>;
  where?: InputMaybe<Phases_Bool_Exp>;
};


export type Query_RootPhases_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Phases_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Phases_Order_By>>;
  where?: InputMaybe<Phases_Bool_Exp>;
};


export type Query_RootPhases_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootProject_CalculationsArgs = {
  account_id: Scalars['Int']['input'];
  project_id: Scalars['Int']['input'];
};


export type Query_RootProject_EditorsArgs = {
  distinct_on?: InputMaybe<Array<Project_Editors_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Editors_Order_By>>;
  where?: InputMaybe<Project_Editors_Bool_Exp>;
};


export type Query_RootProject_Editors_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Project_Editors_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Editors_Order_By>>;
  where?: InputMaybe<Project_Editors_Bool_Exp>;
};


export type Query_RootProject_Editors_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootProject_MembersArgs = {
  distinct_on?: InputMaybe<Array<Project_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Members_Order_By>>;
  where?: InputMaybe<Project_Members_Bool_Exp>;
};


export type Query_RootProject_Members_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Project_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Members_Order_By>>;
  where?: InputMaybe<Project_Members_Bool_Exp>;
};


export type Query_RootProject_Members_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootProject_RatesArgs = {
  distinct_on?: InputMaybe<Array<Project_Rates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Rates_Order_By>>;
  where?: InputMaybe<Project_Rates_Bool_Exp>;
};


export type Query_RootProject_Rates_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Project_Rates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Rates_Order_By>>;
  where?: InputMaybe<Project_Rates_Bool_Exp>;
};


export type Query_RootProject_Rates_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootProject_RolesArgs = {
  distinct_on?: InputMaybe<Array<Project_Roles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Roles_Order_By>>;
  where?: InputMaybe<Project_Roles_Bool_Exp>;
};


export type Query_RootProject_Roles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Project_Roles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Roles_Order_By>>;
  where?: InputMaybe<Project_Roles_Bool_Exp>;
};


export type Query_RootProject_Roles_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootProject_TagsArgs = {
  distinct_on?: InputMaybe<Array<Project_Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Tags_Order_By>>;
  where?: InputMaybe<Project_Tags_Bool_Exp>;
};


export type Query_RootProject_Tags_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Project_Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Tags_Order_By>>;
  where?: InputMaybe<Project_Tags_Bool_Exp>;
};


export type Query_RootProject_Tags_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootProjectsArgs = {
  distinct_on?: InputMaybe<Array<Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Projects_Order_By>>;
  where?: InputMaybe<Projects_Bool_Exp>;
};


export type Query_RootProjects_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Projects_Order_By>>;
  where?: InputMaybe<Projects_Bool_Exp>;
};


export type Query_RootProjects_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootRate_CardsArgs = {
  distinct_on?: InputMaybe<Array<Rate_Cards_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Rate_Cards_Order_By>>;
  where?: InputMaybe<Rate_Cards_Bool_Exp>;
};


export type Query_RootRate_Cards_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Rate_Cards_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Rate_Cards_Order_By>>;
  where?: InputMaybe<Rate_Cards_Bool_Exp>;
};


export type Query_RootRate_Cards_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootRole_Charge_Out_RatesArgs = {
  distinct_on?: InputMaybe<Array<Role_Charge_Out_Rates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Role_Charge_Out_Rates_Order_By>>;
  where?: InputMaybe<Role_Charge_Out_Rates_Bool_Exp>;
};


export type Query_RootRole_Charge_Out_Rates_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Role_Charge_Out_Rates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Role_Charge_Out_Rates_Order_By>>;
  where?: InputMaybe<Role_Charge_Out_Rates_Bool_Exp>;
};


export type Query_RootRole_Charge_Out_Rates_By_PkArgs = {
  rate_card_id: Scalars['Int']['input'];
  role_id: Scalars['Int']['input'];
};


export type Query_RootRolesArgs = {
  distinct_on?: InputMaybe<Array<Roles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Roles_Order_By>>;
  where?: InputMaybe<Roles_Bool_Exp>;
};


export type Query_RootRoles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Roles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Roles_Order_By>>;
  where?: InputMaybe<Roles_Bool_Exp>;
};


export type Query_RootRoles_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootSkillsArgs = {
  distinct_on?: InputMaybe<Array<Skills_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Skills_Order_By>>;
  where?: InputMaybe<Skills_Bool_Exp>;
};


export type Query_RootSkills_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Skills_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Skills_Order_By>>;
  where?: InputMaybe<Skills_Bool_Exp>;
};


export type Query_RootSkills_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootTagsArgs = {
  distinct_on?: InputMaybe<Array<Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Tags_Order_By>>;
  where?: InputMaybe<Tags_Bool_Exp>;
};


export type Query_RootTags_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Tags_Order_By>>;
  where?: InputMaybe<Tags_Bool_Exp>;
};


export type Query_RootTags_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootTeamsArgs = {
  distinct_on?: InputMaybe<Array<Teams_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Teams_Order_By>>;
  where?: InputMaybe<Teams_Bool_Exp>;
};


export type Query_RootTeams_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Teams_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Teams_Order_By>>;
  where?: InputMaybe<Teams_Bool_Exp>;
};


export type Query_RootTeams_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootTime_OffsArgs = {
  distinct_on?: InputMaybe<Array<Time_Offs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Time_Offs_Order_By>>;
  where?: InputMaybe<Time_Offs_Bool_Exp>;
};


export type Query_RootTime_Offs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Time_Offs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Time_Offs_Order_By>>;
  where?: InputMaybe<Time_Offs_Bool_Exp>;
};


export type Query_RootTime_Offs_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootType_Schedule_TotalsArgs = {
  distinct_on?: InputMaybe<Array<Type_Schedule_Totals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Type_Schedule_Totals_Order_By>>;
  where?: InputMaybe<Type_Schedule_Totals_Bool_Exp>;
};


export type Query_RootType_Schedule_Totals_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Type_Schedule_Totals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Type_Schedule_Totals_Order_By>>;
  where?: InputMaybe<Type_Schedule_Totals_Bool_Exp>;
};


export type Query_RootType_Schedule_Totals_By_PkArgs = {
  project_id: Scalars['Int']['input'];
};


export type Query_RootType_Schedule_Totals_RolesArgs = {
  distinct_on?: InputMaybe<Array<Type_Schedule_Totals_Roles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Type_Schedule_Totals_Roles_Order_By>>;
  where?: InputMaybe<Type_Schedule_Totals_Roles_Bool_Exp>;
};


export type Query_RootType_Schedule_Totals_Roles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Type_Schedule_Totals_Roles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Type_Schedule_Totals_Roles_Order_By>>;
  where?: InputMaybe<Type_Schedule_Totals_Roles_Bool_Exp>;
};


export type Query_RootType_Schedule_Totals_Roles_By_PkArgs = {
  project_id: Scalars['Int']['input'];
  role_id: Scalars['Int']['input'];
};


export type Query_RootUser_Filter_SetsArgs = {
  distinct_on?: InputMaybe<Array<User_Filter_Sets_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Filter_Sets_Order_By>>;
  where?: InputMaybe<User_Filter_Sets_Bool_Exp>;
};


export type Query_RootUser_Filter_Sets_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Filter_Sets_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Filter_Sets_Order_By>>;
  where?: InputMaybe<User_Filter_Sets_Bool_Exp>;
};


export type Query_RootUser_Filter_Sets_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootUsersArgs = {
  distinct_on?: InputMaybe<Array<Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Users_Order_By>>;
  where?: InputMaybe<Users_Bool_Exp>;
};


export type Query_RootUsers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Users_Order_By>>;
  where?: InputMaybe<Users_Bool_Exp>;
};


export type Query_RootUsers_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootV_Summary_TotalArgs = {
  distinct_on?: InputMaybe<Array<V_Summary_Total_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<V_Summary_Total_Order_By>>;
  where?: InputMaybe<V_Summary_Total_Bool_Exp>;
};


export type Query_RootV_Summary_Total_AggregateArgs = {
  distinct_on?: InputMaybe<Array<V_Summary_Total_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<V_Summary_Total_Order_By>>;
  where?: InputMaybe<V_Summary_Total_Bool_Exp>;
};


export type Query_RootViewsArgs = {
  distinct_on?: InputMaybe<Array<Views_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Views_Order_By>>;
  where?: InputMaybe<Views_Bool_Exp>;
};


export type Query_RootViews_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Views_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Views_Order_By>>;
  where?: InputMaybe<Views_Bool_Exp>;
};


export type Query_RootViews_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** columns and relationships of "rate_cards" */
export type Rate_Cards = {
  __typename?: 'rate_cards';
  /** An object relationship */
  account: Accounts;
  account_id: Scalars['Int']['output'];
  active: Scalars['Boolean']['output'];
  /** Can this rate card be archived? */
  archivable?: Maybe<Scalars['Boolean']['output']>;
  blended_rate?: Maybe<Scalars['numeric']['output']>;
  blended_rate_card: Scalars['Boolean']['output'];
  blended_rate_private?: Maybe<Scalars['numeric']['output']>;
  created_at: Scalars['timestamp']['output'];
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['Int']['output'];
  name?: Maybe<Scalars['String']['output']>;
  /** An array relationship */
  projects: Array<Projects>;
  /** An aggregate relationship */
  projects_aggregate: Projects_Aggregate;
  rate_type?: Maybe<Scalars['String']['output']>;
  references: Scalars['jsonb']['output'];
  /** An array relationship */
  role_charge_out_rates: Array<Role_Charge_Out_Rates>;
  /** An aggregate relationship */
  role_charge_out_rates_aggregate: Role_Charge_Out_Rates_Aggregate;
  updated_at: Scalars['timestamp']['output'];
};


/** columns and relationships of "rate_cards" */
export type Rate_CardsProjectsArgs = {
  distinct_on?: InputMaybe<Array<Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Projects_Order_By>>;
  where?: InputMaybe<Projects_Bool_Exp>;
};


/** columns and relationships of "rate_cards" */
export type Rate_CardsProjects_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Projects_Order_By>>;
  where?: InputMaybe<Projects_Bool_Exp>;
};


/** columns and relationships of "rate_cards" */
export type Rate_CardsReferencesArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** columns and relationships of "rate_cards" */
export type Rate_CardsRole_Charge_Out_RatesArgs = {
  distinct_on?: InputMaybe<Array<Role_Charge_Out_Rates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Role_Charge_Out_Rates_Order_By>>;
  where?: InputMaybe<Role_Charge_Out_Rates_Bool_Exp>;
};


/** columns and relationships of "rate_cards" */
export type Rate_CardsRole_Charge_Out_Rates_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Role_Charge_Out_Rates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Role_Charge_Out_Rates_Order_By>>;
  where?: InputMaybe<Role_Charge_Out_Rates_Bool_Exp>;
};

/** aggregated selection of "rate_cards" */
export type Rate_Cards_Aggregate = {
  __typename?: 'rate_cards_aggregate';
  aggregate?: Maybe<Rate_Cards_Aggregate_Fields>;
  nodes: Array<Rate_Cards>;
};

export type Rate_Cards_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Rate_Cards_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Rate_Cards_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Rate_Cards_Aggregate_Bool_Exp_Count>;
};

export type Rate_Cards_Aggregate_Bool_Exp_Bool_And = {
  arguments: Rate_Cards_Select_Column_Rate_Cards_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Rate_Cards_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Rate_Cards_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Rate_Cards_Select_Column_Rate_Cards_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Rate_Cards_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Rate_Cards_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Rate_Cards_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Rate_Cards_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "rate_cards" */
export type Rate_Cards_Aggregate_Fields = {
  __typename?: 'rate_cards_aggregate_fields';
  avg?: Maybe<Rate_Cards_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Rate_Cards_Max_Fields>;
  min?: Maybe<Rate_Cards_Min_Fields>;
  stddev?: Maybe<Rate_Cards_Stddev_Fields>;
  stddev_pop?: Maybe<Rate_Cards_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Rate_Cards_Stddev_Samp_Fields>;
  sum?: Maybe<Rate_Cards_Sum_Fields>;
  var_pop?: Maybe<Rate_Cards_Var_Pop_Fields>;
  var_samp?: Maybe<Rate_Cards_Var_Samp_Fields>;
  variance?: Maybe<Rate_Cards_Variance_Fields>;
};


/** aggregate fields of "rate_cards" */
export type Rate_Cards_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Rate_Cards_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "rate_cards" */
export type Rate_Cards_Aggregate_Order_By = {
  avg?: InputMaybe<Rate_Cards_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Rate_Cards_Max_Order_By>;
  min?: InputMaybe<Rate_Cards_Min_Order_By>;
  stddev?: InputMaybe<Rate_Cards_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Rate_Cards_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Rate_Cards_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Rate_Cards_Sum_Order_By>;
  var_pop?: InputMaybe<Rate_Cards_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Rate_Cards_Var_Samp_Order_By>;
  variance?: InputMaybe<Rate_Cards_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Rate_Cards_Append_Input = {
  references?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "rate_cards" */
export type Rate_Cards_Arr_Rel_Insert_Input = {
  data: Array<Rate_Cards_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Rate_Cards_On_Conflict>;
};

/** aggregate avg on columns */
export type Rate_Cards_Avg_Fields = {
  __typename?: 'rate_cards_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  blended_rate?: Maybe<Scalars['Float']['output']>;
  blended_rate_private?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "rate_cards" */
export type Rate_Cards_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  blended_rate?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "rate_cards". All fields are combined with a logical 'AND'. */
export type Rate_Cards_Bool_Exp = {
  _and?: InputMaybe<Array<Rate_Cards_Bool_Exp>>;
  _not?: InputMaybe<Rate_Cards_Bool_Exp>;
  _or?: InputMaybe<Array<Rate_Cards_Bool_Exp>>;
  account?: InputMaybe<Accounts_Bool_Exp>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  active?: InputMaybe<Boolean_Comparison_Exp>;
  archivable?: InputMaybe<Boolean_Comparison_Exp>;
  blended_rate?: InputMaybe<Numeric_Comparison_Exp>;
  blended_rate_card?: InputMaybe<Boolean_Comparison_Exp>;
  blended_rate_private?: InputMaybe<Numeric_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  projects?: InputMaybe<Projects_Bool_Exp>;
  projects_aggregate?: InputMaybe<Projects_Aggregate_Bool_Exp>;
  rate_type?: InputMaybe<String_Comparison_Exp>;
  references?: InputMaybe<Jsonb_Comparison_Exp>;
  role_charge_out_rates?: InputMaybe<Role_Charge_Out_Rates_Bool_Exp>;
  role_charge_out_rates_aggregate?: InputMaybe<Role_Charge_Out_Rates_Aggregate_Bool_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "rate_cards" */
export enum Rate_Cards_Constraint {
  /** unique or primary key constraint on columns "account_id", "id" */
  IndexUniqueRateCardsIdAccountId = 'index_unique_rate_cards_id_account_id',
  /** unique or primary key constraint on columns "id" */
  RateCardsPkey = 'rate_cards_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Rate_Cards_Delete_At_Path_Input = {
  references?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Rate_Cards_Delete_Elem_Input = {
  references?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Rate_Cards_Delete_Key_Input = {
  references?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "rate_cards" */
export type Rate_Cards_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  blended_rate?: InputMaybe<Scalars['numeric']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "rate_cards" */
export type Rate_Cards_Insert_Input = {
  account?: InputMaybe<Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['Int']['input']>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  blended_rate?: InputMaybe<Scalars['numeric']['input']>;
  blended_rate_card?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  projects?: InputMaybe<Projects_Arr_Rel_Insert_Input>;
  rate_type?: InputMaybe<Scalars['String']['input']>;
  references?: InputMaybe<Scalars['jsonb']['input']>;
  role_charge_out_rates?: InputMaybe<Role_Charge_Out_Rates_Arr_Rel_Insert_Input>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Rate_Cards_Max_Fields = {
  __typename?: 'rate_cards_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  blended_rate?: Maybe<Scalars['numeric']['output']>;
  blended_rate_private?: Maybe<Scalars['numeric']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  rate_type?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "rate_cards" */
export type Rate_Cards_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  blended_rate?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  rate_type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Rate_Cards_Min_Fields = {
  __typename?: 'rate_cards_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  blended_rate?: Maybe<Scalars['numeric']['output']>;
  blended_rate_private?: Maybe<Scalars['numeric']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  rate_type?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "rate_cards" */
export type Rate_Cards_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  blended_rate?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  rate_type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "rate_cards" */
export type Rate_Cards_Mutation_Response = {
  __typename?: 'rate_cards_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Rate_Cards>;
};

/** input type for inserting object relation for remote table "rate_cards" */
export type Rate_Cards_Obj_Rel_Insert_Input = {
  data: Rate_Cards_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Rate_Cards_On_Conflict>;
};

/** on_conflict condition type for table "rate_cards" */
export type Rate_Cards_On_Conflict = {
  constraint: Rate_Cards_Constraint;
  update_columns?: Array<Rate_Cards_Update_Column>;
  where?: InputMaybe<Rate_Cards_Bool_Exp>;
};

/** Ordering options when selecting data from "rate_cards". */
export type Rate_Cards_Order_By = {
  account?: InputMaybe<Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  active?: InputMaybe<Order_By>;
  archivable?: InputMaybe<Order_By>;
  blended_rate?: InputMaybe<Order_By>;
  blended_rate_card?: InputMaybe<Order_By>;
  blended_rate_private?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  projects_aggregate?: InputMaybe<Projects_Aggregate_Order_By>;
  rate_type?: InputMaybe<Order_By>;
  references?: InputMaybe<Order_By>;
  role_charge_out_rates_aggregate?: InputMaybe<Role_Charge_Out_Rates_Aggregate_Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: rate_cards */
export type Rate_Cards_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Rate_Cards_Prepend_Input = {
  references?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "rate_cards" */
export enum Rate_Cards_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Active = 'active',
  /** column name */
  BlendedRate = 'blended_rate',
  /** column name */
  BlendedRateCard = 'blended_rate_card',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  RateType = 'rate_type',
  /** column name */
  References = 'references',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** select "rate_cards_aggregate_bool_exp_bool_and_arguments_columns" columns of table "rate_cards" */
export enum Rate_Cards_Select_Column_Rate_Cards_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  Active = 'active',
  /** column name */
  BlendedRateCard = 'blended_rate_card'
}

/** select "rate_cards_aggregate_bool_exp_bool_or_arguments_columns" columns of table "rate_cards" */
export enum Rate_Cards_Select_Column_Rate_Cards_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  Active = 'active',
  /** column name */
  BlendedRateCard = 'blended_rate_card'
}

/** input type for updating data in table "rate_cards" */
export type Rate_Cards_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  blended_rate?: InputMaybe<Scalars['numeric']['input']>;
  blended_rate_card?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  rate_type?: InputMaybe<Scalars['String']['input']>;
  references?: InputMaybe<Scalars['jsonb']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Rate_Cards_Stddev_Fields = {
  __typename?: 'rate_cards_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  blended_rate?: Maybe<Scalars['Float']['output']>;
  blended_rate_private?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "rate_cards" */
export type Rate_Cards_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  blended_rate?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Rate_Cards_Stddev_Pop_Fields = {
  __typename?: 'rate_cards_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  blended_rate?: Maybe<Scalars['Float']['output']>;
  blended_rate_private?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "rate_cards" */
export type Rate_Cards_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  blended_rate?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Rate_Cards_Stddev_Samp_Fields = {
  __typename?: 'rate_cards_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  blended_rate?: Maybe<Scalars['Float']['output']>;
  blended_rate_private?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "rate_cards" */
export type Rate_Cards_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  blended_rate?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "rate_cards" */
export type Rate_Cards_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Rate_Cards_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Rate_Cards_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  blended_rate?: InputMaybe<Scalars['numeric']['input']>;
  blended_rate_card?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  rate_type?: InputMaybe<Scalars['String']['input']>;
  references?: InputMaybe<Scalars['jsonb']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Rate_Cards_Sum_Fields = {
  __typename?: 'rate_cards_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  blended_rate?: Maybe<Scalars['numeric']['output']>;
  blended_rate_private?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "rate_cards" */
export type Rate_Cards_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  blended_rate?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "rate_cards" */
export enum Rate_Cards_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Active = 'active',
  /** column name */
  BlendedRate = 'blended_rate',
  /** column name */
  BlendedRateCard = 'blended_rate_card',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  RateType = 'rate_type',
  /** column name */
  References = 'references',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Rate_Cards_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Rate_Cards_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Rate_Cards_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Rate_Cards_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Rate_Cards_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Rate_Cards_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Rate_Cards_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Rate_Cards_Set_Input>;
  /** filter the rows which have to be updated */
  where: Rate_Cards_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Rate_Cards_Var_Pop_Fields = {
  __typename?: 'rate_cards_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  blended_rate?: Maybe<Scalars['Float']['output']>;
  blended_rate_private?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "rate_cards" */
export type Rate_Cards_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  blended_rate?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Rate_Cards_Var_Samp_Fields = {
  __typename?: 'rate_cards_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  blended_rate?: Maybe<Scalars['Float']['output']>;
  blended_rate_private?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "rate_cards" */
export type Rate_Cards_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  blended_rate?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Rate_Cards_Variance_Fields = {
  __typename?: 'rate_cards_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  blended_rate?: Maybe<Scalars['Float']['output']>;
  blended_rate_private?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "rate_cards" */
export type Rate_Cards_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  blended_rate?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "role_charge_out_rates" */
export type Role_Charge_Out_Rates = {
  __typename?: 'role_charge_out_rates';
  account_id: Scalars['Int']['output'];
  charge_out_rate: Scalars['numeric']['output'];
  charge_out_rate_private?: Maybe<Scalars['numeric']['output']>;
  /** An object relationship */
  rate_card: Rate_Cards;
  rate_card_id: Scalars['Int']['output'];
  /** An object relationship */
  role: Roles;
  role_id: Scalars['Int']['output'];
};

/** aggregated selection of "role_charge_out_rates" */
export type Role_Charge_Out_Rates_Aggregate = {
  __typename?: 'role_charge_out_rates_aggregate';
  aggregate?: Maybe<Role_Charge_Out_Rates_Aggregate_Fields>;
  nodes: Array<Role_Charge_Out_Rates>;
};

export type Role_Charge_Out_Rates_Aggregate_Bool_Exp = {
  count?: InputMaybe<Role_Charge_Out_Rates_Aggregate_Bool_Exp_Count>;
};

export type Role_Charge_Out_Rates_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Role_Charge_Out_Rates_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Role_Charge_Out_Rates_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "role_charge_out_rates" */
export type Role_Charge_Out_Rates_Aggregate_Fields = {
  __typename?: 'role_charge_out_rates_aggregate_fields';
  avg?: Maybe<Role_Charge_Out_Rates_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Role_Charge_Out_Rates_Max_Fields>;
  min?: Maybe<Role_Charge_Out_Rates_Min_Fields>;
  stddev?: Maybe<Role_Charge_Out_Rates_Stddev_Fields>;
  stddev_pop?: Maybe<Role_Charge_Out_Rates_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Role_Charge_Out_Rates_Stddev_Samp_Fields>;
  sum?: Maybe<Role_Charge_Out_Rates_Sum_Fields>;
  var_pop?: Maybe<Role_Charge_Out_Rates_Var_Pop_Fields>;
  var_samp?: Maybe<Role_Charge_Out_Rates_Var_Samp_Fields>;
  variance?: Maybe<Role_Charge_Out_Rates_Variance_Fields>;
};


/** aggregate fields of "role_charge_out_rates" */
export type Role_Charge_Out_Rates_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Role_Charge_Out_Rates_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "role_charge_out_rates" */
export type Role_Charge_Out_Rates_Aggregate_Order_By = {
  avg?: InputMaybe<Role_Charge_Out_Rates_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Role_Charge_Out_Rates_Max_Order_By>;
  min?: InputMaybe<Role_Charge_Out_Rates_Min_Order_By>;
  stddev?: InputMaybe<Role_Charge_Out_Rates_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Role_Charge_Out_Rates_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Role_Charge_Out_Rates_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Role_Charge_Out_Rates_Sum_Order_By>;
  var_pop?: InputMaybe<Role_Charge_Out_Rates_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Role_Charge_Out_Rates_Var_Samp_Order_By>;
  variance?: InputMaybe<Role_Charge_Out_Rates_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "role_charge_out_rates" */
export type Role_Charge_Out_Rates_Arr_Rel_Insert_Input = {
  data: Array<Role_Charge_Out_Rates_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Role_Charge_Out_Rates_On_Conflict>;
};

/** aggregate avg on columns */
export type Role_Charge_Out_Rates_Avg_Fields = {
  __typename?: 'role_charge_out_rates_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  charge_out_rate?: Maybe<Scalars['Float']['output']>;
  charge_out_rate_private?: Maybe<Scalars['numeric']['output']>;
  rate_card_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "role_charge_out_rates" */
export type Role_Charge_Out_Rates_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  charge_out_rate?: InputMaybe<Order_By>;
  rate_card_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "role_charge_out_rates". All fields are combined with a logical 'AND'. */
export type Role_Charge_Out_Rates_Bool_Exp = {
  _and?: InputMaybe<Array<Role_Charge_Out_Rates_Bool_Exp>>;
  _not?: InputMaybe<Role_Charge_Out_Rates_Bool_Exp>;
  _or?: InputMaybe<Array<Role_Charge_Out_Rates_Bool_Exp>>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  charge_out_rate?: InputMaybe<Numeric_Comparison_Exp>;
  charge_out_rate_private?: InputMaybe<Numeric_Comparison_Exp>;
  rate_card?: InputMaybe<Rate_Cards_Bool_Exp>;
  rate_card_id?: InputMaybe<Int_Comparison_Exp>;
  role?: InputMaybe<Roles_Bool_Exp>;
  role_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "role_charge_out_rates" */
export enum Role_Charge_Out_Rates_Constraint {
  /** unique or primary key constraint on columns "role_id", "account_id", "rate_card_id" */
  IndexUniqueRoleChargeOutRatesIdAccountId = 'index_unique_role_charge_out_rates_id_account_id',
  /** unique or primary key constraint on columns "role_id", "rate_card_id" */
  RoleChargeOutRatesPkey = 'role_charge_out_rates_pkey'
}

/** input type for incrementing numeric columns in table "role_charge_out_rates" */
export type Role_Charge_Out_Rates_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  charge_out_rate?: InputMaybe<Scalars['numeric']['input']>;
  rate_card_id?: InputMaybe<Scalars['Int']['input']>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "role_charge_out_rates" */
export type Role_Charge_Out_Rates_Insert_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  charge_out_rate?: InputMaybe<Scalars['numeric']['input']>;
  rate_card?: InputMaybe<Rate_Cards_Obj_Rel_Insert_Input>;
  rate_card_id?: InputMaybe<Scalars['Int']['input']>;
  role?: InputMaybe<Roles_Obj_Rel_Insert_Input>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Role_Charge_Out_Rates_Max_Fields = {
  __typename?: 'role_charge_out_rates_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  charge_out_rate?: Maybe<Scalars['numeric']['output']>;
  charge_out_rate_private?: Maybe<Scalars['numeric']['output']>;
  rate_card_id?: Maybe<Scalars['Int']['output']>;
  role_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "role_charge_out_rates" */
export type Role_Charge_Out_Rates_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  charge_out_rate?: InputMaybe<Order_By>;
  rate_card_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Role_Charge_Out_Rates_Min_Fields = {
  __typename?: 'role_charge_out_rates_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  charge_out_rate?: Maybe<Scalars['numeric']['output']>;
  charge_out_rate_private?: Maybe<Scalars['numeric']['output']>;
  rate_card_id?: Maybe<Scalars['Int']['output']>;
  role_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "role_charge_out_rates" */
export type Role_Charge_Out_Rates_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  charge_out_rate?: InputMaybe<Order_By>;
  rate_card_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "role_charge_out_rates" */
export type Role_Charge_Out_Rates_Mutation_Response = {
  __typename?: 'role_charge_out_rates_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Role_Charge_Out_Rates>;
};

/** on_conflict condition type for table "role_charge_out_rates" */
export type Role_Charge_Out_Rates_On_Conflict = {
  constraint: Role_Charge_Out_Rates_Constraint;
  update_columns?: Array<Role_Charge_Out_Rates_Update_Column>;
  where?: InputMaybe<Role_Charge_Out_Rates_Bool_Exp>;
};

/** Ordering options when selecting data from "role_charge_out_rates". */
export type Role_Charge_Out_Rates_Order_By = {
  account_id?: InputMaybe<Order_By>;
  charge_out_rate?: InputMaybe<Order_By>;
  charge_out_rate_private?: InputMaybe<Order_By>;
  rate_card?: InputMaybe<Rate_Cards_Order_By>;
  rate_card_id?: InputMaybe<Order_By>;
  role?: InputMaybe<Roles_Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: role_charge_out_rates */
export type Role_Charge_Out_Rates_Pk_Columns_Input = {
  rate_card_id: Scalars['Int']['input'];
  role_id: Scalars['Int']['input'];
};

/** select columns of table "role_charge_out_rates" */
export enum Role_Charge_Out_Rates_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  ChargeOutRate = 'charge_out_rate',
  /** column name */
  RateCardId = 'rate_card_id',
  /** column name */
  RoleId = 'role_id'
}

/** input type for updating data in table "role_charge_out_rates" */
export type Role_Charge_Out_Rates_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  charge_out_rate?: InputMaybe<Scalars['numeric']['input']>;
  rate_card_id?: InputMaybe<Scalars['Int']['input']>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Role_Charge_Out_Rates_Stddev_Fields = {
  __typename?: 'role_charge_out_rates_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  charge_out_rate?: Maybe<Scalars['Float']['output']>;
  charge_out_rate_private?: Maybe<Scalars['numeric']['output']>;
  rate_card_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "role_charge_out_rates" */
export type Role_Charge_Out_Rates_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  charge_out_rate?: InputMaybe<Order_By>;
  rate_card_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Role_Charge_Out_Rates_Stddev_Pop_Fields = {
  __typename?: 'role_charge_out_rates_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  charge_out_rate?: Maybe<Scalars['Float']['output']>;
  charge_out_rate_private?: Maybe<Scalars['numeric']['output']>;
  rate_card_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "role_charge_out_rates" */
export type Role_Charge_Out_Rates_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  charge_out_rate?: InputMaybe<Order_By>;
  rate_card_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Role_Charge_Out_Rates_Stddev_Samp_Fields = {
  __typename?: 'role_charge_out_rates_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  charge_out_rate?: Maybe<Scalars['Float']['output']>;
  charge_out_rate_private?: Maybe<Scalars['numeric']['output']>;
  rate_card_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "role_charge_out_rates" */
export type Role_Charge_Out_Rates_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  charge_out_rate?: InputMaybe<Order_By>;
  rate_card_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "role_charge_out_rates" */
export type Role_Charge_Out_Rates_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Role_Charge_Out_Rates_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Role_Charge_Out_Rates_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  charge_out_rate?: InputMaybe<Scalars['numeric']['input']>;
  rate_card_id?: InputMaybe<Scalars['Int']['input']>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Role_Charge_Out_Rates_Sum_Fields = {
  __typename?: 'role_charge_out_rates_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  charge_out_rate?: Maybe<Scalars['numeric']['output']>;
  charge_out_rate_private?: Maybe<Scalars['numeric']['output']>;
  rate_card_id?: Maybe<Scalars['Int']['output']>;
  role_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "role_charge_out_rates" */
export type Role_Charge_Out_Rates_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  charge_out_rate?: InputMaybe<Order_By>;
  rate_card_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** update columns of table "role_charge_out_rates" */
export enum Role_Charge_Out_Rates_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  ChargeOutRate = 'charge_out_rate',
  /** column name */
  RateCardId = 'rate_card_id',
  /** column name */
  RoleId = 'role_id'
}

export type Role_Charge_Out_Rates_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Role_Charge_Out_Rates_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Role_Charge_Out_Rates_Set_Input>;
  /** filter the rows which have to be updated */
  where: Role_Charge_Out_Rates_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Role_Charge_Out_Rates_Var_Pop_Fields = {
  __typename?: 'role_charge_out_rates_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  charge_out_rate?: Maybe<Scalars['Float']['output']>;
  charge_out_rate_private?: Maybe<Scalars['numeric']['output']>;
  rate_card_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "role_charge_out_rates" */
export type Role_Charge_Out_Rates_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  charge_out_rate?: InputMaybe<Order_By>;
  rate_card_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Role_Charge_Out_Rates_Var_Samp_Fields = {
  __typename?: 'role_charge_out_rates_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  charge_out_rate?: Maybe<Scalars['Float']['output']>;
  charge_out_rate_private?: Maybe<Scalars['numeric']['output']>;
  rate_card_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "role_charge_out_rates" */
export type Role_Charge_Out_Rates_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  charge_out_rate?: InputMaybe<Order_By>;
  rate_card_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Role_Charge_Out_Rates_Variance_Fields = {
  __typename?: 'role_charge_out_rates_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  charge_out_rate?: Maybe<Scalars['Float']['output']>;
  charge_out_rate_private?: Maybe<Scalars['numeric']['output']>;
  rate_card_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "role_charge_out_rates" */
export type Role_Charge_Out_Rates_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  charge_out_rate?: InputMaybe<Order_By>;
  rate_card_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "roles" */
export type Roles = {
  __typename?: 'roles';
  /** An object relationship */
  account: Accounts;
  account_id: Scalars['Int']['output'];
  active: Scalars['Boolean']['output'];
  /** An array relationship */
  actuals: Array<Actuals>;
  /** An aggregate relationship */
  actuals_aggregate: Actuals_Aggregate;
  /** An array relationship */
  assignments: Array<Assignments>;
  /** An aggregate relationship */
  assignments_aggregate: Assignments_Aggregate;
  /** An array relationship */
  contracts: Array<Contracts>;
  /** An aggregate relationship */
  contracts_aggregate: Contracts_Aggregate;
  created_at: Scalars['timestamp']['output'];
  default_hour_cost: Scalars['numeric']['output'];
  default_hour_cost_private?: Maybe<Scalars['numeric']['output']>;
  id: Scalars['Int']['output'];
  name?: Maybe<Scalars['String']['output']>;
  /** An array relationship */
  project_rates: Array<Project_Rates>;
  /** An aggregate relationship */
  project_rates_aggregate: Project_Rates_Aggregate;
  references: Scalars['jsonb']['output'];
  /** An array relationship */
  role_charge_out_rates: Array<Role_Charge_Out_Rates>;
  /** An aggregate relationship */
  role_charge_out_rates_aggregate: Role_Charge_Out_Rates_Aggregate;
  /** An array relationship */
  type_schedule_totals_roles: Array<Type_Schedule_Totals_Roles>;
  /** An aggregate relationship */
  type_schedule_totals_roles_aggregate: Type_Schedule_Totals_Roles_Aggregate;
  updated_at: Scalars['timestamp']['output'];
};


/** columns and relationships of "roles" */
export type RolesActualsArgs = {
  distinct_on?: InputMaybe<Array<Actuals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Actuals_Order_By>>;
  where?: InputMaybe<Actuals_Bool_Exp>;
};


/** columns and relationships of "roles" */
export type RolesActuals_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Actuals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Actuals_Order_By>>;
  where?: InputMaybe<Actuals_Bool_Exp>;
};


/** columns and relationships of "roles" */
export type RolesAssignmentsArgs = {
  distinct_on?: InputMaybe<Array<Assignments_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Assignments_Order_By>>;
  where?: InputMaybe<Assignments_Bool_Exp>;
};


/** columns and relationships of "roles" */
export type RolesAssignments_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Assignments_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Assignments_Order_By>>;
  where?: InputMaybe<Assignments_Bool_Exp>;
};


/** columns and relationships of "roles" */
export type RolesContractsArgs = {
  distinct_on?: InputMaybe<Array<Contracts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contracts_Order_By>>;
  where?: InputMaybe<Contracts_Bool_Exp>;
};


/** columns and relationships of "roles" */
export type RolesContracts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Contracts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contracts_Order_By>>;
  where?: InputMaybe<Contracts_Bool_Exp>;
};


/** columns and relationships of "roles" */
export type RolesProject_RatesArgs = {
  distinct_on?: InputMaybe<Array<Project_Rates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Rates_Order_By>>;
  where?: InputMaybe<Project_Rates_Bool_Exp>;
};


/** columns and relationships of "roles" */
export type RolesProject_Rates_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Project_Rates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Rates_Order_By>>;
  where?: InputMaybe<Project_Rates_Bool_Exp>;
};


/** columns and relationships of "roles" */
export type RolesReferencesArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** columns and relationships of "roles" */
export type RolesRole_Charge_Out_RatesArgs = {
  distinct_on?: InputMaybe<Array<Role_Charge_Out_Rates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Role_Charge_Out_Rates_Order_By>>;
  where?: InputMaybe<Role_Charge_Out_Rates_Bool_Exp>;
};


/** columns and relationships of "roles" */
export type RolesRole_Charge_Out_Rates_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Role_Charge_Out_Rates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Role_Charge_Out_Rates_Order_By>>;
  where?: InputMaybe<Role_Charge_Out_Rates_Bool_Exp>;
};


/** columns and relationships of "roles" */
export type RolesType_Schedule_Totals_RolesArgs = {
  distinct_on?: InputMaybe<Array<Type_Schedule_Totals_Roles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Type_Schedule_Totals_Roles_Order_By>>;
  where?: InputMaybe<Type_Schedule_Totals_Roles_Bool_Exp>;
};


/** columns and relationships of "roles" */
export type RolesType_Schedule_Totals_Roles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Type_Schedule_Totals_Roles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Type_Schedule_Totals_Roles_Order_By>>;
  where?: InputMaybe<Type_Schedule_Totals_Roles_Bool_Exp>;
};

/** aggregated selection of "roles" */
export type Roles_Aggregate = {
  __typename?: 'roles_aggregate';
  aggregate?: Maybe<Roles_Aggregate_Fields>;
  nodes: Array<Roles>;
};

export type Roles_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Roles_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Roles_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Roles_Aggregate_Bool_Exp_Count>;
};

export type Roles_Aggregate_Bool_Exp_Bool_And = {
  arguments: Roles_Select_Column_Roles_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Roles_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Roles_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Roles_Select_Column_Roles_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Roles_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Roles_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Roles_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Roles_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "roles" */
export type Roles_Aggregate_Fields = {
  __typename?: 'roles_aggregate_fields';
  avg?: Maybe<Roles_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Roles_Max_Fields>;
  min?: Maybe<Roles_Min_Fields>;
  stddev?: Maybe<Roles_Stddev_Fields>;
  stddev_pop?: Maybe<Roles_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Roles_Stddev_Samp_Fields>;
  sum?: Maybe<Roles_Sum_Fields>;
  var_pop?: Maybe<Roles_Var_Pop_Fields>;
  var_samp?: Maybe<Roles_Var_Samp_Fields>;
  variance?: Maybe<Roles_Variance_Fields>;
};


/** aggregate fields of "roles" */
export type Roles_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Roles_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "roles" */
export type Roles_Aggregate_Order_By = {
  avg?: InputMaybe<Roles_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Roles_Max_Order_By>;
  min?: InputMaybe<Roles_Min_Order_By>;
  stddev?: InputMaybe<Roles_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Roles_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Roles_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Roles_Sum_Order_By>;
  var_pop?: InputMaybe<Roles_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Roles_Var_Samp_Order_By>;
  variance?: InputMaybe<Roles_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Roles_Append_Input = {
  references?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "roles" */
export type Roles_Arr_Rel_Insert_Input = {
  data: Array<Roles_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Roles_On_Conflict>;
};

/** aggregate avg on columns */
export type Roles_Avg_Fields = {
  __typename?: 'roles_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  default_hour_cost?: Maybe<Scalars['Float']['output']>;
  default_hour_cost_private?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "roles" */
export type Roles_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  default_hour_cost?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "roles". All fields are combined with a logical 'AND'. */
export type Roles_Bool_Exp = {
  _and?: InputMaybe<Array<Roles_Bool_Exp>>;
  _not?: InputMaybe<Roles_Bool_Exp>;
  _or?: InputMaybe<Array<Roles_Bool_Exp>>;
  account?: InputMaybe<Accounts_Bool_Exp>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  active?: InputMaybe<Boolean_Comparison_Exp>;
  actuals?: InputMaybe<Actuals_Bool_Exp>;
  actuals_aggregate?: InputMaybe<Actuals_Aggregate_Bool_Exp>;
  assignments?: InputMaybe<Assignments_Bool_Exp>;
  assignments_aggregate?: InputMaybe<Assignments_Aggregate_Bool_Exp>;
  contracts?: InputMaybe<Contracts_Bool_Exp>;
  contracts_aggregate?: InputMaybe<Contracts_Aggregate_Bool_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  default_hour_cost?: InputMaybe<Numeric_Comparison_Exp>;
  default_hour_cost_private?: InputMaybe<Numeric_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  project_rates?: InputMaybe<Project_Rates_Bool_Exp>;
  project_rates_aggregate?: InputMaybe<Project_Rates_Aggregate_Bool_Exp>;
  references?: InputMaybe<Jsonb_Comparison_Exp>;
  role_charge_out_rates?: InputMaybe<Role_Charge_Out_Rates_Bool_Exp>;
  role_charge_out_rates_aggregate?: InputMaybe<Role_Charge_Out_Rates_Aggregate_Bool_Exp>;
  type_schedule_totals_roles?: InputMaybe<Type_Schedule_Totals_Roles_Bool_Exp>;
  type_schedule_totals_roles_aggregate?: InputMaybe<Type_Schedule_Totals_Roles_Aggregate_Bool_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "roles" */
export enum Roles_Constraint {
  /** unique or primary key constraint on columns "account_id", "id" */
  IndexUniqueRolesIdAccountId = 'index_unique_roles_id_account_id',
  /** unique or primary key constraint on columns "id" */
  RolesPkey = 'roles_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Roles_Delete_At_Path_Input = {
  references?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Roles_Delete_Elem_Input = {
  references?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Roles_Delete_Key_Input = {
  references?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "roles" */
export type Roles_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  default_hour_cost?: InputMaybe<Scalars['numeric']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "roles" */
export type Roles_Insert_Input = {
  account?: InputMaybe<Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['Int']['input']>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  actuals?: InputMaybe<Actuals_Arr_Rel_Insert_Input>;
  assignments?: InputMaybe<Assignments_Arr_Rel_Insert_Input>;
  contracts?: InputMaybe<Contracts_Arr_Rel_Insert_Input>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  default_hour_cost?: InputMaybe<Scalars['numeric']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  project_rates?: InputMaybe<Project_Rates_Arr_Rel_Insert_Input>;
  references?: InputMaybe<Scalars['jsonb']['input']>;
  role_charge_out_rates?: InputMaybe<Role_Charge_Out_Rates_Arr_Rel_Insert_Input>;
  type_schedule_totals_roles?: InputMaybe<Type_Schedule_Totals_Roles_Arr_Rel_Insert_Input>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Roles_Max_Fields = {
  __typename?: 'roles_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  default_hour_cost?: Maybe<Scalars['numeric']['output']>;
  default_hour_cost_private?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "roles" */
export type Roles_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  default_hour_cost?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Roles_Min_Fields = {
  __typename?: 'roles_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  default_hour_cost?: Maybe<Scalars['numeric']['output']>;
  default_hour_cost_private?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "roles" */
export type Roles_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  default_hour_cost?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "roles" */
export type Roles_Mutation_Response = {
  __typename?: 'roles_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Roles>;
};

/** input type for inserting object relation for remote table "roles" */
export type Roles_Obj_Rel_Insert_Input = {
  data: Roles_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Roles_On_Conflict>;
};

/** on_conflict condition type for table "roles" */
export type Roles_On_Conflict = {
  constraint: Roles_Constraint;
  update_columns?: Array<Roles_Update_Column>;
  where?: InputMaybe<Roles_Bool_Exp>;
};

/** Ordering options when selecting data from "roles". */
export type Roles_Order_By = {
  account?: InputMaybe<Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  active?: InputMaybe<Order_By>;
  actuals_aggregate?: InputMaybe<Actuals_Aggregate_Order_By>;
  assignments_aggregate?: InputMaybe<Assignments_Aggregate_Order_By>;
  contracts_aggregate?: InputMaybe<Contracts_Aggregate_Order_By>;
  created_at?: InputMaybe<Order_By>;
  default_hour_cost?: InputMaybe<Order_By>;
  default_hour_cost_private?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  project_rates_aggregate?: InputMaybe<Project_Rates_Aggregate_Order_By>;
  references?: InputMaybe<Order_By>;
  role_charge_out_rates_aggregate?: InputMaybe<Role_Charge_Out_Rates_Aggregate_Order_By>;
  type_schedule_totals_roles_aggregate?: InputMaybe<Type_Schedule_Totals_Roles_Aggregate_Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: roles */
export type Roles_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Roles_Prepend_Input = {
  references?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "roles" */
export enum Roles_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Active = 'active',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DefaultHourCost = 'default_hour_cost',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  References = 'references',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** select "roles_aggregate_bool_exp_bool_and_arguments_columns" columns of table "roles" */
export enum Roles_Select_Column_Roles_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  Active = 'active'
}

/** select "roles_aggregate_bool_exp_bool_or_arguments_columns" columns of table "roles" */
export enum Roles_Select_Column_Roles_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  Active = 'active'
}

/** input type for updating data in table "roles" */
export type Roles_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  default_hour_cost?: InputMaybe<Scalars['numeric']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  references?: InputMaybe<Scalars['jsonb']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Roles_Stddev_Fields = {
  __typename?: 'roles_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  default_hour_cost?: Maybe<Scalars['Float']['output']>;
  default_hour_cost_private?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "roles" */
export type Roles_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  default_hour_cost?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Roles_Stddev_Pop_Fields = {
  __typename?: 'roles_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  default_hour_cost?: Maybe<Scalars['Float']['output']>;
  default_hour_cost_private?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "roles" */
export type Roles_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  default_hour_cost?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Roles_Stddev_Samp_Fields = {
  __typename?: 'roles_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  default_hour_cost?: Maybe<Scalars['Float']['output']>;
  default_hour_cost_private?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "roles" */
export type Roles_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  default_hour_cost?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "roles" */
export type Roles_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Roles_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Roles_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  default_hour_cost?: InputMaybe<Scalars['numeric']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  references?: InputMaybe<Scalars['jsonb']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Roles_Sum_Fields = {
  __typename?: 'roles_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  default_hour_cost?: Maybe<Scalars['numeric']['output']>;
  default_hour_cost_private?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "roles" */
export type Roles_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  default_hour_cost?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "roles" */
export enum Roles_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Active = 'active',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DefaultHourCost = 'default_hour_cost',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  References = 'references',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Roles_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Roles_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Roles_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Roles_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Roles_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Roles_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Roles_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Roles_Set_Input>;
  /** filter the rows which have to be updated */
  where: Roles_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Roles_Var_Pop_Fields = {
  __typename?: 'roles_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  default_hour_cost?: Maybe<Scalars['Float']['output']>;
  default_hour_cost_private?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "roles" */
export type Roles_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  default_hour_cost?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Roles_Var_Samp_Fields = {
  __typename?: 'roles_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  default_hour_cost?: Maybe<Scalars['Float']['output']>;
  default_hour_cost_private?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "roles" */
export type Roles_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  default_hour_cost?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Roles_Variance_Fields = {
  __typename?: 'roles_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  default_hour_cost?: Maybe<Scalars['Float']['output']>;
  default_hour_cost_private?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "roles" */
export type Roles_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  default_hour_cost?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "skills" */
export type Skills = {
  __typename?: 'skills';
  /** An object relationship */
  account: Accounts;
  account_id: Scalars['Int']['output'];
  created_at: Scalars['timestamp']['output'];
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  updated_at: Scalars['timestamp']['output'];
};

/** aggregated selection of "skills" */
export type Skills_Aggregate = {
  __typename?: 'skills_aggregate';
  aggregate?: Maybe<Skills_Aggregate_Fields>;
  nodes: Array<Skills>;
};

export type Skills_Aggregate_Bool_Exp = {
  count?: InputMaybe<Skills_Aggregate_Bool_Exp_Count>;
};

export type Skills_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Skills_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Skills_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "skills" */
export type Skills_Aggregate_Fields = {
  __typename?: 'skills_aggregate_fields';
  avg?: Maybe<Skills_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Skills_Max_Fields>;
  min?: Maybe<Skills_Min_Fields>;
  stddev?: Maybe<Skills_Stddev_Fields>;
  stddev_pop?: Maybe<Skills_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Skills_Stddev_Samp_Fields>;
  sum?: Maybe<Skills_Sum_Fields>;
  var_pop?: Maybe<Skills_Var_Pop_Fields>;
  var_samp?: Maybe<Skills_Var_Samp_Fields>;
  variance?: Maybe<Skills_Variance_Fields>;
};


/** aggregate fields of "skills" */
export type Skills_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Skills_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "skills" */
export type Skills_Aggregate_Order_By = {
  avg?: InputMaybe<Skills_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Skills_Max_Order_By>;
  min?: InputMaybe<Skills_Min_Order_By>;
  stddev?: InputMaybe<Skills_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Skills_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Skills_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Skills_Sum_Order_By>;
  var_pop?: InputMaybe<Skills_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Skills_Var_Samp_Order_By>;
  variance?: InputMaybe<Skills_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "skills" */
export type Skills_Arr_Rel_Insert_Input = {
  data: Array<Skills_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Skills_On_Conflict>;
};

/** aggregate avg on columns */
export type Skills_Avg_Fields = {
  __typename?: 'skills_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "skills" */
export type Skills_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "skills". All fields are combined with a logical 'AND'. */
export type Skills_Bool_Exp = {
  _and?: InputMaybe<Array<Skills_Bool_Exp>>;
  _not?: InputMaybe<Skills_Bool_Exp>;
  _or?: InputMaybe<Array<Skills_Bool_Exp>>;
  account?: InputMaybe<Accounts_Bool_Exp>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "skills" */
export enum Skills_Constraint {
  /** unique or primary key constraint on columns "account_id", "name" */
  IndexUniqueAccountSkillName = 'index_unique_account_skill_name',
  /** unique or primary key constraint on columns "account_id", "id" */
  IndexUniqueSkillsIdAccountId = 'index_unique_skills_id_account_id',
  /** unique or primary key constraint on columns "id" */
  SkillsPkey = 'skills_pkey'
}

/** input type for incrementing numeric columns in table "skills" */
export type Skills_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "skills" */
export type Skills_Insert_Input = {
  account?: InputMaybe<Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Skills_Max_Fields = {
  __typename?: 'skills_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "skills" */
export type Skills_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Skills_Min_Fields = {
  __typename?: 'skills_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "skills" */
export type Skills_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "skills" */
export type Skills_Mutation_Response = {
  __typename?: 'skills_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Skills>;
};

/** input type for inserting object relation for remote table "skills" */
export type Skills_Obj_Rel_Insert_Input = {
  data: Skills_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Skills_On_Conflict>;
};

/** on_conflict condition type for table "skills" */
export type Skills_On_Conflict = {
  constraint: Skills_Constraint;
  update_columns?: Array<Skills_Update_Column>;
  where?: InputMaybe<Skills_Bool_Exp>;
};

/** Ordering options when selecting data from "skills". */
export type Skills_Order_By = {
  account?: InputMaybe<Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: skills */
export type Skills_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "skills" */
export enum Skills_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "skills" */
export type Skills_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Skills_Stddev_Fields = {
  __typename?: 'skills_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "skills" */
export type Skills_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Skills_Stddev_Pop_Fields = {
  __typename?: 'skills_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "skills" */
export type Skills_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Skills_Stddev_Samp_Fields = {
  __typename?: 'skills_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "skills" */
export type Skills_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "skills" */
export type Skills_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Skills_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Skills_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Skills_Sum_Fields = {
  __typename?: 'skills_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "skills" */
export type Skills_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "skills" */
export enum Skills_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Skills_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Skills_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Skills_Set_Input>;
  /** filter the rows which have to be updated */
  where: Skills_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Skills_Var_Pop_Fields = {
  __typename?: 'skills_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "skills" */
export type Skills_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Skills_Var_Samp_Fields = {
  __typename?: 'skills_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "skills" */
export type Skills_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Skills_Variance_Fields = {
  __typename?: 'skills_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "skills" */
export type Skills_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

export type Subscription_Root = {
  __typename?: 'subscription_root';
  /** An array relationship */
  accounts: Array<Accounts>;
  /** An aggregate relationship */
  accounts_aggregate: Accounts_Aggregate;
  /** fetch data from the table: "accounts" using primary key columns */
  accounts_by_pk?: Maybe<Accounts>;
  /** fetch data from the table in a streaming manner: "accounts" */
  accounts_stream: Array<Accounts>;
  /** An array relationship */
  actuals: Array<Actuals>;
  /** An aggregate relationship */
  actuals_aggregate: Actuals_Aggregate;
  /** fetch data from the table: "actuals" using primary key columns */
  actuals_by_pk?: Maybe<Actuals>;
  /** fetch data from the table in a streaming manner: "actuals" */
  actuals_stream: Array<Actuals>;
  /** fetch data from the table: "api_tokens" */
  api_tokens: Array<Api_Tokens>;
  /** fetch aggregated fields from the table: "api_tokens" */
  api_tokens_aggregate: Api_Tokens_Aggregate;
  /** fetch data from the table: "api_tokens" using primary key columns */
  api_tokens_by_pk?: Maybe<Api_Tokens>;
  /** fetch data from the table in a streaming manner: "api_tokens" */
  api_tokens_stream: Array<Api_Tokens>;
  /** An array relationship */
  assignments: Array<Assignments>;
  /** An aggregate relationship */
  assignments_aggregate: Assignments_Aggregate;
  /** fetch data from the table: "assignments" using primary key columns */
  assignments_by_pk?: Maybe<Assignments>;
  /** fetch data from the table in a streaming manner: "assignments" */
  assignments_stream: Array<Assignments>;
  /** fetch data from the table: "audit.logged_actions" */
  audit_logged_actions: Array<Audit_Logged_Actions>;
  /** fetch aggregated fields from the table: "audit.logged_actions" */
  audit_logged_actions_aggregate: Audit_Logged_Actions_Aggregate;
  /** fetch data from the table: "audit.logged_actions" using primary key columns */
  audit_logged_actions_by_pk?: Maybe<Audit_Logged_Actions>;
  /** fetch data from the table in a streaming manner: "audit.logged_actions" */
  audit_logged_actions_stream: Array<Audit_Logged_Actions>;
  /** fetch data from the table: "audit.recently_logged_actions" */
  audit_recently_logged_actions: Array<Audit_Recently_Logged_Actions>;
  /** fetch aggregated fields from the table: "audit.recently_logged_actions" */
  audit_recently_logged_actions_aggregate: Audit_Recently_Logged_Actions_Aggregate;
  /** fetch data from the table in a streaming manner: "audit.recently_logged_actions" */
  audit_recently_logged_actions_stream: Array<Audit_Recently_Logged_Actions>;
  /** An array relationship */
  cancel_reasons: Array<Cancel_Reasons>;
  /** An aggregate relationship */
  cancel_reasons_aggregate: Cancel_Reasons_Aggregate;
  /** fetch data from the table: "cancel_reasons" using primary key columns */
  cancel_reasons_by_pk?: Maybe<Cancel_Reasons>;
  /** fetch data from the table in a streaming manner: "cancel_reasons" */
  cancel_reasons_stream: Array<Cancel_Reasons>;
  /** An array relationship */
  clients: Array<Clients>;
  /** An aggregate relationship */
  clients_aggregate: Clients_Aggregate;
  /** fetch data from the table: "clients" using primary key columns */
  clients_by_pk?: Maybe<Clients>;
  /** fetch data from the table in a streaming manner: "clients" */
  clients_stream: Array<Clients>;
  /** An array relationship */
  competencies: Array<Competencies>;
  /** An aggregate relationship */
  competencies_aggregate: Competencies_Aggregate;
  /** fetch data from the table: "competencies" using primary key columns */
  competencies_by_pk?: Maybe<Competencies>;
  /** fetch data from the table in a streaming manner: "competencies" */
  competencies_stream: Array<Competencies>;
  /** An array relationship */
  contracts: Array<Contracts>;
  /** An aggregate relationship */
  contracts_aggregate: Contracts_Aggregate;
  /** fetch data from the table: "contracts" using primary key columns */
  contracts_by_pk?: Maybe<Contracts>;
  /** fetch data from the table in a streaming manner: "contracts" */
  contracts_stream: Array<Contracts>;
  /** execute function "current_user" which returns "users" */
  current_user?: Maybe<Users>;
  /** execute function "current_user" and query aggregates on result of table type "users" */
  current_user_aggregate: Users_Aggregate;
  /** An array relationship */
  custom_select_options: Array<Custom_Select_Options>;
  /** An aggregate relationship */
  custom_select_options_aggregate: Custom_Select_Options_Aggregate;
  /** fetch data from the table: "custom_select_options" using primary key columns */
  custom_select_options_by_pk?: Maybe<Custom_Select_Options>;
  /** fetch data from the table in a streaming manner: "custom_select_options" */
  custom_select_options_stream: Array<Custom_Select_Options>;
  /** An array relationship */
  custom_select_types: Array<Custom_Select_Types>;
  /** An aggregate relationship */
  custom_select_types_aggregate: Custom_Select_Types_Aggregate;
  /** fetch data from the table: "custom_select_types" using primary key columns */
  custom_select_types_by_pk?: Maybe<Custom_Select_Types>;
  /** fetch data from the table in a streaming manner: "custom_select_types" */
  custom_select_types_stream: Array<Custom_Select_Types>;
  /** An array relationship */
  custom_select_values: Array<Custom_Select_Values>;
  /** An aggregate relationship */
  custom_select_values_aggregate: Custom_Select_Values_Aggregate;
  /** fetch data from the table: "custom_select_values" using primary key columns */
  custom_select_values_by_pk?: Maybe<Custom_Select_Values>;
  /** fetch data from the table in a streaming manner: "custom_select_values" */
  custom_select_values_stream: Array<Custom_Select_Values>;
  /** An array relationship */
  custom_text_types: Array<Custom_Text_Types>;
  /** An aggregate relationship */
  custom_text_types_aggregate: Custom_Text_Types_Aggregate;
  /** fetch data from the table: "custom_text_types" using primary key columns */
  custom_text_types_by_pk?: Maybe<Custom_Text_Types>;
  /** fetch data from the table in a streaming manner: "custom_text_types" */
  custom_text_types_stream: Array<Custom_Text_Types>;
  /** An array relationship */
  custom_text_values: Array<Custom_Text_Values>;
  /** An aggregate relationship */
  custom_text_values_aggregate: Custom_Text_Values_Aggregate;
  /** fetch data from the table: "custom_text_values" using primary key columns */
  custom_text_values_by_pk?: Maybe<Custom_Text_Values>;
  /** fetch data from the table in a streaming manner: "custom_text_values" */
  custom_text_values_stream: Array<Custom_Text_Values>;
  /** fetch data from the table: "ext_contract" */
  ext_contract: Array<Ext_Contract>;
  /** fetch aggregated fields from the table: "ext_contract" */
  ext_contract_aggregate: Ext_Contract_Aggregate;
  /** fetch data from the table: "ext_contract" using primary key columns */
  ext_contract_by_pk?: Maybe<Ext_Contract>;
  /** fetch data from the table in a streaming manner: "ext_contract" */
  ext_contract_stream: Array<Ext_Contract>;
  /** fetch data from the table: "ext_person" */
  ext_person: Array<Ext_Person>;
  /** fetch aggregated fields from the table: "ext_person" */
  ext_person_aggregate: Ext_Person_Aggregate;
  /** fetch data from the table: "ext_person" using primary key columns */
  ext_person_by_pk?: Maybe<Ext_Person>;
  /** fetch data from the table: "ext_person_link" */
  ext_person_link: Array<Ext_Person_Link>;
  /** fetch aggregated fields from the table: "ext_person_link" */
  ext_person_link_aggregate: Ext_Person_Link_Aggregate;
  /** fetch data from the table: "ext_person_link" using primary key columns */
  ext_person_link_by_pk?: Maybe<Ext_Person_Link>;
  /** fetch data from the table in a streaming manner: "ext_person_link" */
  ext_person_link_stream: Array<Ext_Person_Link>;
  /** fetch data from the table in a streaming manner: "ext_person" */
  ext_person_stream: Array<Ext_Person>;
  /** fetch data from the table: "ext_role" */
  ext_role: Array<Ext_Role>;
  /** fetch aggregated fields from the table: "ext_role" */
  ext_role_aggregate: Ext_Role_Aggregate;
  /** fetch data from the table: "ext_role" using primary key columns */
  ext_role_by_pk?: Maybe<Ext_Role>;
  /** fetch data from the table in a streaming manner: "ext_role" */
  ext_role_stream: Array<Ext_Role>;
  /** fetch data from the table: "ext_team" */
  ext_team: Array<Ext_Team>;
  /** fetch aggregated fields from the table: "ext_team" */
  ext_team_aggregate: Ext_Team_Aggregate;
  /** fetch data from the table: "ext_team" using primary key columns */
  ext_team_by_pk?: Maybe<Ext_Team>;
  /** fetch data from the table in a streaming manner: "ext_team" */
  ext_team_stream: Array<Ext_Team>;
  /** fetch data from the table: "ext_time_off" */
  ext_time_off: Array<Ext_Time_Off>;
  /** fetch aggregated fields from the table: "ext_time_off" */
  ext_time_off_aggregate: Ext_Time_Off_Aggregate;
  /** fetch data from the table: "ext_time_off" using primary key columns */
  ext_time_off_by_pk?: Maybe<Ext_Time_Off>;
  /** fetch data from the table: "ext_time_off_link" */
  ext_time_off_link: Array<Ext_Time_Off_Link>;
  /** fetch aggregated fields from the table: "ext_time_off_link" */
  ext_time_off_link_aggregate: Ext_Time_Off_Link_Aggregate;
  /** fetch data from the table: "ext_time_off_link" using primary key columns */
  ext_time_off_link_by_pk?: Maybe<Ext_Time_Off_Link>;
  /** fetch data from the table in a streaming manner: "ext_time_off_link" */
  ext_time_off_link_stream: Array<Ext_Time_Off_Link>;
  /** fetch data from the table in a streaming manner: "ext_time_off" */
  ext_time_off_stream: Array<Ext_Time_Off>;
  /** fetch data from the table: "features" */
  features: Array<Features>;
  /** An array relationship */
  features_accounts: Array<Features_Accounts>;
  /** An aggregate relationship */
  features_accounts_aggregate: Features_Accounts_Aggregate;
  /** fetch data from the table: "features_accounts" using primary key columns */
  features_accounts_by_pk?: Maybe<Features_Accounts>;
  /** fetch data from the table in a streaming manner: "features_accounts" */
  features_accounts_stream: Array<Features_Accounts>;
  /** fetch aggregated fields from the table: "features" */
  features_aggregate: Features_Aggregate;
  /** fetch data from the table: "features" using primary key columns */
  features_by_pk?: Maybe<Features>;
  /** fetch data from the table in a streaming manner: "features" */
  features_stream: Array<Features>;
  /** An array relationship */
  holidays: Array<Holidays>;
  /** An aggregate relationship */
  holidays_aggregate: Holidays_Aggregate;
  /** fetch data from the table: "holidays" using primary key columns */
  holidays_by_pk?: Maybe<Holidays>;
  /** An array relationship */
  holidays_groups: Array<Holidays_Groups>;
  /** An aggregate relationship */
  holidays_groups_aggregate: Holidays_Groups_Aggregate;
  /** fetch data from the table: "holidays_groups" using primary key columns */
  holidays_groups_by_pk?: Maybe<Holidays_Groups>;
  /** fetch data from the table in a streaming manner: "holidays_groups" */
  holidays_groups_stream: Array<Holidays_Groups>;
  /** fetch data from the table in a streaming manner: "holidays" */
  holidays_stream: Array<Holidays>;
  /** fetch data from the table: "integration" */
  integration: Array<Integration>;
  /** fetch aggregated fields from the table: "integration" */
  integration_aggregate: Integration_Aggregate;
  /** fetch data from the table: "integration" using primary key columns */
  integration_by_pk?: Maybe<Integration>;
  /** fetch data from the table: "integration_service" */
  integration_service: Array<Integration_Service>;
  /** fetch aggregated fields from the table: "integration_service" */
  integration_service_aggregate: Integration_Service_Aggregate;
  /** fetch data from the table: "integration_service" using primary key columns */
  integration_service_by_pk?: Maybe<Integration_Service>;
  /** fetch data from the table in a streaming manner: "integration_service" */
  integration_service_stream: Array<Integration_Service>;
  /** fetch data from the table in a streaming manner: "integration" */
  integration_stream: Array<Integration>;
  /** fetch data from the table: "integration_sync" */
  integration_sync: Array<Integration_Sync>;
  /** fetch data from the table: "integration_sync_action" */
  integration_sync_action: Array<Integration_Sync_Action>;
  /** fetch aggregated fields from the table: "integration_sync_action" */
  integration_sync_action_aggregate: Integration_Sync_Action_Aggregate;
  /** fetch data from the table: "integration_sync_action" using primary key columns */
  integration_sync_action_by_pk?: Maybe<Integration_Sync_Action>;
  /** fetch data from the table in a streaming manner: "integration_sync_action" */
  integration_sync_action_stream: Array<Integration_Sync_Action>;
  /** fetch aggregated fields from the table: "integration_sync" */
  integration_sync_aggregate: Integration_Sync_Aggregate;
  /** fetch data from the table: "integration_sync" using primary key columns */
  integration_sync_by_pk?: Maybe<Integration_Sync>;
  /** fetch data from the table in a streaming manner: "integration_sync" */
  integration_sync_stream: Array<Integration_Sync>;
  /** An array relationship */
  invitations: Array<Invitations>;
  /** An aggregate relationship */
  invitations_aggregate: Invitations_Aggregate;
  /** fetch data from the table: "invitations" using primary key columns */
  invitations_by_pk?: Maybe<Invitations>;
  /** fetch data from the table in a streaming manner: "invitations" */
  invitations_stream: Array<Invitations>;
  /** An array relationship */
  milestones: Array<Milestones>;
  /** An aggregate relationship */
  milestones_aggregate: Milestones_Aggregate;
  /** fetch data from the table: "milestones" using primary key columns */
  milestones_by_pk?: Maybe<Milestones>;
  /** fetch data from the table in a streaming manner: "milestones" */
  milestones_stream: Array<Milestones>;
  /** An array relationship */
  notes: Array<Notes>;
  /** An aggregate relationship */
  notes_aggregate: Notes_Aggregate;
  /** fetch data from the table: "notes" using primary key columns */
  notes_by_pk?: Maybe<Notes>;
  /** fetch data from the table in a streaming manner: "notes" */
  notes_stream: Array<Notes>;
  /** An array relationship */
  other_costs: Array<Other_Costs>;
  /** An aggregate relationship */
  other_costs_aggregate: Other_Costs_Aggregate;
  /** fetch data from the table: "other_costs" using primary key columns */
  other_costs_by_pk?: Maybe<Other_Costs>;
  /** fetch data from the table in a streaming manner: "other_costs" */
  other_costs_stream: Array<Other_Costs>;
  /** An array relationship */
  people: Array<People>;
  /** An aggregate relationship */
  people_aggregate: People_Aggregate;
  /** fetch data from the table: "people" using primary key columns */
  people_by_pk?: Maybe<People>;
  /** An array relationship */
  people_notes: Array<People_Notes>;
  /** An aggregate relationship */
  people_notes_aggregate: People_Notes_Aggregate;
  /** fetch data from the table: "people_notes" using primary key columns */
  people_notes_by_pk?: Maybe<People_Notes>;
  /** fetch data from the table in a streaming manner: "people_notes" */
  people_notes_stream: Array<People_Notes>;
  /** fetch data from the table in a streaming manner: "people" */
  people_stream: Array<People>;
  /** An array relationship */
  person_requests: Array<Person_Requests>;
  /** An aggregate relationship */
  person_requests_aggregate: Person_Requests_Aggregate;
  /** fetch data from the table: "person_requests" using primary key columns */
  person_requests_by_pk?: Maybe<Person_Requests>;
  /** fetch data from the table in a streaming manner: "person_requests" */
  person_requests_stream: Array<Person_Requests>;
  /** An array relationship */
  phases: Array<Phases>;
  /** An aggregate relationship */
  phases_aggregate: Phases_Aggregate;
  /** fetch data from the table: "phases" using primary key columns */
  phases_by_pk?: Maybe<Phases>;
  /** fetch data from the table in a streaming manner: "phases" */
  phases_stream: Array<Phases>;
  /** fetch data from the table: "project_editors" */
  project_editors: Array<Project_Editors>;
  /** fetch aggregated fields from the table: "project_editors" */
  project_editors_aggregate: Project_Editors_Aggregate;
  /** fetch data from the table: "project_editors" using primary key columns */
  project_editors_by_pk?: Maybe<Project_Editors>;
  /** fetch data from the table in a streaming manner: "project_editors" */
  project_editors_stream: Array<Project_Editors>;
  /** An array relationship */
  project_members: Array<Project_Members>;
  /** An aggregate relationship */
  project_members_aggregate: Project_Members_Aggregate;
  /** fetch data from the table: "project_members" using primary key columns */
  project_members_by_pk?: Maybe<Project_Members>;
  /** fetch data from the table in a streaming manner: "project_members" */
  project_members_stream: Array<Project_Members>;
  /** An array relationship */
  project_rates: Array<Project_Rates>;
  /** An aggregate relationship */
  project_rates_aggregate: Project_Rates_Aggregate;
  /** fetch data from the table: "project_rates" using primary key columns */
  project_rates_by_pk?: Maybe<Project_Rates>;
  /** fetch data from the table in a streaming manner: "project_rates" */
  project_rates_stream: Array<Project_Rates>;
  /** An array relationship */
  project_roles: Array<Project_Roles>;
  /** An aggregate relationship */
  project_roles_aggregate: Project_Roles_Aggregate;
  /** fetch data from the table: "project_roles" using primary key columns */
  project_roles_by_pk?: Maybe<Project_Roles>;
  /** fetch data from the table in a streaming manner: "project_roles" */
  project_roles_stream: Array<Project_Roles>;
  /** An array relationship */
  project_tags: Array<Project_Tags>;
  /** An aggregate relationship */
  project_tags_aggregate: Project_Tags_Aggregate;
  /** fetch data from the table: "project_tags" using primary key columns */
  project_tags_by_pk?: Maybe<Project_Tags>;
  /** fetch data from the table in a streaming manner: "project_tags" */
  project_tags_stream: Array<Project_Tags>;
  /** An array relationship */
  projects: Array<Projects>;
  /** An aggregate relationship */
  projects_aggregate: Projects_Aggregate;
  /** fetch data from the table: "projects" using primary key columns */
  projects_by_pk?: Maybe<Projects>;
  /** fetch data from the table in a streaming manner: "projects" */
  projects_stream: Array<Projects>;
  /** An array relationship */
  rate_cards: Array<Rate_Cards>;
  /** An aggregate relationship */
  rate_cards_aggregate: Rate_Cards_Aggregate;
  /** fetch data from the table: "rate_cards" using primary key columns */
  rate_cards_by_pk?: Maybe<Rate_Cards>;
  /** fetch data from the table in a streaming manner: "rate_cards" */
  rate_cards_stream: Array<Rate_Cards>;
  /** An array relationship */
  role_charge_out_rates: Array<Role_Charge_Out_Rates>;
  /** An aggregate relationship */
  role_charge_out_rates_aggregate: Role_Charge_Out_Rates_Aggregate;
  /** fetch data from the table: "role_charge_out_rates" using primary key columns */
  role_charge_out_rates_by_pk?: Maybe<Role_Charge_Out_Rates>;
  /** fetch data from the table in a streaming manner: "role_charge_out_rates" */
  role_charge_out_rates_stream: Array<Role_Charge_Out_Rates>;
  /** An array relationship */
  roles: Array<Roles>;
  /** An aggregate relationship */
  roles_aggregate: Roles_Aggregate;
  /** fetch data from the table: "roles" using primary key columns */
  roles_by_pk?: Maybe<Roles>;
  /** fetch data from the table in a streaming manner: "roles" */
  roles_stream: Array<Roles>;
  /** An array relationship */
  skills: Array<Skills>;
  /** An aggregate relationship */
  skills_aggregate: Skills_Aggregate;
  /** fetch data from the table: "skills" using primary key columns */
  skills_by_pk?: Maybe<Skills>;
  /** fetch data from the table in a streaming manner: "skills" */
  skills_stream: Array<Skills>;
  /** An array relationship */
  tags: Array<Tags>;
  /** An aggregate relationship */
  tags_aggregate: Tags_Aggregate;
  /** fetch data from the table: "tags" using primary key columns */
  tags_by_pk?: Maybe<Tags>;
  /** fetch data from the table in a streaming manner: "tags" */
  tags_stream: Array<Tags>;
  /** An array relationship */
  teams: Array<Teams>;
  /** An aggregate relationship */
  teams_aggregate: Teams_Aggregate;
  /** fetch data from the table: "teams" using primary key columns */
  teams_by_pk?: Maybe<Teams>;
  /** fetch data from the table in a streaming manner: "teams" */
  teams_stream: Array<Teams>;
  /** An array relationship */
  time_offs: Array<Time_Offs>;
  /** An aggregate relationship */
  time_offs_aggregate: Time_Offs_Aggregate;
  /** fetch data from the table: "time_offs" using primary key columns */
  time_offs_by_pk?: Maybe<Time_Offs>;
  /** fetch data from the table in a streaming manner: "time_offs" */
  time_offs_stream: Array<Time_Offs>;
  /** An array relationship */
  type_schedule_totals: Array<Type_Schedule_Totals>;
  /** An aggregate relationship */
  type_schedule_totals_aggregate: Type_Schedule_Totals_Aggregate;
  /** fetch data from the table: "type_schedule_totals" using primary key columns */
  type_schedule_totals_by_pk?: Maybe<Type_Schedule_Totals>;
  /** An array relationship */
  type_schedule_totals_roles: Array<Type_Schedule_Totals_Roles>;
  /** An aggregate relationship */
  type_schedule_totals_roles_aggregate: Type_Schedule_Totals_Roles_Aggregate;
  /** fetch data from the table: "type_schedule_totals_roles" using primary key columns */
  type_schedule_totals_roles_by_pk?: Maybe<Type_Schedule_Totals_Roles>;
  /** fetch data from the table in a streaming manner: "type_schedule_totals_roles" */
  type_schedule_totals_roles_stream: Array<Type_Schedule_Totals_Roles>;
  /** fetch data from the table in a streaming manner: "type_schedule_totals" */
  type_schedule_totals_stream: Array<Type_Schedule_Totals>;
  /** fetch data from the table: "user_filter_sets" */
  user_filter_sets: Array<User_Filter_Sets>;
  /** fetch aggregated fields from the table: "user_filter_sets" */
  user_filter_sets_aggregate: User_Filter_Sets_Aggregate;
  /** fetch data from the table: "user_filter_sets" using primary key columns */
  user_filter_sets_by_pk?: Maybe<User_Filter_Sets>;
  /** fetch data from the table in a streaming manner: "user_filter_sets" */
  user_filter_sets_stream: Array<User_Filter_Sets>;
  /** An array relationship */
  users: Array<Users>;
  /** An aggregate relationship */
  users_aggregate: Users_Aggregate;
  /** fetch data from the table: "users" using primary key columns */
  users_by_pk?: Maybe<Users>;
  /** fetch data from the table in a streaming manner: "users" */
  users_stream: Array<Users>;
  /** fetch data from the table: "v_summary_total" */
  v_summary_total: Array<V_Summary_Total>;
  /** fetch aggregated fields from the table: "v_summary_total" */
  v_summary_total_aggregate: V_Summary_Total_Aggregate;
  /** fetch data from the table in a streaming manner: "v_summary_total" */
  v_summary_total_stream: Array<V_Summary_Total>;
  /** An array relationship */
  views: Array<Views>;
  /** An aggregate relationship */
  views_aggregate: Views_Aggregate;
  /** fetch data from the table: "views" using primary key columns */
  views_by_pk?: Maybe<Views>;
  /** fetch data from the table in a streaming manner: "views" */
  views_stream: Array<Views>;
};


export type Subscription_RootAccountsArgs = {
  distinct_on?: InputMaybe<Array<Accounts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Accounts_Order_By>>;
  where?: InputMaybe<Accounts_Bool_Exp>;
};


export type Subscription_RootAccounts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Accounts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Accounts_Order_By>>;
  where?: InputMaybe<Accounts_Bool_Exp>;
};


export type Subscription_RootAccounts_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootAccounts_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Accounts_Stream_Cursor_Input>>;
  where?: InputMaybe<Accounts_Bool_Exp>;
};


export type Subscription_RootActualsArgs = {
  distinct_on?: InputMaybe<Array<Actuals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Actuals_Order_By>>;
  where?: InputMaybe<Actuals_Bool_Exp>;
};


export type Subscription_RootActuals_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Actuals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Actuals_Order_By>>;
  where?: InputMaybe<Actuals_Bool_Exp>;
};


export type Subscription_RootActuals_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootActuals_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Actuals_Stream_Cursor_Input>>;
  where?: InputMaybe<Actuals_Bool_Exp>;
};


export type Subscription_RootApi_TokensArgs = {
  distinct_on?: InputMaybe<Array<Api_Tokens_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Api_Tokens_Order_By>>;
  where?: InputMaybe<Api_Tokens_Bool_Exp>;
};


export type Subscription_RootApi_Tokens_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Api_Tokens_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Api_Tokens_Order_By>>;
  where?: InputMaybe<Api_Tokens_Bool_Exp>;
};


export type Subscription_RootApi_Tokens_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootApi_Tokens_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Api_Tokens_Stream_Cursor_Input>>;
  where?: InputMaybe<Api_Tokens_Bool_Exp>;
};


export type Subscription_RootAssignmentsArgs = {
  distinct_on?: InputMaybe<Array<Assignments_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Assignments_Order_By>>;
  where?: InputMaybe<Assignments_Bool_Exp>;
};


export type Subscription_RootAssignments_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Assignments_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Assignments_Order_By>>;
  where?: InputMaybe<Assignments_Bool_Exp>;
};


export type Subscription_RootAssignments_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootAssignments_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Assignments_Stream_Cursor_Input>>;
  where?: InputMaybe<Assignments_Bool_Exp>;
};


export type Subscription_RootAudit_Logged_ActionsArgs = {
  distinct_on?: InputMaybe<Array<Audit_Logged_Actions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Audit_Logged_Actions_Order_By>>;
  where?: InputMaybe<Audit_Logged_Actions_Bool_Exp>;
};


export type Subscription_RootAudit_Logged_Actions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Audit_Logged_Actions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Audit_Logged_Actions_Order_By>>;
  where?: InputMaybe<Audit_Logged_Actions_Bool_Exp>;
};


export type Subscription_RootAudit_Logged_Actions_By_PkArgs = {
  event_id: Scalars['bigint']['input'];
};


export type Subscription_RootAudit_Logged_Actions_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Audit_Logged_Actions_Stream_Cursor_Input>>;
  where?: InputMaybe<Audit_Logged_Actions_Bool_Exp>;
};


export type Subscription_RootAudit_Recently_Logged_ActionsArgs = {
  distinct_on?: InputMaybe<Array<Audit_Recently_Logged_Actions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Audit_Recently_Logged_Actions_Order_By>>;
  where?: InputMaybe<Audit_Recently_Logged_Actions_Bool_Exp>;
};


export type Subscription_RootAudit_Recently_Logged_Actions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Audit_Recently_Logged_Actions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Audit_Recently_Logged_Actions_Order_By>>;
  where?: InputMaybe<Audit_Recently_Logged_Actions_Bool_Exp>;
};


export type Subscription_RootAudit_Recently_Logged_Actions_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Audit_Recently_Logged_Actions_Stream_Cursor_Input>>;
  where?: InputMaybe<Audit_Recently_Logged_Actions_Bool_Exp>;
};


export type Subscription_RootCancel_ReasonsArgs = {
  distinct_on?: InputMaybe<Array<Cancel_Reasons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Cancel_Reasons_Order_By>>;
  where?: InputMaybe<Cancel_Reasons_Bool_Exp>;
};


export type Subscription_RootCancel_Reasons_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Cancel_Reasons_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Cancel_Reasons_Order_By>>;
  where?: InputMaybe<Cancel_Reasons_Bool_Exp>;
};


export type Subscription_RootCancel_Reasons_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootCancel_Reasons_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Cancel_Reasons_Stream_Cursor_Input>>;
  where?: InputMaybe<Cancel_Reasons_Bool_Exp>;
};


export type Subscription_RootClientsArgs = {
  distinct_on?: InputMaybe<Array<Clients_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Clients_Order_By>>;
  where?: InputMaybe<Clients_Bool_Exp>;
};


export type Subscription_RootClients_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Clients_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Clients_Order_By>>;
  where?: InputMaybe<Clients_Bool_Exp>;
};


export type Subscription_RootClients_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootClients_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Clients_Stream_Cursor_Input>>;
  where?: InputMaybe<Clients_Bool_Exp>;
};


export type Subscription_RootCompetenciesArgs = {
  distinct_on?: InputMaybe<Array<Competencies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Competencies_Order_By>>;
  where?: InputMaybe<Competencies_Bool_Exp>;
};


export type Subscription_RootCompetencies_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Competencies_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Competencies_Order_By>>;
  where?: InputMaybe<Competencies_Bool_Exp>;
};


export type Subscription_RootCompetencies_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootCompetencies_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Competencies_Stream_Cursor_Input>>;
  where?: InputMaybe<Competencies_Bool_Exp>;
};


export type Subscription_RootContractsArgs = {
  distinct_on?: InputMaybe<Array<Contracts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contracts_Order_By>>;
  where?: InputMaybe<Contracts_Bool_Exp>;
};


export type Subscription_RootContracts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Contracts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Contracts_Order_By>>;
  where?: InputMaybe<Contracts_Bool_Exp>;
};


export type Subscription_RootContracts_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootContracts_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Contracts_Stream_Cursor_Input>>;
  where?: InputMaybe<Contracts_Bool_Exp>;
};


export type Subscription_RootCurrent_UserArgs = {
  distinct_on?: InputMaybe<Array<Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Users_Order_By>>;
  where?: InputMaybe<Users_Bool_Exp>;
};


export type Subscription_RootCurrent_User_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Users_Order_By>>;
  where?: InputMaybe<Users_Bool_Exp>;
};


export type Subscription_RootCustom_Select_OptionsArgs = {
  distinct_on?: InputMaybe<Array<Custom_Select_Options_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Custom_Select_Options_Order_By>>;
  where?: InputMaybe<Custom_Select_Options_Bool_Exp>;
};


export type Subscription_RootCustom_Select_Options_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Custom_Select_Options_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Custom_Select_Options_Order_By>>;
  where?: InputMaybe<Custom_Select_Options_Bool_Exp>;
};


export type Subscription_RootCustom_Select_Options_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootCustom_Select_Options_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Custom_Select_Options_Stream_Cursor_Input>>;
  where?: InputMaybe<Custom_Select_Options_Bool_Exp>;
};


export type Subscription_RootCustom_Select_TypesArgs = {
  distinct_on?: InputMaybe<Array<Custom_Select_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Custom_Select_Types_Order_By>>;
  where?: InputMaybe<Custom_Select_Types_Bool_Exp>;
};


export type Subscription_RootCustom_Select_Types_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Custom_Select_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Custom_Select_Types_Order_By>>;
  where?: InputMaybe<Custom_Select_Types_Bool_Exp>;
};


export type Subscription_RootCustom_Select_Types_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootCustom_Select_Types_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Custom_Select_Types_Stream_Cursor_Input>>;
  where?: InputMaybe<Custom_Select_Types_Bool_Exp>;
};


export type Subscription_RootCustom_Select_ValuesArgs = {
  distinct_on?: InputMaybe<Array<Custom_Select_Values_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Custom_Select_Values_Order_By>>;
  where?: InputMaybe<Custom_Select_Values_Bool_Exp>;
};


export type Subscription_RootCustom_Select_Values_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Custom_Select_Values_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Custom_Select_Values_Order_By>>;
  where?: InputMaybe<Custom_Select_Values_Bool_Exp>;
};


export type Subscription_RootCustom_Select_Values_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootCustom_Select_Values_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Custom_Select_Values_Stream_Cursor_Input>>;
  where?: InputMaybe<Custom_Select_Values_Bool_Exp>;
};


export type Subscription_RootCustom_Text_TypesArgs = {
  distinct_on?: InputMaybe<Array<Custom_Text_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Custom_Text_Types_Order_By>>;
  where?: InputMaybe<Custom_Text_Types_Bool_Exp>;
};


export type Subscription_RootCustom_Text_Types_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Custom_Text_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Custom_Text_Types_Order_By>>;
  where?: InputMaybe<Custom_Text_Types_Bool_Exp>;
};


export type Subscription_RootCustom_Text_Types_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootCustom_Text_Types_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Custom_Text_Types_Stream_Cursor_Input>>;
  where?: InputMaybe<Custom_Text_Types_Bool_Exp>;
};


export type Subscription_RootCustom_Text_ValuesArgs = {
  distinct_on?: InputMaybe<Array<Custom_Text_Values_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Custom_Text_Values_Order_By>>;
  where?: InputMaybe<Custom_Text_Values_Bool_Exp>;
};


export type Subscription_RootCustom_Text_Values_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Custom_Text_Values_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Custom_Text_Values_Order_By>>;
  where?: InputMaybe<Custom_Text_Values_Bool_Exp>;
};


export type Subscription_RootCustom_Text_Values_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootCustom_Text_Values_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Custom_Text_Values_Stream_Cursor_Input>>;
  where?: InputMaybe<Custom_Text_Values_Bool_Exp>;
};


export type Subscription_RootExt_ContractArgs = {
  distinct_on?: InputMaybe<Array<Ext_Contract_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Contract_Order_By>>;
  where?: InputMaybe<Ext_Contract_Bool_Exp>;
};


export type Subscription_RootExt_Contract_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ext_Contract_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Contract_Order_By>>;
  where?: InputMaybe<Ext_Contract_Bool_Exp>;
};


export type Subscription_RootExt_Contract_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootExt_Contract_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Ext_Contract_Stream_Cursor_Input>>;
  where?: InputMaybe<Ext_Contract_Bool_Exp>;
};


export type Subscription_RootExt_PersonArgs = {
  distinct_on?: InputMaybe<Array<Ext_Person_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Person_Order_By>>;
  where?: InputMaybe<Ext_Person_Bool_Exp>;
};


export type Subscription_RootExt_Person_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ext_Person_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Person_Order_By>>;
  where?: InputMaybe<Ext_Person_Bool_Exp>;
};


export type Subscription_RootExt_Person_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootExt_Person_LinkArgs = {
  distinct_on?: InputMaybe<Array<Ext_Person_Link_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Person_Link_Order_By>>;
  where?: InputMaybe<Ext_Person_Link_Bool_Exp>;
};


export type Subscription_RootExt_Person_Link_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ext_Person_Link_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Person_Link_Order_By>>;
  where?: InputMaybe<Ext_Person_Link_Bool_Exp>;
};


export type Subscription_RootExt_Person_Link_By_PkArgs = {
  ext_person_id: Scalars['Int']['input'];
  person_id: Scalars['Int']['input'];
};


export type Subscription_RootExt_Person_Link_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Ext_Person_Link_Stream_Cursor_Input>>;
  where?: InputMaybe<Ext_Person_Link_Bool_Exp>;
};


export type Subscription_RootExt_Person_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Ext_Person_Stream_Cursor_Input>>;
  where?: InputMaybe<Ext_Person_Bool_Exp>;
};


export type Subscription_RootExt_RoleArgs = {
  distinct_on?: InputMaybe<Array<Ext_Role_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Role_Order_By>>;
  where?: InputMaybe<Ext_Role_Bool_Exp>;
};


export type Subscription_RootExt_Role_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ext_Role_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Role_Order_By>>;
  where?: InputMaybe<Ext_Role_Bool_Exp>;
};


export type Subscription_RootExt_Role_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootExt_Role_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Ext_Role_Stream_Cursor_Input>>;
  where?: InputMaybe<Ext_Role_Bool_Exp>;
};


export type Subscription_RootExt_TeamArgs = {
  distinct_on?: InputMaybe<Array<Ext_Team_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Team_Order_By>>;
  where?: InputMaybe<Ext_Team_Bool_Exp>;
};


export type Subscription_RootExt_Team_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ext_Team_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Team_Order_By>>;
  where?: InputMaybe<Ext_Team_Bool_Exp>;
};


export type Subscription_RootExt_Team_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootExt_Team_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Ext_Team_Stream_Cursor_Input>>;
  where?: InputMaybe<Ext_Team_Bool_Exp>;
};


export type Subscription_RootExt_Time_OffArgs = {
  distinct_on?: InputMaybe<Array<Ext_Time_Off_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Time_Off_Order_By>>;
  where?: InputMaybe<Ext_Time_Off_Bool_Exp>;
};


export type Subscription_RootExt_Time_Off_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ext_Time_Off_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Time_Off_Order_By>>;
  where?: InputMaybe<Ext_Time_Off_Bool_Exp>;
};


export type Subscription_RootExt_Time_Off_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootExt_Time_Off_LinkArgs = {
  distinct_on?: InputMaybe<Array<Ext_Time_Off_Link_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Time_Off_Link_Order_By>>;
  where?: InputMaybe<Ext_Time_Off_Link_Bool_Exp>;
};


export type Subscription_RootExt_Time_Off_Link_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ext_Time_Off_Link_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Time_Off_Link_Order_By>>;
  where?: InputMaybe<Ext_Time_Off_Link_Bool_Exp>;
};


export type Subscription_RootExt_Time_Off_Link_By_PkArgs = {
  ext_time_off_id: Scalars['Int']['input'];
  time_off_id: Scalars['Int']['input'];
};


export type Subscription_RootExt_Time_Off_Link_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Ext_Time_Off_Link_Stream_Cursor_Input>>;
  where?: InputMaybe<Ext_Time_Off_Link_Bool_Exp>;
};


export type Subscription_RootExt_Time_Off_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Ext_Time_Off_Stream_Cursor_Input>>;
  where?: InputMaybe<Ext_Time_Off_Bool_Exp>;
};


export type Subscription_RootFeaturesArgs = {
  distinct_on?: InputMaybe<Array<Features_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Features_Order_By>>;
  where?: InputMaybe<Features_Bool_Exp>;
};


export type Subscription_RootFeatures_AccountsArgs = {
  distinct_on?: InputMaybe<Array<Features_Accounts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Features_Accounts_Order_By>>;
  where?: InputMaybe<Features_Accounts_Bool_Exp>;
};


export type Subscription_RootFeatures_Accounts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Features_Accounts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Features_Accounts_Order_By>>;
  where?: InputMaybe<Features_Accounts_Bool_Exp>;
};


export type Subscription_RootFeatures_Accounts_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootFeatures_Accounts_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Features_Accounts_Stream_Cursor_Input>>;
  where?: InputMaybe<Features_Accounts_Bool_Exp>;
};


export type Subscription_RootFeatures_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Features_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Features_Order_By>>;
  where?: InputMaybe<Features_Bool_Exp>;
};


export type Subscription_RootFeatures_By_PkArgs = {
  id: Scalars['String']['input'];
};


export type Subscription_RootFeatures_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Features_Stream_Cursor_Input>>;
  where?: InputMaybe<Features_Bool_Exp>;
};


export type Subscription_RootHolidaysArgs = {
  distinct_on?: InputMaybe<Array<Holidays_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Holidays_Order_By>>;
  where?: InputMaybe<Holidays_Bool_Exp>;
};


export type Subscription_RootHolidays_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Holidays_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Holidays_Order_By>>;
  where?: InputMaybe<Holidays_Bool_Exp>;
};


export type Subscription_RootHolidays_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootHolidays_GroupsArgs = {
  distinct_on?: InputMaybe<Array<Holidays_Groups_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Holidays_Groups_Order_By>>;
  where?: InputMaybe<Holidays_Groups_Bool_Exp>;
};


export type Subscription_RootHolidays_Groups_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Holidays_Groups_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Holidays_Groups_Order_By>>;
  where?: InputMaybe<Holidays_Groups_Bool_Exp>;
};


export type Subscription_RootHolidays_Groups_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootHolidays_Groups_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Holidays_Groups_Stream_Cursor_Input>>;
  where?: InputMaybe<Holidays_Groups_Bool_Exp>;
};


export type Subscription_RootHolidays_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Holidays_Stream_Cursor_Input>>;
  where?: InputMaybe<Holidays_Bool_Exp>;
};


export type Subscription_RootIntegrationArgs = {
  distinct_on?: InputMaybe<Array<Integration_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Integration_Order_By>>;
  where?: InputMaybe<Integration_Bool_Exp>;
};


export type Subscription_RootIntegration_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Integration_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Integration_Order_By>>;
  where?: InputMaybe<Integration_Bool_Exp>;
};


export type Subscription_RootIntegration_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootIntegration_ServiceArgs = {
  distinct_on?: InputMaybe<Array<Integration_Service_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Integration_Service_Order_By>>;
  where?: InputMaybe<Integration_Service_Bool_Exp>;
};


export type Subscription_RootIntegration_Service_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Integration_Service_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Integration_Service_Order_By>>;
  where?: InputMaybe<Integration_Service_Bool_Exp>;
};


export type Subscription_RootIntegration_Service_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootIntegration_Service_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Integration_Service_Stream_Cursor_Input>>;
  where?: InputMaybe<Integration_Service_Bool_Exp>;
};


export type Subscription_RootIntegration_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Integration_Stream_Cursor_Input>>;
  where?: InputMaybe<Integration_Bool_Exp>;
};


export type Subscription_RootIntegration_SyncArgs = {
  distinct_on?: InputMaybe<Array<Integration_Sync_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Integration_Sync_Order_By>>;
  where?: InputMaybe<Integration_Sync_Bool_Exp>;
};


export type Subscription_RootIntegration_Sync_ActionArgs = {
  distinct_on?: InputMaybe<Array<Integration_Sync_Action_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Integration_Sync_Action_Order_By>>;
  where?: InputMaybe<Integration_Sync_Action_Bool_Exp>;
};


export type Subscription_RootIntegration_Sync_Action_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Integration_Sync_Action_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Integration_Sync_Action_Order_By>>;
  where?: InputMaybe<Integration_Sync_Action_Bool_Exp>;
};


export type Subscription_RootIntegration_Sync_Action_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootIntegration_Sync_Action_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Integration_Sync_Action_Stream_Cursor_Input>>;
  where?: InputMaybe<Integration_Sync_Action_Bool_Exp>;
};


export type Subscription_RootIntegration_Sync_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Integration_Sync_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Integration_Sync_Order_By>>;
  where?: InputMaybe<Integration_Sync_Bool_Exp>;
};


export type Subscription_RootIntegration_Sync_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootIntegration_Sync_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Integration_Sync_Stream_Cursor_Input>>;
  where?: InputMaybe<Integration_Sync_Bool_Exp>;
};


export type Subscription_RootInvitationsArgs = {
  distinct_on?: InputMaybe<Array<Invitations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Invitations_Order_By>>;
  where?: InputMaybe<Invitations_Bool_Exp>;
};


export type Subscription_RootInvitations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Invitations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Invitations_Order_By>>;
  where?: InputMaybe<Invitations_Bool_Exp>;
};


export type Subscription_RootInvitations_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootInvitations_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Invitations_Stream_Cursor_Input>>;
  where?: InputMaybe<Invitations_Bool_Exp>;
};


export type Subscription_RootMilestonesArgs = {
  distinct_on?: InputMaybe<Array<Milestones_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Milestones_Order_By>>;
  where?: InputMaybe<Milestones_Bool_Exp>;
};


export type Subscription_RootMilestones_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Milestones_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Milestones_Order_By>>;
  where?: InputMaybe<Milestones_Bool_Exp>;
};


export type Subscription_RootMilestones_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootMilestones_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Milestones_Stream_Cursor_Input>>;
  where?: InputMaybe<Milestones_Bool_Exp>;
};


export type Subscription_RootNotesArgs = {
  distinct_on?: InputMaybe<Array<Notes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Notes_Order_By>>;
  where?: InputMaybe<Notes_Bool_Exp>;
};


export type Subscription_RootNotes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Notes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Notes_Order_By>>;
  where?: InputMaybe<Notes_Bool_Exp>;
};


export type Subscription_RootNotes_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootNotes_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Notes_Stream_Cursor_Input>>;
  where?: InputMaybe<Notes_Bool_Exp>;
};


export type Subscription_RootOther_CostsArgs = {
  distinct_on?: InputMaybe<Array<Other_Costs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Other_Costs_Order_By>>;
  where?: InputMaybe<Other_Costs_Bool_Exp>;
};


export type Subscription_RootOther_Costs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Other_Costs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Other_Costs_Order_By>>;
  where?: InputMaybe<Other_Costs_Bool_Exp>;
};


export type Subscription_RootOther_Costs_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootOther_Costs_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Other_Costs_Stream_Cursor_Input>>;
  where?: InputMaybe<Other_Costs_Bool_Exp>;
};


export type Subscription_RootPeopleArgs = {
  distinct_on?: InputMaybe<Array<People_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<People_Order_By>>;
  where?: InputMaybe<People_Bool_Exp>;
};


export type Subscription_RootPeople_AggregateArgs = {
  distinct_on?: InputMaybe<Array<People_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<People_Order_By>>;
  where?: InputMaybe<People_Bool_Exp>;
};


export type Subscription_RootPeople_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPeople_NotesArgs = {
  distinct_on?: InputMaybe<Array<People_Notes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<People_Notes_Order_By>>;
  where?: InputMaybe<People_Notes_Bool_Exp>;
};


export type Subscription_RootPeople_Notes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<People_Notes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<People_Notes_Order_By>>;
  where?: InputMaybe<People_Notes_Bool_Exp>;
};


export type Subscription_RootPeople_Notes_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPeople_Notes_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<People_Notes_Stream_Cursor_Input>>;
  where?: InputMaybe<People_Notes_Bool_Exp>;
};


export type Subscription_RootPeople_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<People_Stream_Cursor_Input>>;
  where?: InputMaybe<People_Bool_Exp>;
};


export type Subscription_RootPerson_RequestsArgs = {
  distinct_on?: InputMaybe<Array<Person_Requests_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Person_Requests_Order_By>>;
  where?: InputMaybe<Person_Requests_Bool_Exp>;
};


export type Subscription_RootPerson_Requests_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Person_Requests_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Person_Requests_Order_By>>;
  where?: InputMaybe<Person_Requests_Bool_Exp>;
};


export type Subscription_RootPerson_Requests_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPerson_Requests_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Person_Requests_Stream_Cursor_Input>>;
  where?: InputMaybe<Person_Requests_Bool_Exp>;
};


export type Subscription_RootPhasesArgs = {
  distinct_on?: InputMaybe<Array<Phases_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Phases_Order_By>>;
  where?: InputMaybe<Phases_Bool_Exp>;
};


export type Subscription_RootPhases_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Phases_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Phases_Order_By>>;
  where?: InputMaybe<Phases_Bool_Exp>;
};


export type Subscription_RootPhases_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootPhases_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Phases_Stream_Cursor_Input>>;
  where?: InputMaybe<Phases_Bool_Exp>;
};


export type Subscription_RootProject_EditorsArgs = {
  distinct_on?: InputMaybe<Array<Project_Editors_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Editors_Order_By>>;
  where?: InputMaybe<Project_Editors_Bool_Exp>;
};


export type Subscription_RootProject_Editors_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Project_Editors_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Editors_Order_By>>;
  where?: InputMaybe<Project_Editors_Bool_Exp>;
};


export type Subscription_RootProject_Editors_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootProject_Editors_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Project_Editors_Stream_Cursor_Input>>;
  where?: InputMaybe<Project_Editors_Bool_Exp>;
};


export type Subscription_RootProject_MembersArgs = {
  distinct_on?: InputMaybe<Array<Project_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Members_Order_By>>;
  where?: InputMaybe<Project_Members_Bool_Exp>;
};


export type Subscription_RootProject_Members_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Project_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Members_Order_By>>;
  where?: InputMaybe<Project_Members_Bool_Exp>;
};


export type Subscription_RootProject_Members_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootProject_Members_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Project_Members_Stream_Cursor_Input>>;
  where?: InputMaybe<Project_Members_Bool_Exp>;
};


export type Subscription_RootProject_RatesArgs = {
  distinct_on?: InputMaybe<Array<Project_Rates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Rates_Order_By>>;
  where?: InputMaybe<Project_Rates_Bool_Exp>;
};


export type Subscription_RootProject_Rates_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Project_Rates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Rates_Order_By>>;
  where?: InputMaybe<Project_Rates_Bool_Exp>;
};


export type Subscription_RootProject_Rates_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootProject_Rates_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Project_Rates_Stream_Cursor_Input>>;
  where?: InputMaybe<Project_Rates_Bool_Exp>;
};


export type Subscription_RootProject_RolesArgs = {
  distinct_on?: InputMaybe<Array<Project_Roles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Roles_Order_By>>;
  where?: InputMaybe<Project_Roles_Bool_Exp>;
};


export type Subscription_RootProject_Roles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Project_Roles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Roles_Order_By>>;
  where?: InputMaybe<Project_Roles_Bool_Exp>;
};


export type Subscription_RootProject_Roles_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootProject_Roles_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Project_Roles_Stream_Cursor_Input>>;
  where?: InputMaybe<Project_Roles_Bool_Exp>;
};


export type Subscription_RootProject_TagsArgs = {
  distinct_on?: InputMaybe<Array<Project_Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Tags_Order_By>>;
  where?: InputMaybe<Project_Tags_Bool_Exp>;
};


export type Subscription_RootProject_Tags_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Project_Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Tags_Order_By>>;
  where?: InputMaybe<Project_Tags_Bool_Exp>;
};


export type Subscription_RootProject_Tags_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootProject_Tags_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Project_Tags_Stream_Cursor_Input>>;
  where?: InputMaybe<Project_Tags_Bool_Exp>;
};


export type Subscription_RootProjectsArgs = {
  distinct_on?: InputMaybe<Array<Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Projects_Order_By>>;
  where?: InputMaybe<Projects_Bool_Exp>;
};


export type Subscription_RootProjects_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Projects_Order_By>>;
  where?: InputMaybe<Projects_Bool_Exp>;
};


export type Subscription_RootProjects_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootProjects_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Projects_Stream_Cursor_Input>>;
  where?: InputMaybe<Projects_Bool_Exp>;
};


export type Subscription_RootRate_CardsArgs = {
  distinct_on?: InputMaybe<Array<Rate_Cards_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Rate_Cards_Order_By>>;
  where?: InputMaybe<Rate_Cards_Bool_Exp>;
};


export type Subscription_RootRate_Cards_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Rate_Cards_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Rate_Cards_Order_By>>;
  where?: InputMaybe<Rate_Cards_Bool_Exp>;
};


export type Subscription_RootRate_Cards_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootRate_Cards_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Rate_Cards_Stream_Cursor_Input>>;
  where?: InputMaybe<Rate_Cards_Bool_Exp>;
};


export type Subscription_RootRole_Charge_Out_RatesArgs = {
  distinct_on?: InputMaybe<Array<Role_Charge_Out_Rates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Role_Charge_Out_Rates_Order_By>>;
  where?: InputMaybe<Role_Charge_Out_Rates_Bool_Exp>;
};


export type Subscription_RootRole_Charge_Out_Rates_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Role_Charge_Out_Rates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Role_Charge_Out_Rates_Order_By>>;
  where?: InputMaybe<Role_Charge_Out_Rates_Bool_Exp>;
};


export type Subscription_RootRole_Charge_Out_Rates_By_PkArgs = {
  rate_card_id: Scalars['Int']['input'];
  role_id: Scalars['Int']['input'];
};


export type Subscription_RootRole_Charge_Out_Rates_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Role_Charge_Out_Rates_Stream_Cursor_Input>>;
  where?: InputMaybe<Role_Charge_Out_Rates_Bool_Exp>;
};


export type Subscription_RootRolesArgs = {
  distinct_on?: InputMaybe<Array<Roles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Roles_Order_By>>;
  where?: InputMaybe<Roles_Bool_Exp>;
};


export type Subscription_RootRoles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Roles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Roles_Order_By>>;
  where?: InputMaybe<Roles_Bool_Exp>;
};


export type Subscription_RootRoles_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootRoles_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Roles_Stream_Cursor_Input>>;
  where?: InputMaybe<Roles_Bool_Exp>;
};


export type Subscription_RootSkillsArgs = {
  distinct_on?: InputMaybe<Array<Skills_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Skills_Order_By>>;
  where?: InputMaybe<Skills_Bool_Exp>;
};


export type Subscription_RootSkills_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Skills_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Skills_Order_By>>;
  where?: InputMaybe<Skills_Bool_Exp>;
};


export type Subscription_RootSkills_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootSkills_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Skills_Stream_Cursor_Input>>;
  where?: InputMaybe<Skills_Bool_Exp>;
};


export type Subscription_RootTagsArgs = {
  distinct_on?: InputMaybe<Array<Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Tags_Order_By>>;
  where?: InputMaybe<Tags_Bool_Exp>;
};


export type Subscription_RootTags_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Tags_Order_By>>;
  where?: InputMaybe<Tags_Bool_Exp>;
};


export type Subscription_RootTags_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootTags_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Tags_Stream_Cursor_Input>>;
  where?: InputMaybe<Tags_Bool_Exp>;
};


export type Subscription_RootTeamsArgs = {
  distinct_on?: InputMaybe<Array<Teams_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Teams_Order_By>>;
  where?: InputMaybe<Teams_Bool_Exp>;
};


export type Subscription_RootTeams_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Teams_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Teams_Order_By>>;
  where?: InputMaybe<Teams_Bool_Exp>;
};


export type Subscription_RootTeams_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootTeams_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Teams_Stream_Cursor_Input>>;
  where?: InputMaybe<Teams_Bool_Exp>;
};


export type Subscription_RootTime_OffsArgs = {
  distinct_on?: InputMaybe<Array<Time_Offs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Time_Offs_Order_By>>;
  where?: InputMaybe<Time_Offs_Bool_Exp>;
};


export type Subscription_RootTime_Offs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Time_Offs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Time_Offs_Order_By>>;
  where?: InputMaybe<Time_Offs_Bool_Exp>;
};


export type Subscription_RootTime_Offs_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootTime_Offs_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Time_Offs_Stream_Cursor_Input>>;
  where?: InputMaybe<Time_Offs_Bool_Exp>;
};


export type Subscription_RootType_Schedule_TotalsArgs = {
  distinct_on?: InputMaybe<Array<Type_Schedule_Totals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Type_Schedule_Totals_Order_By>>;
  where?: InputMaybe<Type_Schedule_Totals_Bool_Exp>;
};


export type Subscription_RootType_Schedule_Totals_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Type_Schedule_Totals_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Type_Schedule_Totals_Order_By>>;
  where?: InputMaybe<Type_Schedule_Totals_Bool_Exp>;
};


export type Subscription_RootType_Schedule_Totals_By_PkArgs = {
  project_id: Scalars['Int']['input'];
};


export type Subscription_RootType_Schedule_Totals_RolesArgs = {
  distinct_on?: InputMaybe<Array<Type_Schedule_Totals_Roles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Type_Schedule_Totals_Roles_Order_By>>;
  where?: InputMaybe<Type_Schedule_Totals_Roles_Bool_Exp>;
};


export type Subscription_RootType_Schedule_Totals_Roles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Type_Schedule_Totals_Roles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Type_Schedule_Totals_Roles_Order_By>>;
  where?: InputMaybe<Type_Schedule_Totals_Roles_Bool_Exp>;
};


export type Subscription_RootType_Schedule_Totals_Roles_By_PkArgs = {
  project_id: Scalars['Int']['input'];
  role_id: Scalars['Int']['input'];
};


export type Subscription_RootType_Schedule_Totals_Roles_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Type_Schedule_Totals_Roles_Stream_Cursor_Input>>;
  where?: InputMaybe<Type_Schedule_Totals_Roles_Bool_Exp>;
};


export type Subscription_RootType_Schedule_Totals_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Type_Schedule_Totals_Stream_Cursor_Input>>;
  where?: InputMaybe<Type_Schedule_Totals_Bool_Exp>;
};


export type Subscription_RootUser_Filter_SetsArgs = {
  distinct_on?: InputMaybe<Array<User_Filter_Sets_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Filter_Sets_Order_By>>;
  where?: InputMaybe<User_Filter_Sets_Bool_Exp>;
};


export type Subscription_RootUser_Filter_Sets_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Filter_Sets_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Filter_Sets_Order_By>>;
  where?: InputMaybe<User_Filter_Sets_Bool_Exp>;
};


export type Subscription_RootUser_Filter_Sets_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootUser_Filter_Sets_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<User_Filter_Sets_Stream_Cursor_Input>>;
  where?: InputMaybe<User_Filter_Sets_Bool_Exp>;
};


export type Subscription_RootUsersArgs = {
  distinct_on?: InputMaybe<Array<Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Users_Order_By>>;
  where?: InputMaybe<Users_Bool_Exp>;
};


export type Subscription_RootUsers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Users_Order_By>>;
  where?: InputMaybe<Users_Bool_Exp>;
};


export type Subscription_RootUsers_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootUsers_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Users_Stream_Cursor_Input>>;
  where?: InputMaybe<Users_Bool_Exp>;
};


export type Subscription_RootV_Summary_TotalArgs = {
  distinct_on?: InputMaybe<Array<V_Summary_Total_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<V_Summary_Total_Order_By>>;
  where?: InputMaybe<V_Summary_Total_Bool_Exp>;
};


export type Subscription_RootV_Summary_Total_AggregateArgs = {
  distinct_on?: InputMaybe<Array<V_Summary_Total_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<V_Summary_Total_Order_By>>;
  where?: InputMaybe<V_Summary_Total_Bool_Exp>;
};


export type Subscription_RootV_Summary_Total_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<V_Summary_Total_Stream_Cursor_Input>>;
  where?: InputMaybe<V_Summary_Total_Bool_Exp>;
};


export type Subscription_RootViewsArgs = {
  distinct_on?: InputMaybe<Array<Views_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Views_Order_By>>;
  where?: InputMaybe<Views_Bool_Exp>;
};


export type Subscription_RootViews_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Views_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Views_Order_By>>;
  where?: InputMaybe<Views_Bool_Exp>;
};


export type Subscription_RootViews_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootViews_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Views_Stream_Cursor_Input>>;
  where?: InputMaybe<Views_Bool_Exp>;
};

/** columns and relationships of "tags" */
export type Tags = {
  __typename?: 'tags';
  /** An object relationship */
  account: Accounts;
  account_id: Scalars['Int']['output'];
  archived: Scalars['Boolean']['output'];
  created_at: Scalars['timestamp']['output'];
  id: Scalars['Int']['output'];
  model: Scalars['String']['output'];
  name: Scalars['String']['output'];
  updated_at: Scalars['timestamp']['output'];
};

/** aggregated selection of "tags" */
export type Tags_Aggregate = {
  __typename?: 'tags_aggregate';
  aggregate?: Maybe<Tags_Aggregate_Fields>;
  nodes: Array<Tags>;
};

export type Tags_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Tags_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Tags_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Tags_Aggregate_Bool_Exp_Count>;
};

export type Tags_Aggregate_Bool_Exp_Bool_And = {
  arguments: Tags_Select_Column_Tags_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Tags_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Tags_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Tags_Select_Column_Tags_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Tags_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Tags_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Tags_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Tags_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "tags" */
export type Tags_Aggregate_Fields = {
  __typename?: 'tags_aggregate_fields';
  avg?: Maybe<Tags_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Tags_Max_Fields>;
  min?: Maybe<Tags_Min_Fields>;
  stddev?: Maybe<Tags_Stddev_Fields>;
  stddev_pop?: Maybe<Tags_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Tags_Stddev_Samp_Fields>;
  sum?: Maybe<Tags_Sum_Fields>;
  var_pop?: Maybe<Tags_Var_Pop_Fields>;
  var_samp?: Maybe<Tags_Var_Samp_Fields>;
  variance?: Maybe<Tags_Variance_Fields>;
};


/** aggregate fields of "tags" */
export type Tags_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Tags_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "tags" */
export type Tags_Aggregate_Order_By = {
  avg?: InputMaybe<Tags_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Tags_Max_Order_By>;
  min?: InputMaybe<Tags_Min_Order_By>;
  stddev?: InputMaybe<Tags_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Tags_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Tags_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Tags_Sum_Order_By>;
  var_pop?: InputMaybe<Tags_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Tags_Var_Samp_Order_By>;
  variance?: InputMaybe<Tags_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "tags" */
export type Tags_Arr_Rel_Insert_Input = {
  data: Array<Tags_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Tags_On_Conflict>;
};

/** aggregate avg on columns */
export type Tags_Avg_Fields = {
  __typename?: 'tags_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "tags" */
export type Tags_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "tags". All fields are combined with a logical 'AND'. */
export type Tags_Bool_Exp = {
  _and?: InputMaybe<Array<Tags_Bool_Exp>>;
  _not?: InputMaybe<Tags_Bool_Exp>;
  _or?: InputMaybe<Array<Tags_Bool_Exp>>;
  account?: InputMaybe<Accounts_Bool_Exp>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  archived?: InputMaybe<Boolean_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  model?: InputMaybe<String_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "tags" */
export enum Tags_Constraint {
  /** unique or primary key constraint on columns "account_id", "model", "name" */
  IndexTagsOnNameAndModelAndAccountId = 'index_tags_on_name_and_model_and_account_id',
  /** unique or primary key constraint on columns "account_id", "id" */
  IndexUniqueTagsIdAccountId = 'index_unique_tags_id_account_id',
  /** unique or primary key constraint on columns "id" */
  TagsPkey = 'tags_pkey'
}

/** input type for incrementing numeric columns in table "tags" */
export type Tags_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "tags" */
export type Tags_Insert_Input = {
  account?: InputMaybe<Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['Int']['input']>;
  archived?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  model?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Tags_Max_Fields = {
  __typename?: 'tags_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  model?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "tags" */
export type Tags_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  model?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Tags_Min_Fields = {
  __typename?: 'tags_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  model?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "tags" */
export type Tags_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  model?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "tags" */
export type Tags_Mutation_Response = {
  __typename?: 'tags_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Tags>;
};

/** input type for inserting object relation for remote table "tags" */
export type Tags_Obj_Rel_Insert_Input = {
  data: Tags_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Tags_On_Conflict>;
};

/** on_conflict condition type for table "tags" */
export type Tags_On_Conflict = {
  constraint: Tags_Constraint;
  update_columns?: Array<Tags_Update_Column>;
  where?: InputMaybe<Tags_Bool_Exp>;
};

/** Ordering options when selecting data from "tags". */
export type Tags_Order_By = {
  account?: InputMaybe<Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  archived?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  model?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: tags */
export type Tags_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "tags" */
export enum Tags_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Archived = 'archived',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Model = 'model',
  /** column name */
  Name = 'name',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** select "tags_aggregate_bool_exp_bool_and_arguments_columns" columns of table "tags" */
export enum Tags_Select_Column_Tags_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  Archived = 'archived'
}

/** select "tags_aggregate_bool_exp_bool_or_arguments_columns" columns of table "tags" */
export enum Tags_Select_Column_Tags_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  Archived = 'archived'
}

/** input type for updating data in table "tags" */
export type Tags_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  archived?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  model?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Tags_Stddev_Fields = {
  __typename?: 'tags_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "tags" */
export type Tags_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Tags_Stddev_Pop_Fields = {
  __typename?: 'tags_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "tags" */
export type Tags_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Tags_Stddev_Samp_Fields = {
  __typename?: 'tags_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "tags" */
export type Tags_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "tags" */
export type Tags_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Tags_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Tags_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  archived?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  model?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Tags_Sum_Fields = {
  __typename?: 'tags_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "tags" */
export type Tags_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "tags" */
export enum Tags_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  Archived = 'archived',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Model = 'model',
  /** column name */
  Name = 'name',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Tags_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Tags_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Tags_Set_Input>;
  /** filter the rows which have to be updated */
  where: Tags_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Tags_Var_Pop_Fields = {
  __typename?: 'tags_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "tags" */
export type Tags_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Tags_Var_Samp_Fields = {
  __typename?: 'tags_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "tags" */
export type Tags_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Tags_Variance_Fields = {
  __typename?: 'tags_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "tags" */
export type Tags_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "teams" */
export type Teams = {
  __typename?: 'teams';
  /** An object relationship */
  account: Accounts;
  account_id: Scalars['Int']['output'];
  created_at: Scalars['timestamp']['output'];
  id: Scalars['Int']['output'];
  name?: Maybe<Scalars['String']['output']>;
  /** An array relationship */
  people: Array<People>;
  /** An aggregate relationship */
  people_aggregate: People_Aggregate;
  /** An array relationship */
  projects: Array<Projects>;
  /** An aggregate relationship */
  projects_aggregate: Projects_Aggregate;
  updated_at: Scalars['timestamp']['output'];
};


/** columns and relationships of "teams" */
export type TeamsPeopleArgs = {
  distinct_on?: InputMaybe<Array<People_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<People_Order_By>>;
  where?: InputMaybe<People_Bool_Exp>;
};


/** columns and relationships of "teams" */
export type TeamsPeople_AggregateArgs = {
  distinct_on?: InputMaybe<Array<People_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<People_Order_By>>;
  where?: InputMaybe<People_Bool_Exp>;
};


/** columns and relationships of "teams" */
export type TeamsProjectsArgs = {
  distinct_on?: InputMaybe<Array<Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Projects_Order_By>>;
  where?: InputMaybe<Projects_Bool_Exp>;
};


/** columns and relationships of "teams" */
export type TeamsProjects_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Projects_Order_By>>;
  where?: InputMaybe<Projects_Bool_Exp>;
};

/** aggregated selection of "teams" */
export type Teams_Aggregate = {
  __typename?: 'teams_aggregate';
  aggregate?: Maybe<Teams_Aggregate_Fields>;
  nodes: Array<Teams>;
};

export type Teams_Aggregate_Bool_Exp = {
  count?: InputMaybe<Teams_Aggregate_Bool_Exp_Count>;
};

export type Teams_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Teams_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Teams_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "teams" */
export type Teams_Aggregate_Fields = {
  __typename?: 'teams_aggregate_fields';
  avg?: Maybe<Teams_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Teams_Max_Fields>;
  min?: Maybe<Teams_Min_Fields>;
  stddev?: Maybe<Teams_Stddev_Fields>;
  stddev_pop?: Maybe<Teams_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Teams_Stddev_Samp_Fields>;
  sum?: Maybe<Teams_Sum_Fields>;
  var_pop?: Maybe<Teams_Var_Pop_Fields>;
  var_samp?: Maybe<Teams_Var_Samp_Fields>;
  variance?: Maybe<Teams_Variance_Fields>;
};


/** aggregate fields of "teams" */
export type Teams_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Teams_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "teams" */
export type Teams_Aggregate_Order_By = {
  avg?: InputMaybe<Teams_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Teams_Max_Order_By>;
  min?: InputMaybe<Teams_Min_Order_By>;
  stddev?: InputMaybe<Teams_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Teams_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Teams_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Teams_Sum_Order_By>;
  var_pop?: InputMaybe<Teams_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Teams_Var_Samp_Order_By>;
  variance?: InputMaybe<Teams_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "teams" */
export type Teams_Arr_Rel_Insert_Input = {
  data: Array<Teams_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Teams_On_Conflict>;
};

/** aggregate avg on columns */
export type Teams_Avg_Fields = {
  __typename?: 'teams_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "teams" */
export type Teams_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "teams". All fields are combined with a logical 'AND'. */
export type Teams_Bool_Exp = {
  _and?: InputMaybe<Array<Teams_Bool_Exp>>;
  _not?: InputMaybe<Teams_Bool_Exp>;
  _or?: InputMaybe<Array<Teams_Bool_Exp>>;
  account?: InputMaybe<Accounts_Bool_Exp>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  people?: InputMaybe<People_Bool_Exp>;
  people_aggregate?: InputMaybe<People_Aggregate_Bool_Exp>;
  projects?: InputMaybe<Projects_Bool_Exp>;
  projects_aggregate?: InputMaybe<Projects_Aggregate_Bool_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "teams" */
export enum Teams_Constraint {
  /** unique or primary key constraint on columns "account_id", "id" */
  IndexUniqueTeamsIdAccountId = 'index_unique_teams_id_account_id',
  /** unique or primary key constraint on columns "id" */
  TeamsPkey = 'teams_pkey'
}

/** input type for incrementing numeric columns in table "teams" */
export type Teams_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "teams" */
export type Teams_Insert_Input = {
  account?: InputMaybe<Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  people?: InputMaybe<People_Arr_Rel_Insert_Input>;
  projects?: InputMaybe<Projects_Arr_Rel_Insert_Input>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Teams_Max_Fields = {
  __typename?: 'teams_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "teams" */
export type Teams_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Teams_Min_Fields = {
  __typename?: 'teams_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "teams" */
export type Teams_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "teams" */
export type Teams_Mutation_Response = {
  __typename?: 'teams_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Teams>;
};

/** input type for inserting object relation for remote table "teams" */
export type Teams_Obj_Rel_Insert_Input = {
  data: Teams_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Teams_On_Conflict>;
};

/** on_conflict condition type for table "teams" */
export type Teams_On_Conflict = {
  constraint: Teams_Constraint;
  update_columns?: Array<Teams_Update_Column>;
  where?: InputMaybe<Teams_Bool_Exp>;
};

/** Ordering options when selecting data from "teams". */
export type Teams_Order_By = {
  account?: InputMaybe<Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  people_aggregate?: InputMaybe<People_Aggregate_Order_By>;
  projects_aggregate?: InputMaybe<Projects_Aggregate_Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: teams */
export type Teams_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "teams" */
export enum Teams_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "teams" */
export type Teams_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Teams_Stddev_Fields = {
  __typename?: 'teams_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "teams" */
export type Teams_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Teams_Stddev_Pop_Fields = {
  __typename?: 'teams_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "teams" */
export type Teams_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Teams_Stddev_Samp_Fields = {
  __typename?: 'teams_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "teams" */
export type Teams_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "teams" */
export type Teams_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Teams_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Teams_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Teams_Sum_Fields = {
  __typename?: 'teams_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "teams" */
export type Teams_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "teams" */
export enum Teams_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Teams_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Teams_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Teams_Set_Input>;
  /** filter the rows which have to be updated */
  where: Teams_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Teams_Var_Pop_Fields = {
  __typename?: 'teams_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "teams" */
export type Teams_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Teams_Var_Samp_Fields = {
  __typename?: 'teams_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "teams" */
export type Teams_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Teams_Variance_Fields = {
  __typename?: 'teams_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "teams" */
export type Teams_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "time_offs" */
export type Time_Offs = {
  __typename?: 'time_offs';
  /** An object relationship */
  account: Accounts;
  account_id: Scalars['Int']['output'];
  created_at: Scalars['timestamp']['output'];
  end_date_iso: Scalars['date']['output'];
  end_date_runn?: Maybe<Scalars['String']['output']>;
  /** An array relationship */
  ext_time_off_links: Array<Ext_Time_Off_Link>;
  /** An aggregate relationship */
  ext_time_off_links_aggregate: Ext_Time_Off_Link_Aggregate;
  /** An object relationship */
  holiday?: Maybe<Holidays>;
  holiday_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  leave_type: Scalars['String']['output'];
  note?: Maybe<Scalars['String']['output']>;
  partial_minutes_per_day?: Maybe<Scalars['Int']['output']>;
  /** An object relationship */
  person: People;
  person_id: Scalars['Int']['output'];
  start_date_iso: Scalars['date']['output'];
  start_date_runn?: Maybe<Scalars['String']['output']>;
  updated_at: Scalars['timestamp']['output'];
};


/** columns and relationships of "time_offs" */
export type Time_OffsExt_Time_Off_LinksArgs = {
  distinct_on?: InputMaybe<Array<Ext_Time_Off_Link_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Time_Off_Link_Order_By>>;
  where?: InputMaybe<Ext_Time_Off_Link_Bool_Exp>;
};


/** columns and relationships of "time_offs" */
export type Time_OffsExt_Time_Off_Links_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Ext_Time_Off_Link_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Ext_Time_Off_Link_Order_By>>;
  where?: InputMaybe<Ext_Time_Off_Link_Bool_Exp>;
};

/** aggregated selection of "time_offs" */
export type Time_Offs_Aggregate = {
  __typename?: 'time_offs_aggregate';
  aggregate?: Maybe<Time_Offs_Aggregate_Fields>;
  nodes: Array<Time_Offs>;
};

export type Time_Offs_Aggregate_Bool_Exp = {
  count?: InputMaybe<Time_Offs_Aggregate_Bool_Exp_Count>;
};

export type Time_Offs_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Time_Offs_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Time_Offs_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "time_offs" */
export type Time_Offs_Aggregate_Fields = {
  __typename?: 'time_offs_aggregate_fields';
  avg?: Maybe<Time_Offs_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Time_Offs_Max_Fields>;
  min?: Maybe<Time_Offs_Min_Fields>;
  stddev?: Maybe<Time_Offs_Stddev_Fields>;
  stddev_pop?: Maybe<Time_Offs_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Time_Offs_Stddev_Samp_Fields>;
  sum?: Maybe<Time_Offs_Sum_Fields>;
  var_pop?: Maybe<Time_Offs_Var_Pop_Fields>;
  var_samp?: Maybe<Time_Offs_Var_Samp_Fields>;
  variance?: Maybe<Time_Offs_Variance_Fields>;
};


/** aggregate fields of "time_offs" */
export type Time_Offs_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Time_Offs_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "time_offs" */
export type Time_Offs_Aggregate_Order_By = {
  avg?: InputMaybe<Time_Offs_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Time_Offs_Max_Order_By>;
  min?: InputMaybe<Time_Offs_Min_Order_By>;
  stddev?: InputMaybe<Time_Offs_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Time_Offs_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Time_Offs_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Time_Offs_Sum_Order_By>;
  var_pop?: InputMaybe<Time_Offs_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Time_Offs_Var_Samp_Order_By>;
  variance?: InputMaybe<Time_Offs_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "time_offs" */
export type Time_Offs_Arr_Rel_Insert_Input = {
  data: Array<Time_Offs_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Time_Offs_On_Conflict>;
};

/** aggregate avg on columns */
export type Time_Offs_Avg_Fields = {
  __typename?: 'time_offs_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  holiday_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  partial_minutes_per_day?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "time_offs" */
export type Time_Offs_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  holiday_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  partial_minutes_per_day?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "time_offs". All fields are combined with a logical 'AND'. */
export type Time_Offs_Bool_Exp = {
  _and?: InputMaybe<Array<Time_Offs_Bool_Exp>>;
  _not?: InputMaybe<Time_Offs_Bool_Exp>;
  _or?: InputMaybe<Array<Time_Offs_Bool_Exp>>;
  account?: InputMaybe<Accounts_Bool_Exp>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  end_date_iso?: InputMaybe<Date_Comparison_Exp>;
  end_date_runn?: InputMaybe<String_Comparison_Exp>;
  ext_time_off_links?: InputMaybe<Ext_Time_Off_Link_Bool_Exp>;
  ext_time_off_links_aggregate?: InputMaybe<Ext_Time_Off_Link_Aggregate_Bool_Exp>;
  holiday?: InputMaybe<Holidays_Bool_Exp>;
  holiday_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  leave_type?: InputMaybe<String_Comparison_Exp>;
  note?: InputMaybe<String_Comparison_Exp>;
  partial_minutes_per_day?: InputMaybe<Int_Comparison_Exp>;
  person?: InputMaybe<People_Bool_Exp>;
  person_id?: InputMaybe<Int_Comparison_Exp>;
  start_date_iso?: InputMaybe<Date_Comparison_Exp>;
  start_date_runn?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "time_offs" */
export enum Time_Offs_Constraint {
  /** unique or primary key constraint on columns "account_id", "id" */
  IndexUniqueTimeOffsIdAccountId = 'index_unique_time_offs_id_account_id',
  /** unique or primary key constraint on columns "id" */
  TimeOffsPkey = 'time_offs_pkey'
}

/** input type for incrementing numeric columns in table "time_offs" */
export type Time_Offs_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  holiday_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  partial_minutes_per_day?: InputMaybe<Scalars['Int']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "time_offs" */
export type Time_Offs_Insert_Input = {
  account?: InputMaybe<Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  end_date_iso?: InputMaybe<Scalars['date']['input']>;
  ext_time_off_links?: InputMaybe<Ext_Time_Off_Link_Arr_Rel_Insert_Input>;
  holiday?: InputMaybe<Holidays_Obj_Rel_Insert_Input>;
  holiday_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  leave_type?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  partial_minutes_per_day?: InputMaybe<Scalars['Int']['input']>;
  person?: InputMaybe<People_Obj_Rel_Insert_Input>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  start_date_iso?: InputMaybe<Scalars['date']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Time_Offs_Max_Fields = {
  __typename?: 'time_offs_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  end_date_iso?: Maybe<Scalars['date']['output']>;
  end_date_runn?: Maybe<Scalars['String']['output']>;
  holiday_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  leave_type?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  partial_minutes_per_day?: Maybe<Scalars['Int']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  start_date_iso?: Maybe<Scalars['date']['output']>;
  start_date_runn?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "time_offs" */
export type Time_Offs_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  end_date_iso?: InputMaybe<Order_By>;
  holiday_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  leave_type?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  partial_minutes_per_day?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  start_date_iso?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Time_Offs_Min_Fields = {
  __typename?: 'time_offs_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  end_date_iso?: Maybe<Scalars['date']['output']>;
  end_date_runn?: Maybe<Scalars['String']['output']>;
  holiday_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  leave_type?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  partial_minutes_per_day?: Maybe<Scalars['Int']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  start_date_iso?: Maybe<Scalars['date']['output']>;
  start_date_runn?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "time_offs" */
export type Time_Offs_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  end_date_iso?: InputMaybe<Order_By>;
  holiday_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  leave_type?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  partial_minutes_per_day?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  start_date_iso?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "time_offs" */
export type Time_Offs_Mutation_Response = {
  __typename?: 'time_offs_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Time_Offs>;
};

/** input type for inserting object relation for remote table "time_offs" */
export type Time_Offs_Obj_Rel_Insert_Input = {
  data: Time_Offs_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Time_Offs_On_Conflict>;
};

/** on_conflict condition type for table "time_offs" */
export type Time_Offs_On_Conflict = {
  constraint: Time_Offs_Constraint;
  update_columns?: Array<Time_Offs_Update_Column>;
  where?: InputMaybe<Time_Offs_Bool_Exp>;
};

/** Ordering options when selecting data from "time_offs". */
export type Time_Offs_Order_By = {
  account?: InputMaybe<Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  end_date_iso?: InputMaybe<Order_By>;
  end_date_runn?: InputMaybe<Order_By>;
  ext_time_off_links_aggregate?: InputMaybe<Ext_Time_Off_Link_Aggregate_Order_By>;
  holiday?: InputMaybe<Holidays_Order_By>;
  holiday_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  leave_type?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  partial_minutes_per_day?: InputMaybe<Order_By>;
  person?: InputMaybe<People_Order_By>;
  person_id?: InputMaybe<Order_By>;
  start_date_iso?: InputMaybe<Order_By>;
  start_date_runn?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: time_offs */
export type Time_Offs_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "time_offs" */
export enum Time_Offs_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  EndDateIso = 'end_date_iso',
  /** column name */
  HolidayId = 'holiday_id',
  /** column name */
  Id = 'id',
  /** column name */
  LeaveType = 'leave_type',
  /** column name */
  Note = 'note',
  /** column name */
  PartialMinutesPerDay = 'partial_minutes_per_day',
  /** column name */
  PersonId = 'person_id',
  /** column name */
  StartDateIso = 'start_date_iso',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "time_offs" */
export type Time_Offs_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  end_date_iso?: InputMaybe<Scalars['date']['input']>;
  holiday_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  leave_type?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  partial_minutes_per_day?: InputMaybe<Scalars['Int']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  start_date_iso?: InputMaybe<Scalars['date']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Time_Offs_Stddev_Fields = {
  __typename?: 'time_offs_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  holiday_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  partial_minutes_per_day?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "time_offs" */
export type Time_Offs_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  holiday_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  partial_minutes_per_day?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Time_Offs_Stddev_Pop_Fields = {
  __typename?: 'time_offs_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  holiday_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  partial_minutes_per_day?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "time_offs" */
export type Time_Offs_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  holiday_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  partial_minutes_per_day?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Time_Offs_Stddev_Samp_Fields = {
  __typename?: 'time_offs_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  holiday_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  partial_minutes_per_day?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "time_offs" */
export type Time_Offs_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  holiday_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  partial_minutes_per_day?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "time_offs" */
export type Time_Offs_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Time_Offs_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Time_Offs_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  end_date_iso?: InputMaybe<Scalars['date']['input']>;
  holiday_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  leave_type?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  partial_minutes_per_day?: InputMaybe<Scalars['Int']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  start_date_iso?: InputMaybe<Scalars['date']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Time_Offs_Sum_Fields = {
  __typename?: 'time_offs_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  holiday_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  partial_minutes_per_day?: Maybe<Scalars['Int']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "time_offs" */
export type Time_Offs_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  holiday_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  partial_minutes_per_day?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
};

/** update columns of table "time_offs" */
export enum Time_Offs_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  EndDateIso = 'end_date_iso',
  /** column name */
  HolidayId = 'holiday_id',
  /** column name */
  Id = 'id',
  /** column name */
  LeaveType = 'leave_type',
  /** column name */
  Note = 'note',
  /** column name */
  PartialMinutesPerDay = 'partial_minutes_per_day',
  /** column name */
  PersonId = 'person_id',
  /** column name */
  StartDateIso = 'start_date_iso',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Time_Offs_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Time_Offs_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Time_Offs_Set_Input>;
  /** filter the rows which have to be updated */
  where: Time_Offs_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Time_Offs_Var_Pop_Fields = {
  __typename?: 'time_offs_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  holiday_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  partial_minutes_per_day?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "time_offs" */
export type Time_Offs_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  holiday_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  partial_minutes_per_day?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Time_Offs_Var_Samp_Fields = {
  __typename?: 'time_offs_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  holiday_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  partial_minutes_per_day?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "time_offs" */
export type Time_Offs_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  holiday_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  partial_minutes_per_day?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Time_Offs_Variance_Fields = {
  __typename?: 'time_offs_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  holiday_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  partial_minutes_per_day?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "time_offs" */
export type Time_Offs_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  holiday_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  partial_minutes_per_day?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
};

/** Boolean expression to compare columns of type "timesheet_lock_status". All fields are combined with logical 'AND'. */
export type Timesheet_Lock_Status_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['timesheet_lock_status']['input']>;
  _gt?: InputMaybe<Scalars['timesheet_lock_status']['input']>;
  _gte?: InputMaybe<Scalars['timesheet_lock_status']['input']>;
  _in?: InputMaybe<Array<Scalars['timesheet_lock_status']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['timesheet_lock_status']['input']>;
  _lte?: InputMaybe<Scalars['timesheet_lock_status']['input']>;
  _neq?: InputMaybe<Scalars['timesheet_lock_status']['input']>;
  _nin?: InputMaybe<Array<Scalars['timesheet_lock_status']['input']>>;
};

/** Boolean expression to compare columns of type "timestamp". All fields are combined with logical 'AND'. */
export type Timestamp_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['timestamp']['input']>;
  _gt?: InputMaybe<Scalars['timestamp']['input']>;
  _gte?: InputMaybe<Scalars['timestamp']['input']>;
  _in?: InputMaybe<Array<Scalars['timestamp']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['timestamp']['input']>;
  _lte?: InputMaybe<Scalars['timestamp']['input']>;
  _neq?: InputMaybe<Scalars['timestamp']['input']>;
  _nin?: InputMaybe<Array<Scalars['timestamp']['input']>>;
};

/** Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'. */
export type Timestamptz_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['timestamptz']['input']>;
  _gt?: InputMaybe<Scalars['timestamptz']['input']>;
  _gte?: InputMaybe<Scalars['timestamptz']['input']>;
  _in?: InputMaybe<Array<Scalars['timestamptz']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['timestamptz']['input']>;
  _lte?: InputMaybe<Scalars['timestamptz']['input']>;
  _neq?: InputMaybe<Scalars['timestamptz']['input']>;
  _nin?: InputMaybe<Array<Scalars['timestamptz']['input']>>;
};

/** columns and relationships of "type_schedule_totals" */
export type Type_Schedule_Totals = {
  __typename?: 'type_schedule_totals';
  /** An object relationship */
  project: Projects;
  project_id: Scalars['Int']['output'];
  sum_billable_minutes?: Maybe<Scalars['Int']['output']>;
  sum_nonbillable_minutes?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "type_schedule_totals" */
export type Type_Schedule_Totals_Aggregate = {
  __typename?: 'type_schedule_totals_aggregate';
  aggregate?: Maybe<Type_Schedule_Totals_Aggregate_Fields>;
  nodes: Array<Type_Schedule_Totals>;
};

export type Type_Schedule_Totals_Aggregate_Bool_Exp = {
  count?: InputMaybe<Type_Schedule_Totals_Aggregate_Bool_Exp_Count>;
};

export type Type_Schedule_Totals_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Type_Schedule_Totals_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Type_Schedule_Totals_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "type_schedule_totals" */
export type Type_Schedule_Totals_Aggregate_Fields = {
  __typename?: 'type_schedule_totals_aggregate_fields';
  avg?: Maybe<Type_Schedule_Totals_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Type_Schedule_Totals_Max_Fields>;
  min?: Maybe<Type_Schedule_Totals_Min_Fields>;
  stddev?: Maybe<Type_Schedule_Totals_Stddev_Fields>;
  stddev_pop?: Maybe<Type_Schedule_Totals_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Type_Schedule_Totals_Stddev_Samp_Fields>;
  sum?: Maybe<Type_Schedule_Totals_Sum_Fields>;
  var_pop?: Maybe<Type_Schedule_Totals_Var_Pop_Fields>;
  var_samp?: Maybe<Type_Schedule_Totals_Var_Samp_Fields>;
  variance?: Maybe<Type_Schedule_Totals_Variance_Fields>;
};


/** aggregate fields of "type_schedule_totals" */
export type Type_Schedule_Totals_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Type_Schedule_Totals_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "type_schedule_totals" */
export type Type_Schedule_Totals_Aggregate_Order_By = {
  avg?: InputMaybe<Type_Schedule_Totals_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Type_Schedule_Totals_Max_Order_By>;
  min?: InputMaybe<Type_Schedule_Totals_Min_Order_By>;
  stddev?: InputMaybe<Type_Schedule_Totals_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Type_Schedule_Totals_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Type_Schedule_Totals_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Type_Schedule_Totals_Sum_Order_By>;
  var_pop?: InputMaybe<Type_Schedule_Totals_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Type_Schedule_Totals_Var_Samp_Order_By>;
  variance?: InputMaybe<Type_Schedule_Totals_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "type_schedule_totals" */
export type Type_Schedule_Totals_Arr_Rel_Insert_Input = {
  data: Array<Type_Schedule_Totals_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Type_Schedule_Totals_On_Conflict>;
};

/** aggregate avg on columns */
export type Type_Schedule_Totals_Avg_Fields = {
  __typename?: 'type_schedule_totals_avg_fields';
  project_id?: Maybe<Scalars['Float']['output']>;
  sum_billable_minutes?: Maybe<Scalars['Float']['output']>;
  sum_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "type_schedule_totals" */
export type Type_Schedule_Totals_Avg_Order_By = {
  project_id?: InputMaybe<Order_By>;
  sum_billable_minutes?: InputMaybe<Order_By>;
  sum_nonbillable_minutes?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "type_schedule_totals". All fields are combined with a logical 'AND'. */
export type Type_Schedule_Totals_Bool_Exp = {
  _and?: InputMaybe<Array<Type_Schedule_Totals_Bool_Exp>>;
  _not?: InputMaybe<Type_Schedule_Totals_Bool_Exp>;
  _or?: InputMaybe<Array<Type_Schedule_Totals_Bool_Exp>>;
  project?: InputMaybe<Projects_Bool_Exp>;
  project_id?: InputMaybe<Int_Comparison_Exp>;
  sum_billable_minutes?: InputMaybe<Int_Comparison_Exp>;
  sum_nonbillable_minutes?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "type_schedule_totals" */
export enum Type_Schedule_Totals_Constraint {
  /** unique or primary key constraint on columns "project_id" */
  TypeScheduleTotalsPkey = 'type_schedule_totals_pkey'
}

/** input type for incrementing numeric columns in table "type_schedule_totals" */
export type Type_Schedule_Totals_Inc_Input = {
  project_id?: InputMaybe<Scalars['Int']['input']>;
  sum_billable_minutes?: InputMaybe<Scalars['Int']['input']>;
  sum_nonbillable_minutes?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "type_schedule_totals" */
export type Type_Schedule_Totals_Insert_Input = {
  project?: InputMaybe<Projects_Obj_Rel_Insert_Input>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  sum_billable_minutes?: InputMaybe<Scalars['Int']['input']>;
  sum_nonbillable_minutes?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Type_Schedule_Totals_Max_Fields = {
  __typename?: 'type_schedule_totals_max_fields';
  project_id?: Maybe<Scalars['Int']['output']>;
  sum_billable_minutes?: Maybe<Scalars['Int']['output']>;
  sum_nonbillable_minutes?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "type_schedule_totals" */
export type Type_Schedule_Totals_Max_Order_By = {
  project_id?: InputMaybe<Order_By>;
  sum_billable_minutes?: InputMaybe<Order_By>;
  sum_nonbillable_minutes?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Type_Schedule_Totals_Min_Fields = {
  __typename?: 'type_schedule_totals_min_fields';
  project_id?: Maybe<Scalars['Int']['output']>;
  sum_billable_minutes?: Maybe<Scalars['Int']['output']>;
  sum_nonbillable_minutes?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "type_schedule_totals" */
export type Type_Schedule_Totals_Min_Order_By = {
  project_id?: InputMaybe<Order_By>;
  sum_billable_minutes?: InputMaybe<Order_By>;
  sum_nonbillable_minutes?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "type_schedule_totals" */
export type Type_Schedule_Totals_Mutation_Response = {
  __typename?: 'type_schedule_totals_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Type_Schedule_Totals>;
};

/** on_conflict condition type for table "type_schedule_totals" */
export type Type_Schedule_Totals_On_Conflict = {
  constraint: Type_Schedule_Totals_Constraint;
  update_columns?: Array<Type_Schedule_Totals_Update_Column>;
  where?: InputMaybe<Type_Schedule_Totals_Bool_Exp>;
};

/** Ordering options when selecting data from "type_schedule_totals". */
export type Type_Schedule_Totals_Order_By = {
  project?: InputMaybe<Projects_Order_By>;
  project_id?: InputMaybe<Order_By>;
  sum_billable_minutes?: InputMaybe<Order_By>;
  sum_nonbillable_minutes?: InputMaybe<Order_By>;
};

/** primary key columns input for table: type_schedule_totals */
export type Type_Schedule_Totals_Pk_Columns_Input = {
  project_id: Scalars['Int']['input'];
};

/** columns and relationships of "type_schedule_totals_roles" */
export type Type_Schedule_Totals_Roles = {
  __typename?: 'type_schedule_totals_roles';
  /** An object relationship */
  project: Projects;
  project_id: Scalars['Int']['output'];
  /** An object relationship */
  role: Roles;
  role_id: Scalars['Int']['output'];
  sum_billable_minutes?: Maybe<Scalars['Int']['output']>;
  sum_nonbillable_minutes?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "type_schedule_totals_roles" */
export type Type_Schedule_Totals_Roles_Aggregate = {
  __typename?: 'type_schedule_totals_roles_aggregate';
  aggregate?: Maybe<Type_Schedule_Totals_Roles_Aggregate_Fields>;
  nodes: Array<Type_Schedule_Totals_Roles>;
};

export type Type_Schedule_Totals_Roles_Aggregate_Bool_Exp = {
  count?: InputMaybe<Type_Schedule_Totals_Roles_Aggregate_Bool_Exp_Count>;
};

export type Type_Schedule_Totals_Roles_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Type_Schedule_Totals_Roles_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Type_Schedule_Totals_Roles_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "type_schedule_totals_roles" */
export type Type_Schedule_Totals_Roles_Aggregate_Fields = {
  __typename?: 'type_schedule_totals_roles_aggregate_fields';
  avg?: Maybe<Type_Schedule_Totals_Roles_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Type_Schedule_Totals_Roles_Max_Fields>;
  min?: Maybe<Type_Schedule_Totals_Roles_Min_Fields>;
  stddev?: Maybe<Type_Schedule_Totals_Roles_Stddev_Fields>;
  stddev_pop?: Maybe<Type_Schedule_Totals_Roles_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Type_Schedule_Totals_Roles_Stddev_Samp_Fields>;
  sum?: Maybe<Type_Schedule_Totals_Roles_Sum_Fields>;
  var_pop?: Maybe<Type_Schedule_Totals_Roles_Var_Pop_Fields>;
  var_samp?: Maybe<Type_Schedule_Totals_Roles_Var_Samp_Fields>;
  variance?: Maybe<Type_Schedule_Totals_Roles_Variance_Fields>;
};


/** aggregate fields of "type_schedule_totals_roles" */
export type Type_Schedule_Totals_Roles_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Type_Schedule_Totals_Roles_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "type_schedule_totals_roles" */
export type Type_Schedule_Totals_Roles_Aggregate_Order_By = {
  avg?: InputMaybe<Type_Schedule_Totals_Roles_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Type_Schedule_Totals_Roles_Max_Order_By>;
  min?: InputMaybe<Type_Schedule_Totals_Roles_Min_Order_By>;
  stddev?: InputMaybe<Type_Schedule_Totals_Roles_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Type_Schedule_Totals_Roles_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Type_Schedule_Totals_Roles_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Type_Schedule_Totals_Roles_Sum_Order_By>;
  var_pop?: InputMaybe<Type_Schedule_Totals_Roles_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Type_Schedule_Totals_Roles_Var_Samp_Order_By>;
  variance?: InputMaybe<Type_Schedule_Totals_Roles_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "type_schedule_totals_roles" */
export type Type_Schedule_Totals_Roles_Arr_Rel_Insert_Input = {
  data: Array<Type_Schedule_Totals_Roles_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Type_Schedule_Totals_Roles_On_Conflict>;
};

/** aggregate avg on columns */
export type Type_Schedule_Totals_Roles_Avg_Fields = {
  __typename?: 'type_schedule_totals_roles_avg_fields';
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
  sum_billable_minutes?: Maybe<Scalars['Float']['output']>;
  sum_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "type_schedule_totals_roles" */
export type Type_Schedule_Totals_Roles_Avg_Order_By = {
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  sum_billable_minutes?: InputMaybe<Order_By>;
  sum_nonbillable_minutes?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "type_schedule_totals_roles". All fields are combined with a logical 'AND'. */
export type Type_Schedule_Totals_Roles_Bool_Exp = {
  _and?: InputMaybe<Array<Type_Schedule_Totals_Roles_Bool_Exp>>;
  _not?: InputMaybe<Type_Schedule_Totals_Roles_Bool_Exp>;
  _or?: InputMaybe<Array<Type_Schedule_Totals_Roles_Bool_Exp>>;
  project?: InputMaybe<Projects_Bool_Exp>;
  project_id?: InputMaybe<Int_Comparison_Exp>;
  role?: InputMaybe<Roles_Bool_Exp>;
  role_id?: InputMaybe<Int_Comparison_Exp>;
  sum_billable_minutes?: InputMaybe<Int_Comparison_Exp>;
  sum_nonbillable_minutes?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "type_schedule_totals_roles" */
export enum Type_Schedule_Totals_Roles_Constraint {
  /** unique or primary key constraint on columns "role_id", "project_id" */
  TypeScheduleTotalsRolesPkey = 'type_schedule_totals_roles_pkey'
}

/** input type for incrementing numeric columns in table "type_schedule_totals_roles" */
export type Type_Schedule_Totals_Roles_Inc_Input = {
  project_id?: InputMaybe<Scalars['Int']['input']>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
  sum_billable_minutes?: InputMaybe<Scalars['Int']['input']>;
  sum_nonbillable_minutes?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "type_schedule_totals_roles" */
export type Type_Schedule_Totals_Roles_Insert_Input = {
  project?: InputMaybe<Projects_Obj_Rel_Insert_Input>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  role?: InputMaybe<Roles_Obj_Rel_Insert_Input>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
  sum_billable_minutes?: InputMaybe<Scalars['Int']['input']>;
  sum_nonbillable_minutes?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Type_Schedule_Totals_Roles_Max_Fields = {
  __typename?: 'type_schedule_totals_roles_max_fields';
  project_id?: Maybe<Scalars['Int']['output']>;
  role_id?: Maybe<Scalars['Int']['output']>;
  sum_billable_minutes?: Maybe<Scalars['Int']['output']>;
  sum_nonbillable_minutes?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "type_schedule_totals_roles" */
export type Type_Schedule_Totals_Roles_Max_Order_By = {
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  sum_billable_minutes?: InputMaybe<Order_By>;
  sum_nonbillable_minutes?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Type_Schedule_Totals_Roles_Min_Fields = {
  __typename?: 'type_schedule_totals_roles_min_fields';
  project_id?: Maybe<Scalars['Int']['output']>;
  role_id?: Maybe<Scalars['Int']['output']>;
  sum_billable_minutes?: Maybe<Scalars['Int']['output']>;
  sum_nonbillable_minutes?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "type_schedule_totals_roles" */
export type Type_Schedule_Totals_Roles_Min_Order_By = {
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  sum_billable_minutes?: InputMaybe<Order_By>;
  sum_nonbillable_minutes?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "type_schedule_totals_roles" */
export type Type_Schedule_Totals_Roles_Mutation_Response = {
  __typename?: 'type_schedule_totals_roles_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Type_Schedule_Totals_Roles>;
};

/** on_conflict condition type for table "type_schedule_totals_roles" */
export type Type_Schedule_Totals_Roles_On_Conflict = {
  constraint: Type_Schedule_Totals_Roles_Constraint;
  update_columns?: Array<Type_Schedule_Totals_Roles_Update_Column>;
  where?: InputMaybe<Type_Schedule_Totals_Roles_Bool_Exp>;
};

/** Ordering options when selecting data from "type_schedule_totals_roles". */
export type Type_Schedule_Totals_Roles_Order_By = {
  project?: InputMaybe<Projects_Order_By>;
  project_id?: InputMaybe<Order_By>;
  role?: InputMaybe<Roles_Order_By>;
  role_id?: InputMaybe<Order_By>;
  sum_billable_minutes?: InputMaybe<Order_By>;
  sum_nonbillable_minutes?: InputMaybe<Order_By>;
};

/** primary key columns input for table: type_schedule_totals_roles */
export type Type_Schedule_Totals_Roles_Pk_Columns_Input = {
  project_id: Scalars['Int']['input'];
  role_id: Scalars['Int']['input'];
};

/** select columns of table "type_schedule_totals_roles" */
export enum Type_Schedule_Totals_Roles_Select_Column {
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  RoleId = 'role_id',
  /** column name */
  SumBillableMinutes = 'sum_billable_minutes',
  /** column name */
  SumNonbillableMinutes = 'sum_nonbillable_minutes'
}

/** input type for updating data in table "type_schedule_totals_roles" */
export type Type_Schedule_Totals_Roles_Set_Input = {
  project_id?: InputMaybe<Scalars['Int']['input']>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
  sum_billable_minutes?: InputMaybe<Scalars['Int']['input']>;
  sum_nonbillable_minutes?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Type_Schedule_Totals_Roles_Stddev_Fields = {
  __typename?: 'type_schedule_totals_roles_stddev_fields';
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
  sum_billable_minutes?: Maybe<Scalars['Float']['output']>;
  sum_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "type_schedule_totals_roles" */
export type Type_Schedule_Totals_Roles_Stddev_Order_By = {
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  sum_billable_minutes?: InputMaybe<Order_By>;
  sum_nonbillable_minutes?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Type_Schedule_Totals_Roles_Stddev_Pop_Fields = {
  __typename?: 'type_schedule_totals_roles_stddev_pop_fields';
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
  sum_billable_minutes?: Maybe<Scalars['Float']['output']>;
  sum_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "type_schedule_totals_roles" */
export type Type_Schedule_Totals_Roles_Stddev_Pop_Order_By = {
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  sum_billable_minutes?: InputMaybe<Order_By>;
  sum_nonbillable_minutes?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Type_Schedule_Totals_Roles_Stddev_Samp_Fields = {
  __typename?: 'type_schedule_totals_roles_stddev_samp_fields';
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
  sum_billable_minutes?: Maybe<Scalars['Float']['output']>;
  sum_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "type_schedule_totals_roles" */
export type Type_Schedule_Totals_Roles_Stddev_Samp_Order_By = {
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  sum_billable_minutes?: InputMaybe<Order_By>;
  sum_nonbillable_minutes?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "type_schedule_totals_roles" */
export type Type_Schedule_Totals_Roles_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Type_Schedule_Totals_Roles_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Type_Schedule_Totals_Roles_Stream_Cursor_Value_Input = {
  project_id?: InputMaybe<Scalars['Int']['input']>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
  sum_billable_minutes?: InputMaybe<Scalars['Int']['input']>;
  sum_nonbillable_minutes?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Type_Schedule_Totals_Roles_Sum_Fields = {
  __typename?: 'type_schedule_totals_roles_sum_fields';
  project_id?: Maybe<Scalars['Int']['output']>;
  role_id?: Maybe<Scalars['Int']['output']>;
  sum_billable_minutes?: Maybe<Scalars['Int']['output']>;
  sum_nonbillable_minutes?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "type_schedule_totals_roles" */
export type Type_Schedule_Totals_Roles_Sum_Order_By = {
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  sum_billable_minutes?: InputMaybe<Order_By>;
  sum_nonbillable_minutes?: InputMaybe<Order_By>;
};

/** update columns of table "type_schedule_totals_roles" */
export enum Type_Schedule_Totals_Roles_Update_Column {
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  RoleId = 'role_id',
  /** column name */
  SumBillableMinutes = 'sum_billable_minutes',
  /** column name */
  SumNonbillableMinutes = 'sum_nonbillable_minutes'
}

export type Type_Schedule_Totals_Roles_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Type_Schedule_Totals_Roles_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Type_Schedule_Totals_Roles_Set_Input>;
  /** filter the rows which have to be updated */
  where: Type_Schedule_Totals_Roles_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Type_Schedule_Totals_Roles_Var_Pop_Fields = {
  __typename?: 'type_schedule_totals_roles_var_pop_fields';
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
  sum_billable_minutes?: Maybe<Scalars['Float']['output']>;
  sum_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "type_schedule_totals_roles" */
export type Type_Schedule_Totals_Roles_Var_Pop_Order_By = {
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  sum_billable_minutes?: InputMaybe<Order_By>;
  sum_nonbillable_minutes?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Type_Schedule_Totals_Roles_Var_Samp_Fields = {
  __typename?: 'type_schedule_totals_roles_var_samp_fields';
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
  sum_billable_minutes?: Maybe<Scalars['Float']['output']>;
  sum_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "type_schedule_totals_roles" */
export type Type_Schedule_Totals_Roles_Var_Samp_Order_By = {
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  sum_billable_minutes?: InputMaybe<Order_By>;
  sum_nonbillable_minutes?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Type_Schedule_Totals_Roles_Variance_Fields = {
  __typename?: 'type_schedule_totals_roles_variance_fields';
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
  sum_billable_minutes?: Maybe<Scalars['Float']['output']>;
  sum_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "type_schedule_totals_roles" */
export type Type_Schedule_Totals_Roles_Variance_Order_By = {
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  sum_billable_minutes?: InputMaybe<Order_By>;
  sum_nonbillable_minutes?: InputMaybe<Order_By>;
};

/** select columns of table "type_schedule_totals" */
export enum Type_Schedule_Totals_Select_Column {
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  SumBillableMinutes = 'sum_billable_minutes',
  /** column name */
  SumNonbillableMinutes = 'sum_nonbillable_minutes'
}

/** input type for updating data in table "type_schedule_totals" */
export type Type_Schedule_Totals_Set_Input = {
  project_id?: InputMaybe<Scalars['Int']['input']>;
  sum_billable_minutes?: InputMaybe<Scalars['Int']['input']>;
  sum_nonbillable_minutes?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Type_Schedule_Totals_Stddev_Fields = {
  __typename?: 'type_schedule_totals_stddev_fields';
  project_id?: Maybe<Scalars['Float']['output']>;
  sum_billable_minutes?: Maybe<Scalars['Float']['output']>;
  sum_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "type_schedule_totals" */
export type Type_Schedule_Totals_Stddev_Order_By = {
  project_id?: InputMaybe<Order_By>;
  sum_billable_minutes?: InputMaybe<Order_By>;
  sum_nonbillable_minutes?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Type_Schedule_Totals_Stddev_Pop_Fields = {
  __typename?: 'type_schedule_totals_stddev_pop_fields';
  project_id?: Maybe<Scalars['Float']['output']>;
  sum_billable_minutes?: Maybe<Scalars['Float']['output']>;
  sum_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "type_schedule_totals" */
export type Type_Schedule_Totals_Stddev_Pop_Order_By = {
  project_id?: InputMaybe<Order_By>;
  sum_billable_minutes?: InputMaybe<Order_By>;
  sum_nonbillable_minutes?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Type_Schedule_Totals_Stddev_Samp_Fields = {
  __typename?: 'type_schedule_totals_stddev_samp_fields';
  project_id?: Maybe<Scalars['Float']['output']>;
  sum_billable_minutes?: Maybe<Scalars['Float']['output']>;
  sum_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "type_schedule_totals" */
export type Type_Schedule_Totals_Stddev_Samp_Order_By = {
  project_id?: InputMaybe<Order_By>;
  sum_billable_minutes?: InputMaybe<Order_By>;
  sum_nonbillable_minutes?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "type_schedule_totals" */
export type Type_Schedule_Totals_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Type_Schedule_Totals_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Type_Schedule_Totals_Stream_Cursor_Value_Input = {
  project_id?: InputMaybe<Scalars['Int']['input']>;
  sum_billable_minutes?: InputMaybe<Scalars['Int']['input']>;
  sum_nonbillable_minutes?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Type_Schedule_Totals_Sum_Fields = {
  __typename?: 'type_schedule_totals_sum_fields';
  project_id?: Maybe<Scalars['Int']['output']>;
  sum_billable_minutes?: Maybe<Scalars['Int']['output']>;
  sum_nonbillable_minutes?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "type_schedule_totals" */
export type Type_Schedule_Totals_Sum_Order_By = {
  project_id?: InputMaybe<Order_By>;
  sum_billable_minutes?: InputMaybe<Order_By>;
  sum_nonbillable_minutes?: InputMaybe<Order_By>;
};

/** update columns of table "type_schedule_totals" */
export enum Type_Schedule_Totals_Update_Column {
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  SumBillableMinutes = 'sum_billable_minutes',
  /** column name */
  SumNonbillableMinutes = 'sum_nonbillable_minutes'
}

export type Type_Schedule_Totals_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Type_Schedule_Totals_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Type_Schedule_Totals_Set_Input>;
  /** filter the rows which have to be updated */
  where: Type_Schedule_Totals_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Type_Schedule_Totals_Var_Pop_Fields = {
  __typename?: 'type_schedule_totals_var_pop_fields';
  project_id?: Maybe<Scalars['Float']['output']>;
  sum_billable_minutes?: Maybe<Scalars['Float']['output']>;
  sum_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "type_schedule_totals" */
export type Type_Schedule_Totals_Var_Pop_Order_By = {
  project_id?: InputMaybe<Order_By>;
  sum_billable_minutes?: InputMaybe<Order_By>;
  sum_nonbillable_minutes?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Type_Schedule_Totals_Var_Samp_Fields = {
  __typename?: 'type_schedule_totals_var_samp_fields';
  project_id?: Maybe<Scalars['Float']['output']>;
  sum_billable_minutes?: Maybe<Scalars['Float']['output']>;
  sum_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "type_schedule_totals" */
export type Type_Schedule_Totals_Var_Samp_Order_By = {
  project_id?: InputMaybe<Order_By>;
  sum_billable_minutes?: InputMaybe<Order_By>;
  sum_nonbillable_minutes?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Type_Schedule_Totals_Variance_Fields = {
  __typename?: 'type_schedule_totals_variance_fields';
  project_id?: Maybe<Scalars['Float']['output']>;
  sum_billable_minutes?: Maybe<Scalars['Float']['output']>;
  sum_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "type_schedule_totals" */
export type Type_Schedule_Totals_Variance_Order_By = {
  project_id?: InputMaybe<Order_By>;
  sum_billable_minutes?: InputMaybe<Order_By>;
  sum_nonbillable_minutes?: InputMaybe<Order_By>;
};

export type UpdateCustomSelectFieldResult = {
  __typename?: 'updateCustomSelectFieldResult';
  account?: Maybe<Accounts>;
  accountId: Scalars['Int']['output'];
  custom_select_options?: Maybe<Custom_Select_Options>;
  custom_select_options_account?: Maybe<Custom_Select_Options>;
  custom_select_type?: Maybe<Custom_Select_Types>;
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
};

/** columns and relationships of "user_filter_sets" */
export type User_Filter_Sets = {
  __typename?: 'user_filter_sets';
  /** An object relationship */
  account: Accounts;
  account_id: Scalars['Int']['output'];
  created_at: Scalars['timestamp']['output'];
  filters: Scalars['json']['output'];
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  type: Scalars['String']['output'];
  updated_at: Scalars['timestamp']['output'];
  /** An object relationship */
  user?: Maybe<Users>;
  user_id: Scalars['Int']['output'];
};


/** columns and relationships of "user_filter_sets" */
export type User_Filter_SetsFiltersArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "user_filter_sets" */
export type User_Filter_Sets_Aggregate = {
  __typename?: 'user_filter_sets_aggregate';
  aggregate?: Maybe<User_Filter_Sets_Aggregate_Fields>;
  nodes: Array<User_Filter_Sets>;
};

export type User_Filter_Sets_Aggregate_Bool_Exp = {
  count?: InputMaybe<User_Filter_Sets_Aggregate_Bool_Exp_Count>;
};

export type User_Filter_Sets_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<User_Filter_Sets_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<User_Filter_Sets_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "user_filter_sets" */
export type User_Filter_Sets_Aggregate_Fields = {
  __typename?: 'user_filter_sets_aggregate_fields';
  avg?: Maybe<User_Filter_Sets_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<User_Filter_Sets_Max_Fields>;
  min?: Maybe<User_Filter_Sets_Min_Fields>;
  stddev?: Maybe<User_Filter_Sets_Stddev_Fields>;
  stddev_pop?: Maybe<User_Filter_Sets_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<User_Filter_Sets_Stddev_Samp_Fields>;
  sum?: Maybe<User_Filter_Sets_Sum_Fields>;
  var_pop?: Maybe<User_Filter_Sets_Var_Pop_Fields>;
  var_samp?: Maybe<User_Filter_Sets_Var_Samp_Fields>;
  variance?: Maybe<User_Filter_Sets_Variance_Fields>;
};


/** aggregate fields of "user_filter_sets" */
export type User_Filter_Sets_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_Filter_Sets_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "user_filter_sets" */
export type User_Filter_Sets_Aggregate_Order_By = {
  avg?: InputMaybe<User_Filter_Sets_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<User_Filter_Sets_Max_Order_By>;
  min?: InputMaybe<User_Filter_Sets_Min_Order_By>;
  stddev?: InputMaybe<User_Filter_Sets_Stddev_Order_By>;
  stddev_pop?: InputMaybe<User_Filter_Sets_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<User_Filter_Sets_Stddev_Samp_Order_By>;
  sum?: InputMaybe<User_Filter_Sets_Sum_Order_By>;
  var_pop?: InputMaybe<User_Filter_Sets_Var_Pop_Order_By>;
  var_samp?: InputMaybe<User_Filter_Sets_Var_Samp_Order_By>;
  variance?: InputMaybe<User_Filter_Sets_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "user_filter_sets" */
export type User_Filter_Sets_Arr_Rel_Insert_Input = {
  data: Array<User_Filter_Sets_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<User_Filter_Sets_On_Conflict>;
};

/** aggregate avg on columns */
export type User_Filter_Sets_Avg_Fields = {
  __typename?: 'user_filter_sets_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "user_filter_sets" */
export type User_Filter_Sets_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "user_filter_sets". All fields are combined with a logical 'AND'. */
export type User_Filter_Sets_Bool_Exp = {
  _and?: InputMaybe<Array<User_Filter_Sets_Bool_Exp>>;
  _not?: InputMaybe<User_Filter_Sets_Bool_Exp>;
  _or?: InputMaybe<Array<User_Filter_Sets_Bool_Exp>>;
  account?: InputMaybe<Accounts_Bool_Exp>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  filters?: InputMaybe<Json_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "user_filter_sets" */
export enum User_Filter_Sets_Constraint {
  /** unique or primary key constraint on columns "account_id", "id" */
  IndexUniqueUserFilterSetsIdAccountId = 'index_unique_user_filter_sets_id_account_id',
  /** unique or primary key constraint on columns "id" */
  UserFilterSetsPkey = 'user_filter_sets_pkey'
}

/** input type for incrementing numeric columns in table "user_filter_sets" */
export type User_Filter_Sets_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "user_filter_sets" */
export type User_Filter_Sets_Insert_Input = {
  account?: InputMaybe<Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  filters?: InputMaybe<Scalars['json']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type User_Filter_Sets_Max_Fields = {
  __typename?: 'user_filter_sets_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "user_filter_sets" */
export type User_Filter_Sets_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type User_Filter_Sets_Min_Fields = {
  __typename?: 'user_filter_sets_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "user_filter_sets" */
export type User_Filter_Sets_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "user_filter_sets" */
export type User_Filter_Sets_Mutation_Response = {
  __typename?: 'user_filter_sets_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<User_Filter_Sets>;
};

/** on_conflict condition type for table "user_filter_sets" */
export type User_Filter_Sets_On_Conflict = {
  constraint: User_Filter_Sets_Constraint;
  update_columns?: Array<User_Filter_Sets_Update_Column>;
  where?: InputMaybe<User_Filter_Sets_Bool_Exp>;
};

/** Ordering options when selecting data from "user_filter_sets". */
export type User_Filter_Sets_Order_By = {
  account?: InputMaybe<Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  filters?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: user_filter_sets */
export type User_Filter_Sets_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "user_filter_sets" */
export enum User_Filter_Sets_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Filters = 'filters',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "user_filter_sets" */
export type User_Filter_Sets_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  filters?: InputMaybe<Scalars['json']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type User_Filter_Sets_Stddev_Fields = {
  __typename?: 'user_filter_sets_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "user_filter_sets" */
export type User_Filter_Sets_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type User_Filter_Sets_Stddev_Pop_Fields = {
  __typename?: 'user_filter_sets_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "user_filter_sets" */
export type User_Filter_Sets_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type User_Filter_Sets_Stddev_Samp_Fields = {
  __typename?: 'user_filter_sets_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "user_filter_sets" */
export type User_Filter_Sets_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "user_filter_sets" */
export type User_Filter_Sets_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: User_Filter_Sets_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type User_Filter_Sets_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  filters?: InputMaybe<Scalars['json']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  user_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type User_Filter_Sets_Sum_Fields = {
  __typename?: 'user_filter_sets_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  user_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "user_filter_sets" */
export type User_Filter_Sets_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** update columns of table "user_filter_sets" */
export enum User_Filter_Sets_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Filters = 'filters',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

export type User_Filter_Sets_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<User_Filter_Sets_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<User_Filter_Sets_Set_Input>;
  /** filter the rows which have to be updated */
  where: User_Filter_Sets_Bool_Exp;
};

/** aggregate var_pop on columns */
export type User_Filter_Sets_Var_Pop_Fields = {
  __typename?: 'user_filter_sets_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "user_filter_sets" */
export type User_Filter_Sets_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type User_Filter_Sets_Var_Samp_Fields = {
  __typename?: 'user_filter_sets_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "user_filter_sets" */
export type User_Filter_Sets_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type User_Filter_Sets_Variance_Fields = {
  __typename?: 'user_filter_sets_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "user_filter_sets" */
export type User_Filter_Sets_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "users" */
export type Users = {
  __typename?: 'users';
  /** An object relationship */
  account: Accounts;
  account_id: Scalars['Int']['output'];
  created_at: Scalars['timestamp']['output'];
  current_sign_in_at?: Maybe<Scalars['timestamp']['output']>;
  current_sign_in_ip?: Maybe<Scalars['inet']['output']>;
  /** An array relationship */
  editable_projects: Array<Project_Editors>;
  /** An aggregate relationship */
  editable_projects_aggregate: Project_Editors_Aggregate;
  email: Scalars['String']['output'];
  encrypted_password: Scalars['String']['output'];
  failed_attempts: Scalars['Int']['output'];
  favourite_people?: Maybe<Scalars['jsonb']['output']>;
  favourite_projects?: Maybe<Scalars['jsonb']['output']>;
  /** An array relationship */
  filter_sets: Array<User_Filter_Sets>;
  /** An aggregate relationship */
  filter_sets_aggregate: User_Filter_Sets_Aggregate;
  first_name?: Maybe<Scalars['String']['output']>;
  id: Scalars['Int']['output'];
  image_key?: Maybe<Scalars['String']['output']>;
  last_name?: Maybe<Scalars['String']['output']>;
  last_seen?: Maybe<Scalars['timestamp']['output']>;
  last_sign_in_at?: Maybe<Scalars['timestamp']['output']>;
  last_sign_in_ip?: Maybe<Scalars['inet']['output']>;
  last_sign_in_method?: Maybe<Scalars['String']['output']>;
  locked_at?: Maybe<Scalars['timestamp']['output']>;
  /** An array relationship */
  people: Array<People>;
  /** An aggregate relationship */
  people_aggregate: People_Aggregate;
  permissions: Scalars['jsonb']['output'];
  references: Scalars['jsonb']['output'];
  remember_created_at?: Maybe<Scalars['timestamp']['output']>;
  reset_password_sent_at?: Maybe<Scalars['timestamp']['output']>;
  reset_password_token?: Maybe<Scalars['String']['output']>;
  role_name?: Maybe<Scalars['String']['output']>;
  sign_in_count: Scalars['Int']['output'];
  unlock_token?: Maybe<Scalars['String']['output']>;
  updated_at: Scalars['timestamp']['output'];
  view_id?: Maybe<Scalars['Int']['output']>;
  viewed_welcome: Scalars['Boolean']['output'];
};


/** columns and relationships of "users" */
export type UsersEditable_ProjectsArgs = {
  distinct_on?: InputMaybe<Array<Project_Editors_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Editors_Order_By>>;
  where?: InputMaybe<Project_Editors_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersEditable_Projects_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Project_Editors_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Editors_Order_By>>;
  where?: InputMaybe<Project_Editors_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersFavourite_PeopleArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** columns and relationships of "users" */
export type UsersFavourite_ProjectsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** columns and relationships of "users" */
export type UsersFilter_SetsArgs = {
  distinct_on?: InputMaybe<Array<User_Filter_Sets_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Filter_Sets_Order_By>>;
  where?: InputMaybe<User_Filter_Sets_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersFilter_Sets_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Filter_Sets_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Filter_Sets_Order_By>>;
  where?: InputMaybe<User_Filter_Sets_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersPeopleArgs = {
  distinct_on?: InputMaybe<Array<People_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<People_Order_By>>;
  where?: InputMaybe<People_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersPeople_AggregateArgs = {
  distinct_on?: InputMaybe<Array<People_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<People_Order_By>>;
  where?: InputMaybe<People_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersPermissionsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** columns and relationships of "users" */
export type UsersReferencesArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "users" */
export type Users_Aggregate = {
  __typename?: 'users_aggregate';
  aggregate?: Maybe<Users_Aggregate_Fields>;
  nodes: Array<Users>;
};

export type Users_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Users_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Users_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Users_Aggregate_Bool_Exp_Count>;
};

export type Users_Aggregate_Bool_Exp_Bool_And = {
  arguments: Users_Select_Column_Users_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Users_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Users_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Users_Select_Column_Users_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Users_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Users_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Users_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Users_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "users" */
export type Users_Aggregate_Fields = {
  __typename?: 'users_aggregate_fields';
  avg?: Maybe<Users_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Users_Max_Fields>;
  min?: Maybe<Users_Min_Fields>;
  stddev?: Maybe<Users_Stddev_Fields>;
  stddev_pop?: Maybe<Users_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Users_Stddev_Samp_Fields>;
  sum?: Maybe<Users_Sum_Fields>;
  var_pop?: Maybe<Users_Var_Pop_Fields>;
  var_samp?: Maybe<Users_Var_Samp_Fields>;
  variance?: Maybe<Users_Variance_Fields>;
};


/** aggregate fields of "users" */
export type Users_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Users_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "users" */
export type Users_Aggregate_Order_By = {
  avg?: InputMaybe<Users_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Users_Max_Order_By>;
  min?: InputMaybe<Users_Min_Order_By>;
  stddev?: InputMaybe<Users_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Users_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Users_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Users_Sum_Order_By>;
  var_pop?: InputMaybe<Users_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Users_Var_Samp_Order_By>;
  variance?: InputMaybe<Users_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Users_Append_Input = {
  favourite_people?: InputMaybe<Scalars['jsonb']['input']>;
  favourite_projects?: InputMaybe<Scalars['jsonb']['input']>;
  permissions?: InputMaybe<Scalars['jsonb']['input']>;
  references?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "users" */
export type Users_Arr_Rel_Insert_Input = {
  data: Array<Users_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Users_On_Conflict>;
};

/** aggregate avg on columns */
export type Users_Avg_Fields = {
  __typename?: 'users_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  failed_attempts?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  sign_in_count?: Maybe<Scalars['Float']['output']>;
  view_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "users" */
export type Users_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  failed_attempts?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  sign_in_count?: InputMaybe<Order_By>;
  view_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "users". All fields are combined with a logical 'AND'. */
export type Users_Bool_Exp = {
  _and?: InputMaybe<Array<Users_Bool_Exp>>;
  _not?: InputMaybe<Users_Bool_Exp>;
  _or?: InputMaybe<Array<Users_Bool_Exp>>;
  account?: InputMaybe<Accounts_Bool_Exp>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  current_sign_in_at?: InputMaybe<Timestamp_Comparison_Exp>;
  current_sign_in_ip?: InputMaybe<Inet_Comparison_Exp>;
  editable_projects?: InputMaybe<Project_Editors_Bool_Exp>;
  editable_projects_aggregate?: InputMaybe<Project_Editors_Aggregate_Bool_Exp>;
  email?: InputMaybe<String_Comparison_Exp>;
  encrypted_password?: InputMaybe<String_Comparison_Exp>;
  failed_attempts?: InputMaybe<Int_Comparison_Exp>;
  favourite_people?: InputMaybe<Jsonb_Comparison_Exp>;
  favourite_projects?: InputMaybe<Jsonb_Comparison_Exp>;
  filter_sets?: InputMaybe<User_Filter_Sets_Bool_Exp>;
  filter_sets_aggregate?: InputMaybe<User_Filter_Sets_Aggregate_Bool_Exp>;
  first_name?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  image_key?: InputMaybe<String_Comparison_Exp>;
  last_name?: InputMaybe<String_Comparison_Exp>;
  last_seen?: InputMaybe<Timestamp_Comparison_Exp>;
  last_sign_in_at?: InputMaybe<Timestamp_Comparison_Exp>;
  last_sign_in_ip?: InputMaybe<Inet_Comparison_Exp>;
  last_sign_in_method?: InputMaybe<String_Comparison_Exp>;
  locked_at?: InputMaybe<Timestamp_Comparison_Exp>;
  people?: InputMaybe<People_Bool_Exp>;
  people_aggregate?: InputMaybe<People_Aggregate_Bool_Exp>;
  permissions?: InputMaybe<Jsonb_Comparison_Exp>;
  references?: InputMaybe<Jsonb_Comparison_Exp>;
  remember_created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  reset_password_sent_at?: InputMaybe<Timestamp_Comparison_Exp>;
  reset_password_token?: InputMaybe<String_Comparison_Exp>;
  role_name?: InputMaybe<String_Comparison_Exp>;
  sign_in_count?: InputMaybe<Int_Comparison_Exp>;
  unlock_token?: InputMaybe<String_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
  view_id?: InputMaybe<Int_Comparison_Exp>;
  viewed_welcome?: InputMaybe<Boolean_Comparison_Exp>;
};

/** unique or primary key constraints on table "users" */
export enum Users_Constraint {
  /** unique or primary key constraint on columns "account_id", "id" */
  IndexUniqueUsersIdAccountId = 'index_unique_users_id_account_id',
  /** unique or primary key constraint on columns "email" */
  IndexUsersOnEmail = 'index_users_on_email',
  /** unique or primary key constraint on columns "reset_password_token" */
  IndexUsersOnResetPasswordToken = 'index_users_on_reset_password_token',
  /** unique or primary key constraint on columns "unlock_token" */
  IndexUsersOnUnlockToken = 'index_users_on_unlock_token',
  /** unique or primary key constraint on columns "id" */
  UsersPkey = 'users_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Users_Delete_At_Path_Input = {
  favourite_people?: InputMaybe<Array<Scalars['String']['input']>>;
  favourite_projects?: InputMaybe<Array<Scalars['String']['input']>>;
  permissions?: InputMaybe<Array<Scalars['String']['input']>>;
  references?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Users_Delete_Elem_Input = {
  favourite_people?: InputMaybe<Scalars['Int']['input']>;
  favourite_projects?: InputMaybe<Scalars['Int']['input']>;
  permissions?: InputMaybe<Scalars['Int']['input']>;
  references?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Users_Delete_Key_Input = {
  favourite_people?: InputMaybe<Scalars['String']['input']>;
  favourite_projects?: InputMaybe<Scalars['String']['input']>;
  permissions?: InputMaybe<Scalars['String']['input']>;
  references?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "users" */
export type Users_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  failed_attempts?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  sign_in_count?: InputMaybe<Scalars['Int']['input']>;
  view_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "users" */
export type Users_Insert_Input = {
  account?: InputMaybe<Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  current_sign_in_at?: InputMaybe<Scalars['timestamp']['input']>;
  current_sign_in_ip?: InputMaybe<Scalars['inet']['input']>;
  editable_projects?: InputMaybe<Project_Editors_Arr_Rel_Insert_Input>;
  email?: InputMaybe<Scalars['String']['input']>;
  encrypted_password?: InputMaybe<Scalars['String']['input']>;
  failed_attempts?: InputMaybe<Scalars['Int']['input']>;
  favourite_people?: InputMaybe<Scalars['jsonb']['input']>;
  favourite_projects?: InputMaybe<Scalars['jsonb']['input']>;
  filter_sets?: InputMaybe<User_Filter_Sets_Arr_Rel_Insert_Input>;
  first_name?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  image_key?: InputMaybe<Scalars['String']['input']>;
  last_name?: InputMaybe<Scalars['String']['input']>;
  last_seen?: InputMaybe<Scalars['timestamp']['input']>;
  last_sign_in_at?: InputMaybe<Scalars['timestamp']['input']>;
  last_sign_in_ip?: InputMaybe<Scalars['inet']['input']>;
  last_sign_in_method?: InputMaybe<Scalars['String']['input']>;
  locked_at?: InputMaybe<Scalars['timestamp']['input']>;
  people?: InputMaybe<People_Arr_Rel_Insert_Input>;
  permissions?: InputMaybe<Scalars['jsonb']['input']>;
  references?: InputMaybe<Scalars['jsonb']['input']>;
  remember_created_at?: InputMaybe<Scalars['timestamp']['input']>;
  reset_password_sent_at?: InputMaybe<Scalars['timestamp']['input']>;
  reset_password_token?: InputMaybe<Scalars['String']['input']>;
  role_name?: InputMaybe<Scalars['String']['input']>;
  sign_in_count?: InputMaybe<Scalars['Int']['input']>;
  unlock_token?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  view_id?: InputMaybe<Scalars['Int']['input']>;
  viewed_welcome?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate max on columns */
export type Users_Max_Fields = {
  __typename?: 'users_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  current_sign_in_at?: Maybe<Scalars['timestamp']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  encrypted_password?: Maybe<Scalars['String']['output']>;
  failed_attempts?: Maybe<Scalars['Int']['output']>;
  first_name?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  image_key?: Maybe<Scalars['String']['output']>;
  last_name?: Maybe<Scalars['String']['output']>;
  last_seen?: Maybe<Scalars['timestamp']['output']>;
  last_sign_in_at?: Maybe<Scalars['timestamp']['output']>;
  last_sign_in_method?: Maybe<Scalars['String']['output']>;
  locked_at?: Maybe<Scalars['timestamp']['output']>;
  remember_created_at?: Maybe<Scalars['timestamp']['output']>;
  reset_password_sent_at?: Maybe<Scalars['timestamp']['output']>;
  reset_password_token?: Maybe<Scalars['String']['output']>;
  role_name?: Maybe<Scalars['String']['output']>;
  sign_in_count?: Maybe<Scalars['Int']['output']>;
  unlock_token?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
  view_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "users" */
export type Users_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  current_sign_in_at?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  encrypted_password?: InputMaybe<Order_By>;
  failed_attempts?: InputMaybe<Order_By>;
  first_name?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_key?: InputMaybe<Order_By>;
  last_name?: InputMaybe<Order_By>;
  last_seen?: InputMaybe<Order_By>;
  last_sign_in_at?: InputMaybe<Order_By>;
  last_sign_in_method?: InputMaybe<Order_By>;
  locked_at?: InputMaybe<Order_By>;
  remember_created_at?: InputMaybe<Order_By>;
  reset_password_sent_at?: InputMaybe<Order_By>;
  reset_password_token?: InputMaybe<Order_By>;
  role_name?: InputMaybe<Order_By>;
  sign_in_count?: InputMaybe<Order_By>;
  unlock_token?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  view_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Users_Min_Fields = {
  __typename?: 'users_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  current_sign_in_at?: Maybe<Scalars['timestamp']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  encrypted_password?: Maybe<Scalars['String']['output']>;
  failed_attempts?: Maybe<Scalars['Int']['output']>;
  first_name?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  image_key?: Maybe<Scalars['String']['output']>;
  last_name?: Maybe<Scalars['String']['output']>;
  last_seen?: Maybe<Scalars['timestamp']['output']>;
  last_sign_in_at?: Maybe<Scalars['timestamp']['output']>;
  last_sign_in_method?: Maybe<Scalars['String']['output']>;
  locked_at?: Maybe<Scalars['timestamp']['output']>;
  remember_created_at?: Maybe<Scalars['timestamp']['output']>;
  reset_password_sent_at?: Maybe<Scalars['timestamp']['output']>;
  reset_password_token?: Maybe<Scalars['String']['output']>;
  role_name?: Maybe<Scalars['String']['output']>;
  sign_in_count?: Maybe<Scalars['Int']['output']>;
  unlock_token?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
  view_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "users" */
export type Users_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  current_sign_in_at?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  encrypted_password?: InputMaybe<Order_By>;
  failed_attempts?: InputMaybe<Order_By>;
  first_name?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_key?: InputMaybe<Order_By>;
  last_name?: InputMaybe<Order_By>;
  last_seen?: InputMaybe<Order_By>;
  last_sign_in_at?: InputMaybe<Order_By>;
  last_sign_in_method?: InputMaybe<Order_By>;
  locked_at?: InputMaybe<Order_By>;
  remember_created_at?: InputMaybe<Order_By>;
  reset_password_sent_at?: InputMaybe<Order_By>;
  reset_password_token?: InputMaybe<Order_By>;
  role_name?: InputMaybe<Order_By>;
  sign_in_count?: InputMaybe<Order_By>;
  unlock_token?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  view_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "users" */
export type Users_Mutation_Response = {
  __typename?: 'users_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Users>;
};

/** input type for inserting object relation for remote table "users" */
export type Users_Obj_Rel_Insert_Input = {
  data: Users_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Users_On_Conflict>;
};

/** on_conflict condition type for table "users" */
export type Users_On_Conflict = {
  constraint: Users_Constraint;
  update_columns?: Array<Users_Update_Column>;
  where?: InputMaybe<Users_Bool_Exp>;
};

/** Ordering options when selecting data from "users". */
export type Users_Order_By = {
  account?: InputMaybe<Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  current_sign_in_at?: InputMaybe<Order_By>;
  current_sign_in_ip?: InputMaybe<Order_By>;
  editable_projects_aggregate?: InputMaybe<Project_Editors_Aggregate_Order_By>;
  email?: InputMaybe<Order_By>;
  encrypted_password?: InputMaybe<Order_By>;
  failed_attempts?: InputMaybe<Order_By>;
  favourite_people?: InputMaybe<Order_By>;
  favourite_projects?: InputMaybe<Order_By>;
  filter_sets_aggregate?: InputMaybe<User_Filter_Sets_Aggregate_Order_By>;
  first_name?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image_key?: InputMaybe<Order_By>;
  last_name?: InputMaybe<Order_By>;
  last_seen?: InputMaybe<Order_By>;
  last_sign_in_at?: InputMaybe<Order_By>;
  last_sign_in_ip?: InputMaybe<Order_By>;
  last_sign_in_method?: InputMaybe<Order_By>;
  locked_at?: InputMaybe<Order_By>;
  people_aggregate?: InputMaybe<People_Aggregate_Order_By>;
  permissions?: InputMaybe<Order_By>;
  references?: InputMaybe<Order_By>;
  remember_created_at?: InputMaybe<Order_By>;
  reset_password_sent_at?: InputMaybe<Order_By>;
  reset_password_token?: InputMaybe<Order_By>;
  role_name?: InputMaybe<Order_By>;
  sign_in_count?: InputMaybe<Order_By>;
  unlock_token?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  view_id?: InputMaybe<Order_By>;
  viewed_welcome?: InputMaybe<Order_By>;
};

/** primary key columns input for table: users */
export type Users_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Users_Prepend_Input = {
  favourite_people?: InputMaybe<Scalars['jsonb']['input']>;
  favourite_projects?: InputMaybe<Scalars['jsonb']['input']>;
  permissions?: InputMaybe<Scalars['jsonb']['input']>;
  references?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "users" */
export enum Users_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CurrentSignInAt = 'current_sign_in_at',
  /** column name */
  CurrentSignInIp = 'current_sign_in_ip',
  /** column name */
  Email = 'email',
  /** column name */
  EncryptedPassword = 'encrypted_password',
  /** column name */
  FailedAttempts = 'failed_attempts',
  /** column name */
  FavouritePeople = 'favourite_people',
  /** column name */
  FavouriteProjects = 'favourite_projects',
  /** column name */
  FirstName = 'first_name',
  /** column name */
  Id = 'id',
  /** column name */
  ImageKey = 'image_key',
  /** column name */
  LastName = 'last_name',
  /** column name */
  LastSeen = 'last_seen',
  /** column name */
  LastSignInAt = 'last_sign_in_at',
  /** column name */
  LastSignInIp = 'last_sign_in_ip',
  /** column name */
  LastSignInMethod = 'last_sign_in_method',
  /** column name */
  LockedAt = 'locked_at',
  /** column name */
  Permissions = 'permissions',
  /** column name */
  References = 'references',
  /** column name */
  RememberCreatedAt = 'remember_created_at',
  /** column name */
  ResetPasswordSentAt = 'reset_password_sent_at',
  /** column name */
  ResetPasswordToken = 'reset_password_token',
  /** column name */
  RoleName = 'role_name',
  /** column name */
  SignInCount = 'sign_in_count',
  /** column name */
  UnlockToken = 'unlock_token',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  ViewId = 'view_id',
  /** column name */
  ViewedWelcome = 'viewed_welcome'
}

/** select "users_aggregate_bool_exp_bool_and_arguments_columns" columns of table "users" */
export enum Users_Select_Column_Users_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  ViewedWelcome = 'viewed_welcome'
}

/** select "users_aggregate_bool_exp_bool_or_arguments_columns" columns of table "users" */
export enum Users_Select_Column_Users_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  ViewedWelcome = 'viewed_welcome'
}

/** input type for updating data in table "users" */
export type Users_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  current_sign_in_at?: InputMaybe<Scalars['timestamp']['input']>;
  current_sign_in_ip?: InputMaybe<Scalars['inet']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  encrypted_password?: InputMaybe<Scalars['String']['input']>;
  failed_attempts?: InputMaybe<Scalars['Int']['input']>;
  favourite_people?: InputMaybe<Scalars['jsonb']['input']>;
  favourite_projects?: InputMaybe<Scalars['jsonb']['input']>;
  first_name?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  image_key?: InputMaybe<Scalars['String']['input']>;
  last_name?: InputMaybe<Scalars['String']['input']>;
  last_seen?: InputMaybe<Scalars['timestamp']['input']>;
  last_sign_in_at?: InputMaybe<Scalars['timestamp']['input']>;
  last_sign_in_ip?: InputMaybe<Scalars['inet']['input']>;
  last_sign_in_method?: InputMaybe<Scalars['String']['input']>;
  locked_at?: InputMaybe<Scalars['timestamp']['input']>;
  permissions?: InputMaybe<Scalars['jsonb']['input']>;
  references?: InputMaybe<Scalars['jsonb']['input']>;
  remember_created_at?: InputMaybe<Scalars['timestamp']['input']>;
  reset_password_sent_at?: InputMaybe<Scalars['timestamp']['input']>;
  reset_password_token?: InputMaybe<Scalars['String']['input']>;
  role_name?: InputMaybe<Scalars['String']['input']>;
  sign_in_count?: InputMaybe<Scalars['Int']['input']>;
  unlock_token?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  view_id?: InputMaybe<Scalars['Int']['input']>;
  viewed_welcome?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate stddev on columns */
export type Users_Stddev_Fields = {
  __typename?: 'users_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  failed_attempts?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  sign_in_count?: Maybe<Scalars['Float']['output']>;
  view_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "users" */
export type Users_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  failed_attempts?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  sign_in_count?: InputMaybe<Order_By>;
  view_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Users_Stddev_Pop_Fields = {
  __typename?: 'users_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  failed_attempts?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  sign_in_count?: Maybe<Scalars['Float']['output']>;
  view_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "users" */
export type Users_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  failed_attempts?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  sign_in_count?: InputMaybe<Order_By>;
  view_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Users_Stddev_Samp_Fields = {
  __typename?: 'users_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  failed_attempts?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  sign_in_count?: Maybe<Scalars['Float']['output']>;
  view_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "users" */
export type Users_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  failed_attempts?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  sign_in_count?: InputMaybe<Order_By>;
  view_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "users" */
export type Users_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Users_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Users_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  current_sign_in_at?: InputMaybe<Scalars['timestamp']['input']>;
  current_sign_in_ip?: InputMaybe<Scalars['inet']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  encrypted_password?: InputMaybe<Scalars['String']['input']>;
  failed_attempts?: InputMaybe<Scalars['Int']['input']>;
  favourite_people?: InputMaybe<Scalars['jsonb']['input']>;
  favourite_projects?: InputMaybe<Scalars['jsonb']['input']>;
  first_name?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  image_key?: InputMaybe<Scalars['String']['input']>;
  last_name?: InputMaybe<Scalars['String']['input']>;
  last_seen?: InputMaybe<Scalars['timestamp']['input']>;
  last_sign_in_at?: InputMaybe<Scalars['timestamp']['input']>;
  last_sign_in_ip?: InputMaybe<Scalars['inet']['input']>;
  last_sign_in_method?: InputMaybe<Scalars['String']['input']>;
  locked_at?: InputMaybe<Scalars['timestamp']['input']>;
  permissions?: InputMaybe<Scalars['jsonb']['input']>;
  references?: InputMaybe<Scalars['jsonb']['input']>;
  remember_created_at?: InputMaybe<Scalars['timestamp']['input']>;
  reset_password_sent_at?: InputMaybe<Scalars['timestamp']['input']>;
  reset_password_token?: InputMaybe<Scalars['String']['input']>;
  role_name?: InputMaybe<Scalars['String']['input']>;
  sign_in_count?: InputMaybe<Scalars['Int']['input']>;
  unlock_token?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
  view_id?: InputMaybe<Scalars['Int']['input']>;
  viewed_welcome?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate sum on columns */
export type Users_Sum_Fields = {
  __typename?: 'users_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  failed_attempts?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  sign_in_count?: Maybe<Scalars['Int']['output']>;
  view_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "users" */
export type Users_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  failed_attempts?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  sign_in_count?: InputMaybe<Order_By>;
  view_id?: InputMaybe<Order_By>;
};

/** update columns of table "users" */
export enum Users_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CurrentSignInAt = 'current_sign_in_at',
  /** column name */
  CurrentSignInIp = 'current_sign_in_ip',
  /** column name */
  Email = 'email',
  /** column name */
  EncryptedPassword = 'encrypted_password',
  /** column name */
  FailedAttempts = 'failed_attempts',
  /** column name */
  FavouritePeople = 'favourite_people',
  /** column name */
  FavouriteProjects = 'favourite_projects',
  /** column name */
  FirstName = 'first_name',
  /** column name */
  Id = 'id',
  /** column name */
  ImageKey = 'image_key',
  /** column name */
  LastName = 'last_name',
  /** column name */
  LastSeen = 'last_seen',
  /** column name */
  LastSignInAt = 'last_sign_in_at',
  /** column name */
  LastSignInIp = 'last_sign_in_ip',
  /** column name */
  LastSignInMethod = 'last_sign_in_method',
  /** column name */
  LockedAt = 'locked_at',
  /** column name */
  Permissions = 'permissions',
  /** column name */
  References = 'references',
  /** column name */
  RememberCreatedAt = 'remember_created_at',
  /** column name */
  ResetPasswordSentAt = 'reset_password_sent_at',
  /** column name */
  ResetPasswordToken = 'reset_password_token',
  /** column name */
  RoleName = 'role_name',
  /** column name */
  SignInCount = 'sign_in_count',
  /** column name */
  UnlockToken = 'unlock_token',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  ViewId = 'view_id',
  /** column name */
  ViewedWelcome = 'viewed_welcome'
}

export type Users_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Users_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Users_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Users_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Users_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Users_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Users_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Users_Set_Input>;
  /** filter the rows which have to be updated */
  where: Users_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Users_Var_Pop_Fields = {
  __typename?: 'users_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  failed_attempts?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  sign_in_count?: Maybe<Scalars['Float']['output']>;
  view_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "users" */
export type Users_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  failed_attempts?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  sign_in_count?: InputMaybe<Order_By>;
  view_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Users_Var_Samp_Fields = {
  __typename?: 'users_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  failed_attempts?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  sign_in_count?: Maybe<Scalars['Float']['output']>;
  view_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "users" */
export type Users_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  failed_attempts?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  sign_in_count?: InputMaybe<Order_By>;
  view_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Users_Variance_Fields = {
  __typename?: 'users_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  failed_attempts?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  sign_in_count?: Maybe<Scalars['Float']['output']>;
  view_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "users" */
export type Users_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  failed_attempts?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  sign_in_count?: InputMaybe<Order_By>;
  view_id?: InputMaybe<Order_By>;
};

/** Boolean expression to compare columns of type "uuid". All fields are combined with logical 'AND'. */
export type Uuid_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['uuid']['input']>;
  _gt?: InputMaybe<Scalars['uuid']['input']>;
  _gte?: InputMaybe<Scalars['uuid']['input']>;
  _in?: InputMaybe<Array<Scalars['uuid']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['uuid']['input']>;
  _lte?: InputMaybe<Scalars['uuid']['input']>;
  _neq?: InputMaybe<Scalars['uuid']['input']>;
  _nin?: InputMaybe<Array<Scalars['uuid']['input']>>;
};

/** columns and relationships of "v_summary_total" */
export type V_Summary_Total = {
  __typename?: 'v_summary_total';
  account_id?: Maybe<Scalars['Int']['output']>;
  actual_phase_id?: Maybe<Scalars['Int']['output']>;
  assignment_phase_id?: Maybe<Scalars['Int']['output']>;
  minutes_phase_id?: Maybe<Scalars['Int']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  role_id?: Maybe<Scalars['Int']['output']>;
  total_actuals_billable_minutes?: Maybe<Scalars['numeric']['output']>;
  total_actuals_nonbillable_minutes?: Maybe<Scalars['numeric']['output']>;
  total_assignment_billable_minutes?: Maybe<Scalars['numeric']['output']>;
  total_assignment_nonbillable_minutes?: Maybe<Scalars['numeric']['output']>;
  total_billable_minutes?: Maybe<Scalars['numeric']['output']>;
  total_nonbillable_minutes?: Maybe<Scalars['numeric']['output']>;
};

/** aggregated selection of "v_summary_total" */
export type V_Summary_Total_Aggregate = {
  __typename?: 'v_summary_total_aggregate';
  aggregate?: Maybe<V_Summary_Total_Aggregate_Fields>;
  nodes: Array<V_Summary_Total>;
};

export type V_Summary_Total_Aggregate_Bool_Exp = {
  count?: InputMaybe<V_Summary_Total_Aggregate_Bool_Exp_Count>;
};

export type V_Summary_Total_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<V_Summary_Total_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<V_Summary_Total_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "v_summary_total" */
export type V_Summary_Total_Aggregate_Fields = {
  __typename?: 'v_summary_total_aggregate_fields';
  avg?: Maybe<V_Summary_Total_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<V_Summary_Total_Max_Fields>;
  min?: Maybe<V_Summary_Total_Min_Fields>;
  stddev?: Maybe<V_Summary_Total_Stddev_Fields>;
  stddev_pop?: Maybe<V_Summary_Total_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<V_Summary_Total_Stddev_Samp_Fields>;
  sum?: Maybe<V_Summary_Total_Sum_Fields>;
  var_pop?: Maybe<V_Summary_Total_Var_Pop_Fields>;
  var_samp?: Maybe<V_Summary_Total_Var_Samp_Fields>;
  variance?: Maybe<V_Summary_Total_Variance_Fields>;
};


/** aggregate fields of "v_summary_total" */
export type V_Summary_Total_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<V_Summary_Total_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "v_summary_total" */
export type V_Summary_Total_Aggregate_Order_By = {
  avg?: InputMaybe<V_Summary_Total_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<V_Summary_Total_Max_Order_By>;
  min?: InputMaybe<V_Summary_Total_Min_Order_By>;
  stddev?: InputMaybe<V_Summary_Total_Stddev_Order_By>;
  stddev_pop?: InputMaybe<V_Summary_Total_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<V_Summary_Total_Stddev_Samp_Order_By>;
  sum?: InputMaybe<V_Summary_Total_Sum_Order_By>;
  var_pop?: InputMaybe<V_Summary_Total_Var_Pop_Order_By>;
  var_samp?: InputMaybe<V_Summary_Total_Var_Samp_Order_By>;
  variance?: InputMaybe<V_Summary_Total_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "v_summary_total" */
export type V_Summary_Total_Arr_Rel_Insert_Input = {
  data: Array<V_Summary_Total_Insert_Input>;
};

/** aggregate avg on columns */
export type V_Summary_Total_Avg_Fields = {
  __typename?: 'v_summary_total_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  actual_phase_id?: Maybe<Scalars['Float']['output']>;
  assignment_phase_id?: Maybe<Scalars['Float']['output']>;
  minutes_phase_id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
  total_actuals_billable_minutes?: Maybe<Scalars['Float']['output']>;
  total_actuals_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
  total_assignment_billable_minutes?: Maybe<Scalars['Float']['output']>;
  total_assignment_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
  total_billable_minutes?: Maybe<Scalars['Float']['output']>;
  total_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "v_summary_total" */
export type V_Summary_Total_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  actual_phase_id?: InputMaybe<Order_By>;
  assignment_phase_id?: InputMaybe<Order_By>;
  minutes_phase_id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  total_actuals_billable_minutes?: InputMaybe<Order_By>;
  total_actuals_nonbillable_minutes?: InputMaybe<Order_By>;
  total_assignment_billable_minutes?: InputMaybe<Order_By>;
  total_assignment_nonbillable_minutes?: InputMaybe<Order_By>;
  total_billable_minutes?: InputMaybe<Order_By>;
  total_nonbillable_minutes?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "v_summary_total". All fields are combined with a logical 'AND'. */
export type V_Summary_Total_Bool_Exp = {
  _and?: InputMaybe<Array<V_Summary_Total_Bool_Exp>>;
  _not?: InputMaybe<V_Summary_Total_Bool_Exp>;
  _or?: InputMaybe<Array<V_Summary_Total_Bool_Exp>>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  actual_phase_id?: InputMaybe<Int_Comparison_Exp>;
  assignment_phase_id?: InputMaybe<Int_Comparison_Exp>;
  minutes_phase_id?: InputMaybe<Int_Comparison_Exp>;
  person_id?: InputMaybe<Int_Comparison_Exp>;
  project_id?: InputMaybe<Int_Comparison_Exp>;
  role_id?: InputMaybe<Int_Comparison_Exp>;
  total_actuals_billable_minutes?: InputMaybe<Numeric_Comparison_Exp>;
  total_actuals_nonbillable_minutes?: InputMaybe<Numeric_Comparison_Exp>;
  total_assignment_billable_minutes?: InputMaybe<Numeric_Comparison_Exp>;
  total_assignment_nonbillable_minutes?: InputMaybe<Numeric_Comparison_Exp>;
  total_billable_minutes?: InputMaybe<Numeric_Comparison_Exp>;
  total_nonbillable_minutes?: InputMaybe<Numeric_Comparison_Exp>;
};

/** input type for inserting data into table "v_summary_total" */
export type V_Summary_Total_Insert_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  actual_phase_id?: InputMaybe<Scalars['Int']['input']>;
  assignment_phase_id?: InputMaybe<Scalars['Int']['input']>;
  minutes_phase_id?: InputMaybe<Scalars['Int']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
  total_actuals_billable_minutes?: InputMaybe<Scalars['numeric']['input']>;
  total_actuals_nonbillable_minutes?: InputMaybe<Scalars['numeric']['input']>;
  total_assignment_billable_minutes?: InputMaybe<Scalars['numeric']['input']>;
  total_assignment_nonbillable_minutes?: InputMaybe<Scalars['numeric']['input']>;
  total_billable_minutes?: InputMaybe<Scalars['numeric']['input']>;
  total_nonbillable_minutes?: InputMaybe<Scalars['numeric']['input']>;
};

/** aggregate max on columns */
export type V_Summary_Total_Max_Fields = {
  __typename?: 'v_summary_total_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  actual_phase_id?: Maybe<Scalars['Int']['output']>;
  assignment_phase_id?: Maybe<Scalars['Int']['output']>;
  minutes_phase_id?: Maybe<Scalars['Int']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  role_id?: Maybe<Scalars['Int']['output']>;
  total_actuals_billable_minutes?: Maybe<Scalars['numeric']['output']>;
  total_actuals_nonbillable_minutes?: Maybe<Scalars['numeric']['output']>;
  total_assignment_billable_minutes?: Maybe<Scalars['numeric']['output']>;
  total_assignment_nonbillable_minutes?: Maybe<Scalars['numeric']['output']>;
  total_billable_minutes?: Maybe<Scalars['numeric']['output']>;
  total_nonbillable_minutes?: Maybe<Scalars['numeric']['output']>;
};

/** order by max() on columns of table "v_summary_total" */
export type V_Summary_Total_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  actual_phase_id?: InputMaybe<Order_By>;
  assignment_phase_id?: InputMaybe<Order_By>;
  minutes_phase_id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  total_actuals_billable_minutes?: InputMaybe<Order_By>;
  total_actuals_nonbillable_minutes?: InputMaybe<Order_By>;
  total_assignment_billable_minutes?: InputMaybe<Order_By>;
  total_assignment_nonbillable_minutes?: InputMaybe<Order_By>;
  total_billable_minutes?: InputMaybe<Order_By>;
  total_nonbillable_minutes?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type V_Summary_Total_Min_Fields = {
  __typename?: 'v_summary_total_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  actual_phase_id?: Maybe<Scalars['Int']['output']>;
  assignment_phase_id?: Maybe<Scalars['Int']['output']>;
  minutes_phase_id?: Maybe<Scalars['Int']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  role_id?: Maybe<Scalars['Int']['output']>;
  total_actuals_billable_minutes?: Maybe<Scalars['numeric']['output']>;
  total_actuals_nonbillable_minutes?: Maybe<Scalars['numeric']['output']>;
  total_assignment_billable_minutes?: Maybe<Scalars['numeric']['output']>;
  total_assignment_nonbillable_minutes?: Maybe<Scalars['numeric']['output']>;
  total_billable_minutes?: Maybe<Scalars['numeric']['output']>;
  total_nonbillable_minutes?: Maybe<Scalars['numeric']['output']>;
};

/** order by min() on columns of table "v_summary_total" */
export type V_Summary_Total_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  actual_phase_id?: InputMaybe<Order_By>;
  assignment_phase_id?: InputMaybe<Order_By>;
  minutes_phase_id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  total_actuals_billable_minutes?: InputMaybe<Order_By>;
  total_actuals_nonbillable_minutes?: InputMaybe<Order_By>;
  total_assignment_billable_minutes?: InputMaybe<Order_By>;
  total_assignment_nonbillable_minutes?: InputMaybe<Order_By>;
  total_billable_minutes?: InputMaybe<Order_By>;
  total_nonbillable_minutes?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "v_summary_total". */
export type V_Summary_Total_Order_By = {
  account_id?: InputMaybe<Order_By>;
  actual_phase_id?: InputMaybe<Order_By>;
  assignment_phase_id?: InputMaybe<Order_By>;
  minutes_phase_id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  total_actuals_billable_minutes?: InputMaybe<Order_By>;
  total_actuals_nonbillable_minutes?: InputMaybe<Order_By>;
  total_assignment_billable_minutes?: InputMaybe<Order_By>;
  total_assignment_nonbillable_minutes?: InputMaybe<Order_By>;
  total_billable_minutes?: InputMaybe<Order_By>;
  total_nonbillable_minutes?: InputMaybe<Order_By>;
};

/** select columns of table "v_summary_total" */
export enum V_Summary_Total_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  ActualPhaseId = 'actual_phase_id',
  /** column name */
  AssignmentPhaseId = 'assignment_phase_id',
  /** column name */
  MinutesPhaseId = 'minutes_phase_id',
  /** column name */
  PersonId = 'person_id',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  RoleId = 'role_id',
  /** column name */
  TotalActualsBillableMinutes = 'total_actuals_billable_minutes',
  /** column name */
  TotalActualsNonbillableMinutes = 'total_actuals_nonbillable_minutes',
  /** column name */
  TotalAssignmentBillableMinutes = 'total_assignment_billable_minutes',
  /** column name */
  TotalAssignmentNonbillableMinutes = 'total_assignment_nonbillable_minutes',
  /** column name */
  TotalBillableMinutes = 'total_billable_minutes',
  /** column name */
  TotalNonbillableMinutes = 'total_nonbillable_minutes'
}

/** aggregate stddev on columns */
export type V_Summary_Total_Stddev_Fields = {
  __typename?: 'v_summary_total_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  actual_phase_id?: Maybe<Scalars['Float']['output']>;
  assignment_phase_id?: Maybe<Scalars['Float']['output']>;
  minutes_phase_id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
  total_actuals_billable_minutes?: Maybe<Scalars['Float']['output']>;
  total_actuals_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
  total_assignment_billable_minutes?: Maybe<Scalars['Float']['output']>;
  total_assignment_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
  total_billable_minutes?: Maybe<Scalars['Float']['output']>;
  total_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "v_summary_total" */
export type V_Summary_Total_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  actual_phase_id?: InputMaybe<Order_By>;
  assignment_phase_id?: InputMaybe<Order_By>;
  minutes_phase_id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  total_actuals_billable_minutes?: InputMaybe<Order_By>;
  total_actuals_nonbillable_minutes?: InputMaybe<Order_By>;
  total_assignment_billable_minutes?: InputMaybe<Order_By>;
  total_assignment_nonbillable_minutes?: InputMaybe<Order_By>;
  total_billable_minutes?: InputMaybe<Order_By>;
  total_nonbillable_minutes?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type V_Summary_Total_Stddev_Pop_Fields = {
  __typename?: 'v_summary_total_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  actual_phase_id?: Maybe<Scalars['Float']['output']>;
  assignment_phase_id?: Maybe<Scalars['Float']['output']>;
  minutes_phase_id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
  total_actuals_billable_minutes?: Maybe<Scalars['Float']['output']>;
  total_actuals_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
  total_assignment_billable_minutes?: Maybe<Scalars['Float']['output']>;
  total_assignment_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
  total_billable_minutes?: Maybe<Scalars['Float']['output']>;
  total_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "v_summary_total" */
export type V_Summary_Total_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  actual_phase_id?: InputMaybe<Order_By>;
  assignment_phase_id?: InputMaybe<Order_By>;
  minutes_phase_id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  total_actuals_billable_minutes?: InputMaybe<Order_By>;
  total_actuals_nonbillable_minutes?: InputMaybe<Order_By>;
  total_assignment_billable_minutes?: InputMaybe<Order_By>;
  total_assignment_nonbillable_minutes?: InputMaybe<Order_By>;
  total_billable_minutes?: InputMaybe<Order_By>;
  total_nonbillable_minutes?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type V_Summary_Total_Stddev_Samp_Fields = {
  __typename?: 'v_summary_total_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  actual_phase_id?: Maybe<Scalars['Float']['output']>;
  assignment_phase_id?: Maybe<Scalars['Float']['output']>;
  minutes_phase_id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
  total_actuals_billable_minutes?: Maybe<Scalars['Float']['output']>;
  total_actuals_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
  total_assignment_billable_minutes?: Maybe<Scalars['Float']['output']>;
  total_assignment_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
  total_billable_minutes?: Maybe<Scalars['Float']['output']>;
  total_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "v_summary_total" */
export type V_Summary_Total_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  actual_phase_id?: InputMaybe<Order_By>;
  assignment_phase_id?: InputMaybe<Order_By>;
  minutes_phase_id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  total_actuals_billable_minutes?: InputMaybe<Order_By>;
  total_actuals_nonbillable_minutes?: InputMaybe<Order_By>;
  total_assignment_billable_minutes?: InputMaybe<Order_By>;
  total_assignment_nonbillable_minutes?: InputMaybe<Order_By>;
  total_billable_minutes?: InputMaybe<Order_By>;
  total_nonbillable_minutes?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "v_summary_total" */
export type V_Summary_Total_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: V_Summary_Total_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type V_Summary_Total_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  actual_phase_id?: InputMaybe<Scalars['Int']['input']>;
  assignment_phase_id?: InputMaybe<Scalars['Int']['input']>;
  minutes_phase_id?: InputMaybe<Scalars['Int']['input']>;
  person_id?: InputMaybe<Scalars['Int']['input']>;
  project_id?: InputMaybe<Scalars['Int']['input']>;
  role_id?: InputMaybe<Scalars['Int']['input']>;
  total_actuals_billable_minutes?: InputMaybe<Scalars['numeric']['input']>;
  total_actuals_nonbillable_minutes?: InputMaybe<Scalars['numeric']['input']>;
  total_assignment_billable_minutes?: InputMaybe<Scalars['numeric']['input']>;
  total_assignment_nonbillable_minutes?: InputMaybe<Scalars['numeric']['input']>;
  total_billable_minutes?: InputMaybe<Scalars['numeric']['input']>;
  total_nonbillable_minutes?: InputMaybe<Scalars['numeric']['input']>;
};

/** aggregate sum on columns */
export type V_Summary_Total_Sum_Fields = {
  __typename?: 'v_summary_total_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  actual_phase_id?: Maybe<Scalars['Int']['output']>;
  assignment_phase_id?: Maybe<Scalars['Int']['output']>;
  minutes_phase_id?: Maybe<Scalars['Int']['output']>;
  person_id?: Maybe<Scalars['Int']['output']>;
  project_id?: Maybe<Scalars['Int']['output']>;
  role_id?: Maybe<Scalars['Int']['output']>;
  total_actuals_billable_minutes?: Maybe<Scalars['numeric']['output']>;
  total_actuals_nonbillable_minutes?: Maybe<Scalars['numeric']['output']>;
  total_assignment_billable_minutes?: Maybe<Scalars['numeric']['output']>;
  total_assignment_nonbillable_minutes?: Maybe<Scalars['numeric']['output']>;
  total_billable_minutes?: Maybe<Scalars['numeric']['output']>;
  total_nonbillable_minutes?: Maybe<Scalars['numeric']['output']>;
};

/** order by sum() on columns of table "v_summary_total" */
export type V_Summary_Total_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  actual_phase_id?: InputMaybe<Order_By>;
  assignment_phase_id?: InputMaybe<Order_By>;
  minutes_phase_id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  total_actuals_billable_minutes?: InputMaybe<Order_By>;
  total_actuals_nonbillable_minutes?: InputMaybe<Order_By>;
  total_assignment_billable_minutes?: InputMaybe<Order_By>;
  total_assignment_nonbillable_minutes?: InputMaybe<Order_By>;
  total_billable_minutes?: InputMaybe<Order_By>;
  total_nonbillable_minutes?: InputMaybe<Order_By>;
};

/** aggregate var_pop on columns */
export type V_Summary_Total_Var_Pop_Fields = {
  __typename?: 'v_summary_total_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  actual_phase_id?: Maybe<Scalars['Float']['output']>;
  assignment_phase_id?: Maybe<Scalars['Float']['output']>;
  minutes_phase_id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
  total_actuals_billable_minutes?: Maybe<Scalars['Float']['output']>;
  total_actuals_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
  total_assignment_billable_minutes?: Maybe<Scalars['Float']['output']>;
  total_assignment_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
  total_billable_minutes?: Maybe<Scalars['Float']['output']>;
  total_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "v_summary_total" */
export type V_Summary_Total_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  actual_phase_id?: InputMaybe<Order_By>;
  assignment_phase_id?: InputMaybe<Order_By>;
  minutes_phase_id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  total_actuals_billable_minutes?: InputMaybe<Order_By>;
  total_actuals_nonbillable_minutes?: InputMaybe<Order_By>;
  total_assignment_billable_minutes?: InputMaybe<Order_By>;
  total_assignment_nonbillable_minutes?: InputMaybe<Order_By>;
  total_billable_minutes?: InputMaybe<Order_By>;
  total_nonbillable_minutes?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type V_Summary_Total_Var_Samp_Fields = {
  __typename?: 'v_summary_total_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  actual_phase_id?: Maybe<Scalars['Float']['output']>;
  assignment_phase_id?: Maybe<Scalars['Float']['output']>;
  minutes_phase_id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
  total_actuals_billable_minutes?: Maybe<Scalars['Float']['output']>;
  total_actuals_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
  total_assignment_billable_minutes?: Maybe<Scalars['Float']['output']>;
  total_assignment_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
  total_billable_minutes?: Maybe<Scalars['Float']['output']>;
  total_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "v_summary_total" */
export type V_Summary_Total_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  actual_phase_id?: InputMaybe<Order_By>;
  assignment_phase_id?: InputMaybe<Order_By>;
  minutes_phase_id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  total_actuals_billable_minutes?: InputMaybe<Order_By>;
  total_actuals_nonbillable_minutes?: InputMaybe<Order_By>;
  total_assignment_billable_minutes?: InputMaybe<Order_By>;
  total_assignment_nonbillable_minutes?: InputMaybe<Order_By>;
  total_billable_minutes?: InputMaybe<Order_By>;
  total_nonbillable_minutes?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type V_Summary_Total_Variance_Fields = {
  __typename?: 'v_summary_total_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  actual_phase_id?: Maybe<Scalars['Float']['output']>;
  assignment_phase_id?: Maybe<Scalars['Float']['output']>;
  minutes_phase_id?: Maybe<Scalars['Float']['output']>;
  person_id?: Maybe<Scalars['Float']['output']>;
  project_id?: Maybe<Scalars['Float']['output']>;
  role_id?: Maybe<Scalars['Float']['output']>;
  total_actuals_billable_minutes?: Maybe<Scalars['Float']['output']>;
  total_actuals_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
  total_assignment_billable_minutes?: Maybe<Scalars['Float']['output']>;
  total_assignment_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
  total_billable_minutes?: Maybe<Scalars['Float']['output']>;
  total_nonbillable_minutes?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "v_summary_total" */
export type V_Summary_Total_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  actual_phase_id?: InputMaybe<Order_By>;
  assignment_phase_id?: InputMaybe<Order_By>;
  minutes_phase_id?: InputMaybe<Order_By>;
  person_id?: InputMaybe<Order_By>;
  project_id?: InputMaybe<Order_By>;
  role_id?: InputMaybe<Order_By>;
  total_actuals_billable_minutes?: InputMaybe<Order_By>;
  total_actuals_nonbillable_minutes?: InputMaybe<Order_By>;
  total_assignment_billable_minutes?: InputMaybe<Order_By>;
  total_assignment_nonbillable_minutes?: InputMaybe<Order_By>;
  total_billable_minutes?: InputMaybe<Order_By>;
  total_nonbillable_minutes?: InputMaybe<Order_By>;
};

/** columns and relationships of "views" */
export type Views = {
  __typename?: 'views';
  /** An object relationship */
  account: Accounts;
  account_id: Scalars['Int']['output'];
  created_at: Scalars['timestamp']['output'];
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  people_filters: Scalars['jsonb']['output'];
  project_filters: Scalars['jsonb']['output'];
  updated_at: Scalars['timestamp']['output'];
};


/** columns and relationships of "views" */
export type ViewsPeople_FiltersArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** columns and relationships of "views" */
export type ViewsProject_FiltersArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "views" */
export type Views_Aggregate = {
  __typename?: 'views_aggregate';
  aggregate?: Maybe<Views_Aggregate_Fields>;
  nodes: Array<Views>;
};

export type Views_Aggregate_Bool_Exp = {
  count?: InputMaybe<Views_Aggregate_Bool_Exp_Count>;
};

export type Views_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Views_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Views_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "views" */
export type Views_Aggregate_Fields = {
  __typename?: 'views_aggregate_fields';
  avg?: Maybe<Views_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Views_Max_Fields>;
  min?: Maybe<Views_Min_Fields>;
  stddev?: Maybe<Views_Stddev_Fields>;
  stddev_pop?: Maybe<Views_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Views_Stddev_Samp_Fields>;
  sum?: Maybe<Views_Sum_Fields>;
  var_pop?: Maybe<Views_Var_Pop_Fields>;
  var_samp?: Maybe<Views_Var_Samp_Fields>;
  variance?: Maybe<Views_Variance_Fields>;
};


/** aggregate fields of "views" */
export type Views_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Views_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "views" */
export type Views_Aggregate_Order_By = {
  avg?: InputMaybe<Views_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Views_Max_Order_By>;
  min?: InputMaybe<Views_Min_Order_By>;
  stddev?: InputMaybe<Views_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Views_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Views_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Views_Sum_Order_By>;
  var_pop?: InputMaybe<Views_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Views_Var_Samp_Order_By>;
  variance?: InputMaybe<Views_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Views_Append_Input = {
  people_filters?: InputMaybe<Scalars['jsonb']['input']>;
  project_filters?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "views" */
export type Views_Arr_Rel_Insert_Input = {
  data: Array<Views_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Views_On_Conflict>;
};

/** aggregate avg on columns */
export type Views_Avg_Fields = {
  __typename?: 'views_avg_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "views" */
export type Views_Avg_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "views". All fields are combined with a logical 'AND'. */
export type Views_Bool_Exp = {
  _and?: InputMaybe<Array<Views_Bool_Exp>>;
  _not?: InputMaybe<Views_Bool_Exp>;
  _or?: InputMaybe<Array<Views_Bool_Exp>>;
  account?: InputMaybe<Accounts_Bool_Exp>;
  account_id?: InputMaybe<Int_Comparison_Exp>;
  created_at?: InputMaybe<Timestamp_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  people_filters?: InputMaybe<Jsonb_Comparison_Exp>;
  project_filters?: InputMaybe<Jsonb_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamp_Comparison_Exp>;
};

/** unique or primary key constraints on table "views" */
export enum Views_Constraint {
  /** unique or primary key constraint on columns "id" */
  ViewsPkey = 'views_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Views_Delete_At_Path_Input = {
  people_filters?: InputMaybe<Array<Scalars['String']['input']>>;
  project_filters?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Views_Delete_Elem_Input = {
  people_filters?: InputMaybe<Scalars['Int']['input']>;
  project_filters?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Views_Delete_Key_Input = {
  people_filters?: InputMaybe<Scalars['String']['input']>;
  project_filters?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "views" */
export type Views_Inc_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "views" */
export type Views_Insert_Input = {
  account?: InputMaybe<Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  people_filters?: InputMaybe<Scalars['jsonb']['input']>;
  project_filters?: InputMaybe<Scalars['jsonb']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate max on columns */
export type Views_Max_Fields = {
  __typename?: 'views_max_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by max() on columns of table "views" */
export type Views_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Views_Min_Fields = {
  __typename?: 'views_min_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  created_at?: Maybe<Scalars['timestamp']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['timestamp']['output']>;
};

/** order by min() on columns of table "views" */
export type Views_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "views" */
export type Views_Mutation_Response = {
  __typename?: 'views_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Views>;
};

/** on_conflict condition type for table "views" */
export type Views_On_Conflict = {
  constraint: Views_Constraint;
  update_columns?: Array<Views_Update_Column>;
  where?: InputMaybe<Views_Bool_Exp>;
};

/** Ordering options when selecting data from "views". */
export type Views_Order_By = {
  account?: InputMaybe<Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  people_filters?: InputMaybe<Order_By>;
  project_filters?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: views */
export type Views_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Views_Prepend_Input = {
  people_filters?: InputMaybe<Scalars['jsonb']['input']>;
  project_filters?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "views" */
export enum Views_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  PeopleFilters = 'people_filters',
  /** column name */
  ProjectFilters = 'project_filters',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "views" */
export type Views_Set_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  people_filters?: InputMaybe<Scalars['jsonb']['input']>;
  project_filters?: InputMaybe<Scalars['jsonb']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate stddev on columns */
export type Views_Stddev_Fields = {
  __typename?: 'views_stddev_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "views" */
export type Views_Stddev_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Views_Stddev_Pop_Fields = {
  __typename?: 'views_stddev_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "views" */
export type Views_Stddev_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Views_Stddev_Samp_Fields = {
  __typename?: 'views_stddev_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "views" */
export type Views_Stddev_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "views" */
export type Views_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Views_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Views_Stream_Cursor_Value_Input = {
  account_id?: InputMaybe<Scalars['Int']['input']>;
  created_at?: InputMaybe<Scalars['timestamp']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  people_filters?: InputMaybe<Scalars['jsonb']['input']>;
  project_filters?: InputMaybe<Scalars['jsonb']['input']>;
  updated_at?: InputMaybe<Scalars['timestamp']['input']>;
};

/** aggregate sum on columns */
export type Views_Sum_Fields = {
  __typename?: 'views_sum_fields';
  account_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "views" */
export type Views_Sum_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "views" */
export enum Views_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  PeopleFilters = 'people_filters',
  /** column name */
  ProjectFilters = 'project_filters',
  /** column name */
  UpdatedAt = 'updated_at'
}

export type Views_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Views_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Views_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Views_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Views_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Views_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Views_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Views_Set_Input>;
  /** filter the rows which have to be updated */
  where: Views_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Views_Var_Pop_Fields = {
  __typename?: 'views_var_pop_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "views" */
export type Views_Var_Pop_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Views_Var_Samp_Fields = {
  __typename?: 'views_var_samp_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "views" */
export type Views_Var_Samp_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Views_Variance_Fields = {
  __typename?: 'views_variance_fields';
  account_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "views" */
export type Views_Variance_Order_By = {
  account_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

export type FlagshipGetAccountListForFeatureQueryVariables = Exact<{
  featureId: Scalars['String']['input'];
  enabled: Scalars['Boolean']['input'];
}>;


export type FlagshipGetAccountListForFeatureQuery = { __typename?: 'query_root', accounts: Array<{ __typename?: 'accounts', id: number, name?: string | null, account_type: string }>, accounts_aggregate: { __typename?: 'accounts_aggregate', aggregate?: { __typename?: 'accounts_aggregate_fields', count: number } | null } };

export type FlagshipGetAccountListQueryVariables = Exact<{
  take: Scalars['Int']['input'];
  skip: Scalars['Int']['input'];
  search: Scalars['String']['input'];
}>;


export type FlagshipGetAccountListQuery = { __typename?: 'query_root', accounts: Array<{ __typename?: 'accounts', id: number, name?: string | null, account_type: string, size?: string | null }>, accounts_aggregate: { __typename?: 'accounts_aggregate', aggregate?: { __typename?: 'accounts_aggregate_fields', count: number } | null } };

export type FlagshipGetAccountQueryVariables = Exact<{
  accountId: Scalars['Int']['input'];
}>;


export type FlagshipGetAccountQuery = { __typename?: 'query_root', accounts_by_pk?: { __typename?: 'accounts', id: number, name?: string | null, account_type: string, size?: string | null } | null };

export type FlagshipGetFeatureListForAccountQueryVariables = Exact<{
  accountId: Scalars['Int']['input'];
}>;


export type FlagshipGetFeatureListForAccountQuery = { __typename?: 'query_root', features: Array<{ __typename?: 'features', id: string, name: string, description?: string | null, enabled: boolean, created_at: string, updated_at: string, features_accounts: Array<{ __typename?: 'features_accounts', enabled: boolean, created_at: string, updated_at: string }> }>, features_aggregate: { __typename?: 'features_aggregate', aggregate?: { __typename?: 'features_aggregate_fields', count: number } | null } };

export type FlagshipGetFeatureListQueryVariables = Exact<{
  take: Scalars['Int']['input'];
  skip: Scalars['Int']['input'];
  search: Scalars['String']['input'];
}>;


export type FlagshipGetFeatureListQuery = { __typename?: 'query_root', features: Array<{ __typename?: 'features', id: string, name: string, description?: string | null, enabled: boolean, created_at: string, updated_at: string }>, features_aggregate: { __typename?: 'features_aggregate', aggregate?: { __typename?: 'features_aggregate_fields', count: number } | null } };

export type FlagshipGetFeatureQueryVariables = Exact<{
  featureId: Scalars['String']['input'];
}>;


export type FlagshipGetFeatureQuery = { __typename?: 'query_root', features_by_pk?: { __typename?: 'features', id: string, name: string, description?: string | null, enabled: boolean, created_at: string, updated_at: string } | null };

export type FlagshipUpdateFeatureListMutationVariables = Exact<{
  featuresAccounts: Array<Features_Accounts_Insert_Input> | Features_Accounts_Insert_Input;
}>;


export type FlagshipUpdateFeatureListMutation = { __typename?: 'mutation_root', insert_features_accounts?: { __typename?: 'features_accounts_mutation_response', affected_rows: number } | null };
